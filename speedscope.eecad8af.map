{"version":3,"sources":["node_modules/preact/dist/preact.esm.js","node_modules/css-in-js-utils/lib/isPrefixedValue.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/calc.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/crossFade.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/cursor.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/filter.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/flex.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/flexboxIE.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/flexboxOld.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/gradient.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/imageSet.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/position.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/sizing.js","node_modules/hyphenate-style-name/index.js","node_modules/css-in-js-utils/lib/hyphenateProperty.js","node_modules/aphrodite/node_modules/inline-style-prefixer/utils/capitalizeString.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/plugins/transition.js","node_modules/string-hash/index.js","node_modules/aphrodite/node_modules/inline-style-prefixer/utils/prefixProperty.js","node_modules/aphrodite/node_modules/inline-style-prefixer/utils/prefixValue.js","node_modules/aphrodite/node_modules/inline-style-prefixer/utils/addNewValuesOnly.js","node_modules/aphrodite/node_modules/inline-style-prefixer/utils/isObject.js","node_modules/aphrodite/node_modules/inline-style-prefixer/static/createPrefixer.js","node_modules/asap/browser-raw.js","node_modules/asap/browser-asap.js","node_modules/aphrodite/es/index.js","reloadable.tsx","utils.ts","value-formatters.ts","demangle-cpp.ts","profile.ts","import/bg-flamegraph.ts","import/stackprof.ts","import/chrome.ts","import/firefox.ts","node_modules/pako/lib/utils/common.js","node_modules/pako/lib/zlib/trees.js","node_modules/pako/lib/zlib/adler32.js","node_modules/pako/lib/zlib/crc32.js","node_modules/pako/lib/zlib/messages.js","node_modules/pako/lib/zlib/deflate.js","node_modules/pako/lib/utils/strings.js","node_modules/pako/lib/zlib/zstream.js","node_modules/pako/lib/deflate.js","node_modules/pako/lib/zlib/inffast.js","node_modules/pako/lib/zlib/inftrees.js","node_modules/pako/lib/zlib/inflate.js","node_modules/pako/lib/zlib/constants.js","node_modules/pako/lib/zlib/gzheader.js","node_modules/pako/lib/inflate.js","node_modules/pako/index.js","import/instruments.ts","math.ts","color.ts","flamechart-renderer.ts","node_modules/regl/dist/regl.js","rectangle-batch-renderer.ts","overlay-rectangle-renderer.ts","texture-cached-renderer.ts","stats.ts","flamechart-color-pass-renderer.ts","canvas-context.ts","flamechart.ts","style.ts","flamechart-style.ts","text-utils.ts","flamechart-minimap-view.tsx","color-chit.tsx","flamechart-detail-view.tsx","flamechart-pan-zoom-view.tsx","hovertip.tsx","flamechart-view.tsx","hash-params.ts","scrollable-list-view.tsx","profile-table-view.tsx","lru-cache.ts","row-atlas.ts","asm-js.ts","sandwich-view.tsx","application.tsx","speedscope.tsx"],"names":["VNode","options","stack","EMPTY_CHILDREN","h","nodeName","attributes","children","lastSimple","child","simple","i","arguments","length","push","pop","undefined","String","p","key","vnode","extend","obj","props","defer","Promise","resolve","then","bind","setTimeout","cloneElement","slice","call","IS_NON_DIMENSIONAL","items","enqueueRender","component","_dirty","debounceRendering","rerender","list","renderComponent","isSameNodeType","node","hydrating","splitText","_componentConstructor","isNamedNode","normalizedNodeName","toLowerCase","getNodeProps","defaultProps","createNode","isSvg","document","createElementNS","createElement","removeNode","parentNode","removeChild","setAccessor","name","old","value","style","cssText","test","innerHTML","__html","useCapture","replace","substring","addEventListener","eventProxy","removeEventListener","_listeners","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","className","setProperty","e","type","event","mounts","diffLevel","isSvgMode","flushMounts","c","afterMount","componentDidMount","diff","dom","context","mountAll","parent","componentRoot","ownerSVGElement","ret","idiff","appendChild","out","prevSvgMode","_component","nodeValue","createTextNode","replaceChild","vnodeName","buildComponentFromVNode","firstChild","fc","vchildren","a","nextSibling","dangerouslySetInnerHTML","innerDiffNode","isHydrating","originalChildren","j","f","vchild","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","_child","__key","trim","insertBefore","recollectNodeTree","unmountOnly","ref","removeChildren","lastChild","next","previousSibling","diffAttributes","attrs","components","collectComponent","constructor","createComponent","Ctor","inst","prototype","render","Component","doRender","nextBase","splice","state","setComponentProps","opts","_disable","__ref","base","componentWillMount","componentWillReceiveProps","prevContext","prevProps","syncComponentUpdates","isChild","rendered","cbase","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","skip","shouldComponentUpdate","componentWillUpdate","getChildContext","childComponent","toUnmount","childProps","_parentComponent","baseParent","t","componentRef","unshift","componentDidUpdate","afterUpdate","_renderCallbacks","originalComponent","oldDom","isDirectOwner","isOwner","unmountComponent","beforeUnmount","componentWillUnmount","inner","merge","callback","s","preact","flushToStyleTag","w","m","ms","wm","wms","wmms","staticPrefixData","calc","crossFade","cursor","filter","flex","flexboxIE","flexboxOld","gradient","imageSet","position","sizing","transition","_typeof","Symbol","iterator","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Object","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","MAP_EXISTS","Map","OrderedElements","elements","keyOrder","forEach","set","shouldReorder","hasOwnProperty","index","indexOf","nested","Array","isArray","_nested","keys","get","has","addStyleType","styleType","_this","UPPERCASE_RE","UPPERCASE_RE_TO_KEBAB","match","kebabifyStyleName","string","result","isUnitlessNumber","prefixKey","prefix","charAt","toUpperCase","prefixes","prop","stringifyValue","stringifyAndImportantifyValue","importantify","hashString","toString","hashObject","object","JSON","stringify","_toConsumableArray","arr","arr2","from","prefixAll","defaultSelectorHandlers","pseudoSelectors","selector","baseSelector","generateSubtreeStyles","mediaQueries","generated","join","generateCSS","styleTypes","selectorHandlers","stringHandlers","useImportant","merged","plainDeclarations","generatedStyles","val","some","handler","newSelector","apply","warn","generatedRuleset","generateCSSRuleset","runStringHandlers","declarations","stringHandlerKeys","transformRule","transformValue","arrayToObjectKeysReducer","acc","originalElements","reduce","create","prefixedElements","elementNames","originalStyle","originalIndex","rules","_i","_typeof$1","_toConsumableArray$1","styleTag","injectStyleTag","cssRules","querySelector","head","getElementsByTagName","sheet","styleSheet","insertRule","numRules","rule","innerText","fontFamily","map","src","animationName","v","finalVal","valVal","valKey","alreadyInjected","injectionBuffer","isBuffering","injectGeneratedCSSOnce","generatedCSS","_injectionBuffer","Error","injectStyleOnce","definitions","reset","getBufferedStyles","startBuffering","flushToArray","flushToString","getRenderedClassNames","addRenderedClassNames","classNames","processStyleDefinitions","styleDefinitions","classNameBits","definitionBits","_name","_definition","_len","injectAndGetClassName","unminifiedHashFn","str","initialHashFn","hashFn","StyleSheet","sheetDefinition","mappedSheetDefinition","stringVal","rehydrate","renderedClassNames","StyleSheetServer","window","renderStatic","renderFunc","html","cssContent","StyleSheetTestUtils","makeExports","assign","extensions","extensionSelectorHandlers","extension","selectorHandler","concat","minify","shouldMinify","css","_key","Aphrodite","StyleSheet$1","StyleSheetServer$1","StyleSheetTestUtils$1"],"mappings":"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AA,cACA,GAAA,iBACA,GAAA,aACA,GAAA,eACA,GAAA,aACA,GAAA,cACA,GAAA,aACA,GAAA,YACA,GAAA,cACA,GAAA,YACA,GAAA,YACA,GAAA,YACA,GAAA,uBACA,GAAA,uBACA,GAAA,eACA,GAAA,gBACA,GAAA,kBACA,GAAA,iBACA,GAAA,eACA,GAAA,eACA,GAAA,kBACA,GAAA,iBACA,GAAA,iBACA,GAAA,cACA,GAAA,WAEA,GAAA,UAEA,GAAA,cACA,GAAA,OACA,GAAA,OACA,GAAA,WACA,GAAA,YACA,GAAA,QACA,GAAA,SACA,GAAA,YAKA,GAAA,GAHA,QAIA,GAAA,GAHA,SAIA,GAAA,GALA,QAMA,GAAA,GALA,SAOA,GAAA,qBACA,GAAA,sBAEA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAGA,GAAA,MACA,GAAA,MAKA,GAAA,KACA,GAAA,MAEA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,MACA,GAAA,MACA,GAAA,MAEA,GAAA,KACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,KACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MACA,GAAA,MAEA,GAAA,EAEA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,KACA,GAAA,MACA,GAAA,MACA,GAAA,IACA,GAAA,KACA,GAAA,EACA,GAAA,EACA,GAAA,MACA,GAAA,IAEA,GAAA,MACA,GAAA,MAEA,IACA,EAAA,EACA,EAAA,EACA,KAAA,EACA,IAAA,EACA,YAAA,IACA,sBAAA,IACA,YAAA,IACA,sBAAA,IACA,YAAA,IACA,sBAAA,IACA,YAAA,IACA,sBAAA,IACA,iBAAA,MACA,2BAAA,MACA,iBAAA,MACA,2BAAA,MACA,qBAAA,KAMA,IACA,iCACA,2CACA,2CACA,qDACA,iCACA,2CACA,2CACA,sDAGA,IACA,MAAA,IACA,KAAA,IACA,IAAA,IACA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","file":"speedscope.eecad8af.map","sourceRoot":"../..","sourcesContent":["/** Virtual DOM Node */\nfunction VNode() {}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nvar options = {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n  *\t@name syncComponentUpdates\n  *\t@type Boolean\n  *\t@default true\n  */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n  */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n\nvar stack = [];\n\nvar EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nfunction h(nodeName, attributes) {\n\tvar children = EMPTY_CHILDREN,\n\t    lastSimple,\n\t    child,\n\t    simple,\n\t    i;\n\tfor (i = arguments.length; i-- > 2;) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children != null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop !== undefined) {\n\t\t\tfor (i = child.length; i--;) {\n\t\t\t\tstack.push(child[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof child === 'boolean') child = null;\n\n\t\t\tif (simple = typeof nodeName !== 'function') {\n\t\t\t\tif (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t} else if (children === EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t} else {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tvar p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes == null ? undefined : attributes;\n\tp.key = attributes == null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode !== undefined) options.vnode(p);\n\n\treturn p;\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nfunction extend(obj, props) {\n  for (var i in props) {\n    obj[i] = props[i];\n  }return obj;\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\nvar defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virutal DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nfunction cloneElement(vnode, props) {\n  return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);\n}\n\n// DOM properties that should NOT have \"px\" added when numeric\nvar IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n/** Managed queue of dirty components to be re-rendered */\n\nvar items = [];\n\nfunction enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component) == 1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\nfunction rerender() {\n\tvar p,\n\t    list = items;\n\titems = [];\n\twhile (p = list.pop()) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hyrdating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nfunction isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined;\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName;\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nfunction isNamedNode(node, nodeName) {\n  return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nfunction getNodeProps(vnode) {\n  var props = extend({}, vnode.attributes);\n  props.children = vnode.children;\n\n  var defaultProps = vnode.nodeName.defaultProps;\n  if (defaultProps !== undefined) {\n    for (var i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i];\n      }\n    }\n  }\n\n  return props;\n}\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nfunction createNode(nodeName, isSvg) {\n\tvar node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nfunction removeNode(node) {\n\tvar parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nfunction setAccessor(node, name, old, value, isSvg) {\n\tif (name === 'className') name = 'class';\n\n\tif (name === 'key') {\n\t\t// ignore\n\t} else if (name === 'ref') {\n\t\tif (old) old(null);\n\t\tif (value) value(node);\n\t} else if (name === 'class' && !isSvg) {\n\t\tnode.className = value || '';\n\t} else if (name === 'style') {\n\t\tif (!value || typeof value === 'string' || typeof old === 'string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value === 'object') {\n\t\t\tif (typeof old !== 'string') {\n\t\t\t\tfor (var i in old) {\n\t\t\t\t\tif (!(i in value)) node.style[i] = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i in value) {\n\t\t\t\tnode.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];\n\t\t\t}\n\t\t}\n\t} else if (name === 'dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t} else if (name[0] == 'o' && name[1] == 'n') {\n\t\tvar useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t} else {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value == null ? '' : value);\n\t\tif (value == null || value === false) node.removeAttribute(name);\n\t} else {\n\t\tvar ns = isSvg && name !== (name = name.replace(/^xlink\\:?/, ''));\n\t\tif (value == null || value === false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);\n\t\t} else if (typeof value !== 'function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nvar mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nvar diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nvar isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nvar hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nfunction flushMounts() {\n\tvar c;\n\twhile (c = mounts.pop()) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent != null && parent.ownerSVGElement !== undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom != null && !('__preactattr_' in dom);\n\t}\n\n\tvar ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode !== parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (! --diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tvar out = dom,\n\t    prevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode == null || typeof vnode === 'boolean') vnode = '';\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode === 'string' || typeof vnode === 'number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue != vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t} else {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout['__preactattr_'] = true;\n\n\t\treturn out;\n\t}\n\n\t// If the VNode represents a Component, perform a component diff:\n\tvar vnodeName = vnode.nodeName;\n\tif (typeof vnodeName === 'function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) {\n\t\t\t\tout.appendChild(dom.firstChild);\n\t\t\t} // if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\tvar fc = out.firstChild,\n\t    props = out['__preactattr_'],\n\t    vchildren = vnode.children;\n\n\tif (props == null) {\n\t\tprops = out['__preactattr_'] = {};\n\t\tfor (var a = out.attributes, i = a.length; i--;) {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t}\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {\n\t\tif (fc.nodeValue != vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc != null) {\n\t\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);\n\t\t}\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tvar originalChildren = dom.childNodes,\n\t    children = [],\n\t    keyed = {},\n\t    keyedLen = 0,\n\t    min = 0,\n\t    len = originalChildren.length,\n\t    childrenLen = 0,\n\t    vlen = vchildren ? vchildren.length : 0,\n\t    j,\n\t    c,\n\t    f,\n\t    vchild,\n\t    child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len !== 0) {\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar _child = originalChildren[i],\n\t\t\t    props = _child['__preactattr_'],\n\t\t\t    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;\n\t\t\tif (key != null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = _child;\n\t\t\t} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = _child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen !== 0) {\n\t\tfor (var i = 0; i < vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tvar key = vchild.key;\n\t\t\tif (key != null) {\n\t\t\t\tif (keyedLen && keyed[key] !== undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min < childrenLen) {\n\t\t\t\t\tfor (j = min; j < childrenLen; j++) {\n\t\t\t\t\t\tif (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\t\tif (j === childrenLen - 1) childrenLen--;\n\t\t\t\t\t\t\tif (j === min) min++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child !== dom && child !== f) {\n\t\t\t\tif (f == null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t} else if (child === f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t} else {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (var i in keyed) {\n\t\t\tif (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);\n\t\t}\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min <= childrenLen) {\n\t\tif ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);\n\t}\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nfunction recollectNodeTree(node, unmountOnly) {\n\tvar component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t} else {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);\n\n\t\tif (unmountOnly === false || node['__preactattr_'] == null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nfunction removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tvar next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tvar name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name] != null) && old[name] != null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nvar components = {};\n\n/** Reclaim a component for later re-use by the recycler. */\nfunction collectComponent(component) {\n\tvar name = component.constructor.name;\n\t(components[name] || (components[name] = [])).push(component);\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nfunction createComponent(Ctor, props, context) {\n\tvar list = components[Ctor.name],\n\t    inst;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t} else {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\tif (list) {\n\t\tfor (var i = list.length; i--;) {\n\t\t\tif (list[i].constructor === Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif (component.__ref = props.ref) delete props.ref;\n\tif (component.__key = props.key) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t} else if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context !== component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts !== 0) {\n\t\tif (opts === 1 || options.syncComponentUpdates !== false || !component.base) {\n\t\t\trenderComponent(component, 1, mountAll);\n\t\t} else {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tvar props = component.props,\n\t    state = component.state,\n\t    context = component.context,\n\t    previousProps = component.prevProps || props,\n\t    previousState = component.prevState || state,\n\t    previousContext = component.prevContext || context,\n\t    isUpdate = component.base,\n\t    nextBase = component.nextBase,\n\t    initialBase = isUpdate || nextBase,\n\t    initialChildComponent = component._component,\n\t    skip = false,\n\t    rendered,\n\t    inst,\n\t    cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t} else if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tvar childComponent = rendered && rendered.nodeName,\n\t\t    toUnmount,\n\t\t    base;\n\n\t\tif (typeof childComponent === 'function') {\n\t\t\t// set up high order component link\n\n\t\t\tvar childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor === childComponent && childProps.key == inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, 1, context, false);\n\t\t\t} else {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, 0, context, false);\n\t\t\t\trenderComponent(inst, 1, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t} else {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts === 1) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base !== initialBase && inst !== initialChildComponent) {\n\t\t\tvar baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base !== baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tvar componentRef = component,\n\t\t\t    t = component;\n\t\t\twhile (t = t._parentComponent) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t} else if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tif (component._renderCallbacks != null) {\n\t\twhile (component._renderCallbacks.length) {\n\t\t\tcomponent._renderCallbacks.pop().call(component);\n\t\t}\n\t}\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tvar c = dom && dom._component,\n\t    originalComponent = c,\n\t    oldDom = dom,\n\t    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n\t    isOwner = isDirectOwner,\n\t    props = getNodeProps(vnode);\n\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\tisOwner = c.constructor === vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, 3, context, mountAll);\n\t\tdom = c.base;\n\t} else {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, 1, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom !== oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tvar base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tvar inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t} else if (base) {\n\t\tif (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\tcollectComponent(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n}\n\n/** Base Component class.\n *\tProvides `setState()` and `forceUpdate()`, which trigger rendering.\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nfunction Component(props, context) {\n\tthis._dirty = true;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.context = context;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.props = props;\n\n\t/** @public\n  *\t@type {object}\n  */\n\tthis.state = this.state || {};\n}\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.\n  *\t@param {object} nextProps\n  *\t@param {object} nextState\n  *\t@param {object} nextContext\n  *\t@returns {Boolean} should the component re-render\n  *\t@name shouldComponentUpdate\n  *\t@function\n  */\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n  *\t@param {object} state\t\tA hash of state properties to update with new values\n  *\t@param {function} callback\tA function to be called once component state is updated\n  */\n\tsetState: function setState(state, callback) {\n\t\tvar s = this.state;\n\t\tif (!this.prevState) this.prevState = extend({}, s);\n\t\textend(s, typeof state === 'function' ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n  *\t@param {function} callback\t\tA function to be called after component is re-rendered.\n  *\t@private\n  */\n\tforceUpdate: function forceUpdate(callback) {\n\t\tif (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t\trenderComponent(this, 2);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n  *\t@param {object} state\t\tThe component's current state\n  *\t@param {object} context\t\tContext object (if a parent component has provided context)\n  *\t@returns VNode\n  */\n\trender: function render() {}\n});\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nfunction render(vnode, parent, merge) {\n  return diff(merge, vnode, {}, false, parent, false);\n}\n\nvar preact = {\n\th: h,\n\tcreateElement: h,\n\tcloneElement: cloneElement,\n\tComponent: Component,\n\trender: render,\n\trerender: rerender,\n\toptions: options\n};\n\nexport { h, h as createElement, cloneElement, Component, render, rerender, options };\nexport default preact;\n//# sourceMappingURL=preact.esm.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPrefixedValue;\nvar regex = /-webkit-|-moz-|-ms-/;\n\nfunction isPrefixedValue(value) {\n  return typeof value === 'string' && regex.test(value);\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calc;\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = [\"-webkit-\", \"-moz-\", \"\"];\nfunction calc(property, value) {\n  if (typeof value === \"string\" && !(0, _isPrefixedValue2.default)(value) && value.indexOf(\"calc(\") > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/calc\\(/g, prefix + \"calc(\");\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossFade;\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#search=cross-fade\nvar prefixes = [\"-webkit-\", \"\"];\nfunction crossFade(property, value) {\n  if (typeof value === \"string\" && !(0, _isPrefixedValue2.default)(value) && value.indexOf(\"cross-fade(\") > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/cross-fade\\(/g, prefix + \"cross-fade(\");\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cursor;\nvar prefixes = [\"-webkit-\", \"-moz-\", \"\"];\n\nvar values = {\n  \"zoom-in\": true,\n  \"zoom-out\": true,\n  grab: true,\n  grabbing: true\n};\n\nfunction cursor(property, value) {\n  if (property === \"cursor\" && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-filter-function\nvar prefixes = [\"-webkit-\", \"\"];\nfunction filter(property, value) {\n  if (typeof value === \"string\" && !(0, _isPrefixedValue2.default)(value) && value.indexOf(\"filter(\") > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/filter\\(/g, prefix + \"filter(\");\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flex;\nvar values = {\n  flex: [\"-webkit-box\", \"-moz-box\", \"-ms-flexbox\", \"-webkit-flex\", \"flex\"],\n  \"inline-flex\": [\"-webkit-inline-box\", \"-moz-inline-box\", \"-ms-inline-flexbox\", \"-webkit-inline-flex\", \"inline-flex\"]\n};\n\nfunction flex(property, value) {\n  if (property === \"display\" && values.hasOwnProperty(value)) {\n    return values[value];\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxIE;\nvar alternativeValues = {\n  \"space-around\": \"distribute\",\n  \"space-between\": \"justify\",\n  \"flex-start\": \"start\",\n  \"flex-end\": \"end\"\n};\nvar alternativeProps = {\n  alignContent: \"msFlexLinePack\",\n  alignSelf: \"msFlexItemAlign\",\n  alignItems: \"msFlexAlign\",\n  justifyContent: \"msFlexPack\",\n  order: \"msFlexOrder\",\n  flexGrow: \"msFlexPositive\",\n  flexShrink: \"msFlexNegative\",\n  flexBasis: \"msFlexPreferredSize\"\n};\n\nfunction flexboxIE(property, value, style) {\n  if (alternativeProps.hasOwnProperty(property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxOld;\nvar alternativeValues = {\n  \"space-around\": \"justify\",\n  \"space-between\": \"justify\",\n  \"flex-start\": \"start\",\n  \"flex-end\": \"end\",\n  \"wrap-reverse\": \"multiple\",\n  wrap: \"multiple\"\n};\n\nvar alternativeProps = {\n  alignItems: \"WebkitBoxAlign\",\n  justifyContent: \"WebkitBoxPack\",\n  flexWrap: \"WebkitBoxLines\"\n};\n\nfunction flexboxOld(property, value, style) {\n  if (property === \"flexDirection\" && typeof value === \"string\") {\n    if (value.indexOf(\"column\") > -1) {\n      style.WebkitBoxOrient = \"vertical\";\n    } else {\n      style.WebkitBoxOrient = \"horizontal\";\n    }\n    if (value.indexOf(\"reverse\") > -1) {\n      style.WebkitBoxDirection = \"reverse\";\n    } else {\n      style.WebkitBoxDirection = \"normal\";\n    }\n  }\n  if (alternativeProps.hasOwnProperty(property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = [\"-webkit-\", \"-moz-\", \"\"];\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\n\nfunction gradient(property, value) {\n  if (typeof value === \"string\" && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = imageSet;\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-image-set\nvar prefixes = [\"-webkit-\", \"\"];\nfunction imageSet(property, value) {\n  if (typeof value === \"string\" && !(0, _isPrefixedValue2.default)(value) && value.indexOf(\"image-set(\") > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/image-set\\(/g, prefix + \"image-set(\");\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\nfunction position(property, value) {\n  if (property === \"position\" && value === \"sticky\") {\n    return [\"-webkit-sticky\", \"sticky\"];\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sizing;\nvar prefixes = [\"-webkit-\", \"-moz-\", \"\"];\n\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\nvar values = {\n  \"min-content\": true,\n  \"max-content\": true,\n  \"fill-available\": true,\n  \"fit-content\": true,\n  \"contain-floats\": true\n};\n\nfunction sizing(property, value) {\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(string) {\n    return string in cache\n    ? cache[string]\n    : cache[string] = string\n      .replace(uppercasePattern, '-$&')\n      .toLowerCase()\n      .replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hyphenateProperty;\n\nvar _hyphenateStyleName = require('hyphenate-style-name');\n\nvar _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hyphenateProperty(property) {\n  return (0, _hyphenateStyleName2.default)(property);\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalizeString;\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transition;\n\nvar _hyphenateProperty = require(\"css-in-js-utils/lib/hyphenateProperty\");\n\nvar _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);\n\nvar _isPrefixedValue = require(\"css-in-js-utils/lib/isPrefixedValue\");\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nvar _capitalizeString = require(\"../../utils/capitalizeString\");\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\n\nvar prefixMapping = {\n  Webkit: \"-webkit-\",\n  Moz: \"-moz-\",\n  ms: \"-ms-\"\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if ((0, _isPrefixedValue2.default)(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== \"order\") {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(\",\");\n  }\n\n  return multipleValues.join(\",\");\n}\n\nfunction transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === \"string\" && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(\",\");\n\n    if (property.indexOf(\"Webkit\") > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(\",\");\n\n    if (property.indexOf(\"Moz\") > -1) {\n      return mozOutput;\n    }\n\n    style[\"Webkit\" + (0, _capitalizeString2.default)(property)] = webkitOutput;\n    style[\"Moz\" + (0, _capitalizeString2.default)(property)] = mozOutput;\n    return outputValue;\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i    = str.length;\n\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n}\n\nmodule.exports = hash;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixProperty;\n\nvar _capitalizeString = require(\"./capitalizeString\");\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prefixProperty(prefixProperties, property, style) {\n  if (prefixProperties.hasOwnProperty(property)) {\n    var newStyle = {};\n    var requiredPrefixes = prefixProperties[property];\n    var capitalizedProperty = (0, _capitalizeString2.default)(property);\n    var keys = Object.keys(style);\n    for (var i = 0; i < keys.length; i++) {\n      var styleProperty = keys[i];\n      if (styleProperty === property) {\n        for (var j = 0; j < requiredPrefixes.length; j++) {\n          newStyle[requiredPrefixes[j] + capitalizedProperty] = style[property];\n        }\n      }\n      newStyle[styleProperty] = style[styleProperty];\n    }\n    return newStyle;\n  }\n  return style;\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixValue;\nfunction prefixValue(plugins, property, value, style, metaData) {\n  for (var i = 0, len = plugins.length; i < len; ++i) {\n    var processedValue = plugins[i](property, value, style, metaData);\n\n    // we can stop processing if a value is returned\n    // as all plugin criteria are unique\n    if (processedValue) {\n      return processedValue;\n    }\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addNewValuesOnly;\nfunction addIfNew(list, value) {\n  if (list.indexOf(value) === -1) {\n    list.push(value);\n  }\n}\n\nfunction addNewValuesOnly(list, values) {\n  if (Array.isArray(values)) {\n    for (var i = 0, len = values.length; i < len; ++i) {\n      addIfNew(list, values[i]);\n    }\n  } else {\n    addIfNew(list, values);\n  }\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isObject;\nfunction isObject(value) {\n  return value instanceof Object && !Array.isArray(value);\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPrefixer;\n\nvar _prefixProperty = require(\"../utils/prefixProperty\");\n\nvar _prefixProperty2 = _interopRequireDefault(_prefixProperty);\n\nvar _prefixValue = require(\"../utils/prefixValue\");\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nvar _addNewValuesOnly = require(\"../utils/addNewValuesOnly\");\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require(\"../utils/isObject\");\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n\n  function prefixAll(style) {\n    for (var property in style) {\n      var value = style[property];\n\n      // handle nested objects\n      if ((0, _isObject2.default)(value)) {\n        style[property] = prefixAll(value);\n        // handle array values\n      } else if (Array.isArray(value)) {\n        var combinedValue = [];\n\n        for (var i = 0, len = value.length; i < len; ++i) {\n          var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, prefixMap);\n          (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n        }\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (combinedValue.length > 0) {\n          style[property] = combinedValue;\n        }\n      } else {\n        var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (_processedValue) {\n          style[property] = _processedValue;\n        }\n\n        style = (0, _prefixProperty2.default)(prefixMap, property, style);\n      }\n    }\n\n    return style;\n  }\n\n  return prefixAll;\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n","import calc from 'inline-style-prefixer/static/plugins/calc';\nimport crossFade from 'inline-style-prefixer/static/plugins/crossFade';\nimport cursor from 'inline-style-prefixer/static/plugins/cursor';\nimport filter from 'inline-style-prefixer/static/plugins/filter';\nimport flex from 'inline-style-prefixer/static/plugins/flex';\nimport flexboxIE from 'inline-style-prefixer/static/plugins/flexboxIE';\nimport flexboxOld from 'inline-style-prefixer/static/plugins/flexboxOld';\nimport gradient from 'inline-style-prefixer/static/plugins/gradient';\nimport imageSet from 'inline-style-prefixer/static/plugins/imageSet';\nimport position from 'inline-style-prefixer/static/plugins/position';\nimport sizing from 'inline-style-prefixer/static/plugins/sizing';\nimport transition from 'inline-style-prefixer/static/plugins/transition';\nimport stringHash from 'string-hash';\nimport createPrefixer from 'inline-style-prefixer/static/createPrefixer';\nimport asap from 'asap';\n\nvar w = [\"Webkit\"];\nvar m = [\"Moz\"];\nvar ms = [\"ms\"];\nvar wm = [\"Webkit\", \"Moz\"];\nvar wms = [\"Webkit\", \"ms\"];\nvar wmms = [\"Webkit\", \"Moz\", \"ms\"];\n\nvar staticPrefixData = {\n  plugins: [calc, crossFade, cursor, filter, flex, flexboxIE, flexboxOld, gradient, imageSet, position, sizing, transition],\n  prefixMap: { \"transform\": wms, \"transformOrigin\": wms, \"transformOriginX\": wms, \"transformOriginY\": wms, \"backfaceVisibility\": w, \"perspective\": w, \"perspectiveOrigin\": w, \"transformStyle\": w, \"transformOriginZ\": w, \"animation\": w, \"animationDelay\": w, \"animationDirection\": w, \"animationFillMode\": w, \"animationDuration\": w, \"animationIterationCount\": w, \"animationName\": w, \"animationPlayState\": w, \"animationTimingFunction\": w, \"appearance\": wm, \"userSelect\": wmms, \"fontKerning\": w, \"textEmphasisPosition\": w, \"textEmphasis\": w, \"textEmphasisStyle\": w, \"textEmphasisColor\": w, \"boxDecorationBreak\": w, \"clipPath\": w, \"maskImage\": w, \"maskMode\": w, \"maskRepeat\": w, \"maskPosition\": w, \"maskClip\": w, \"maskOrigin\": w, \"maskSize\": w, \"maskComposite\": w, \"mask\": w, \"maskBorderSource\": w, \"maskBorderMode\": w, \"maskBorderSlice\": w, \"maskBorderWidth\": w, \"maskBorderOutset\": w, \"maskBorderRepeat\": w, \"maskBorder\": w, \"maskType\": w, \"textDecorationStyle\": wm, \"textDecorationSkip\": wm, \"textDecorationLine\": wm, \"textDecorationColor\": wm, \"filter\": w, \"fontFeatureSettings\": wm, \"breakAfter\": wmms, \"breakBefore\": wmms, \"breakInside\": wmms, \"columnCount\": wm, \"columnFill\": wm, \"columnGap\": wm, \"columnRule\": wm, \"columnRuleColor\": wm, \"columnRuleStyle\": wm, \"columnRuleWidth\": wm, \"columns\": wm, \"columnSpan\": wm, \"columnWidth\": wm, \"writingMode\": wms, \"flex\": wms, \"flexBasis\": w, \"flexDirection\": wms, \"flexGrow\": w, \"flexFlow\": wms, \"flexShrink\": w, \"flexWrap\": wms, \"alignContent\": w, \"alignItems\": w, \"alignSelf\": w, \"justifyContent\": w, \"order\": w, \"transitionDelay\": w, \"transitionDuration\": w, \"transitionProperty\": w, \"transitionTimingFunction\": w, \"backdropFilter\": w, \"scrollSnapType\": wms, \"scrollSnapPointsX\": wms, \"scrollSnapPointsY\": wms, \"scrollSnapDestination\": wms, \"scrollSnapCoordinate\": wms, \"shapeImageThreshold\": w, \"shapeImageMargin\": w, \"shapeImageOutside\": w, \"hyphens\": wmms, \"flowInto\": wms, \"flowFrom\": wms, \"regionFragment\": wms, \"boxSizing\": m, \"textAlignLast\": m, \"tabSize\": m, \"wrapFlow\": ms, \"wrapThrough\": ms, \"wrapMargin\": ms, \"touchAction\": ms, \"gridTemplateColumns\": ms, \"gridTemplateRows\": ms, \"gridTemplateAreas\": ms, \"gridTemplate\": ms, \"gridAutoColumns\": ms, \"gridAutoRows\": ms, \"gridAutoFlow\": ms, \"grid\": ms, \"gridRowStart\": ms, \"gridColumnStart\": ms, \"gridRowEnd\": ms, \"gridRow\": ms, \"gridColumn\": ms, \"gridColumnEnd\": ms, \"gridColumnGap\": ms, \"gridRowGap\": ms, \"gridArea\": ms, \"gridGap\": ms, \"textSizeAdjust\": wms, \"borderImage\": w, \"borderImageOutset\": w, \"borderImageRepeat\": w, \"borderImageSlice\": w, \"borderImageSource\": w, \"borderImageWidth\": w }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MAP_EXISTS = typeof Map !== 'undefined';\n\nvar OrderedElements = function () {\n    /* ::\n    elements: {[string]: any};\n    keyOrder: string[];\n    */\n\n    function OrderedElements() {\n        _classCallCheck(this, OrderedElements);\n\n        this.elements = {};\n        this.keyOrder = [];\n    }\n\n    _createClass(OrderedElements, [{\n        key: 'forEach',\n        value: function () {\n            function forEach(callback /* : (string, any) => void */) {\n                for (var i = 0; i < this.keyOrder.length; i++) {\n                    // (value, key) to match Map's API\n                    callback(this.elements[this.keyOrder[i]], this.keyOrder[i]);\n                }\n            }\n\n            return forEach;\n        }()\n    }, {\n        key: 'set',\n        value: function () {\n            function set(key /* : string */, value /* : any */, shouldReorder /* : ?boolean */) {\n                if (!this.elements.hasOwnProperty(key)) {\n                    this.keyOrder.push(key);\n                } else if (shouldReorder) {\n                    var index = this.keyOrder.indexOf(key);\n                    this.keyOrder.splice(index, 1);\n                    this.keyOrder.push(key);\n                }\n\n                if (value == null) {\n                    this.elements[key] = value;\n                    return;\n                }\n\n                if (MAP_EXISTS && value instanceof Map || value instanceof OrderedElements) {\n                    // We have found a nested Map, so we need to recurse so that all\n                    // of the nested objects and Maps are merged properly.\n                    var nested = this.elements.hasOwnProperty(key) ? this.elements[key] : new OrderedElements();\n                    value.forEach(function (value, key) {\n                        nested.set(key, value, shouldReorder);\n                    });\n                    this.elements[key] = nested;\n                    return;\n                }\n\n                if (!Array.isArray(value) && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n                    // We have found a nested object, so we need to recurse so that all\n                    // of the nested objects and Maps are merged properly.\n                    var _nested = this.elements.hasOwnProperty(key) ? this.elements[key] : new OrderedElements();\n                    var keys = Object.keys(value);\n                    for (var i = 0; i < keys.length; i += 1) {\n                        _nested.set(keys[i], value[keys[i]], shouldReorder);\n                    }\n                    this.elements[key] = _nested;\n                    return;\n                }\n\n                this.elements[key] = value;\n            }\n\n            return set;\n        }()\n    }, {\n        key: 'get',\n        value: function () {\n            function get(key /* : string */) /* : any */{\n                return this.elements[key];\n            }\n\n            return get;\n        }()\n    }, {\n        key: 'has',\n        value: function () {\n            function has(key /* : string */) /* : boolean */{\n                return this.elements.hasOwnProperty(key);\n            }\n\n            return has;\n        }()\n    }, {\n        key: 'addStyleType',\n        value: function () {\n            function addStyleType(styleType /* : any */) /* : void */{\n                var _this = this;\n\n                if (MAP_EXISTS && styleType instanceof Map || styleType instanceof OrderedElements) {\n                    styleType.forEach(function (value, key) {\n                        _this.set(key, value, true);\n                    });\n                } else {\n                    var keys = Object.keys(styleType);\n                    for (var i = 0; i < keys.length; i++) {\n                        this.set(keys[i], styleType[keys[i]], true);\n                    }\n                }\n            }\n\n            return addStyleType;\n        }()\n    }]);\n\n    return OrderedElements;\n}();\n\n/* ::\ntype ObjectMap = { [id:string]: any };\n*/\n\nvar UPPERCASE_RE = /([A-Z])/g;\nvar UPPERCASE_RE_TO_KEBAB = function UPPERCASE_RE_TO_KEBAB(match /* : string */) {\n    return (/* : string */'-' + String(match.toLowerCase())\n    );\n};\n\nvar kebabifyStyleName = function kebabifyStyleName(string /* : string */) /* : string */{\n    var result = string.replace(UPPERCASE_RE, UPPERCASE_RE_TO_KEBAB);\n    if (result[0] === 'm' && result[1] === 's' && result[2] === '-') {\n        return '-' + String(result);\n    }\n    return result;\n};\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n * Taken from React's CSSProperty.js\n */\nvar isUnitlessNumber = {\n    animationIterationCount: true,\n    borderImageOutset: true,\n    borderImageSlice: true,\n    borderImageWidth: true,\n    boxFlex: true,\n    boxFlexGroup: true,\n    boxOrdinalGroup: true,\n    columnCount: true,\n    flex: true,\n    flexGrow: true,\n    flexPositive: true,\n    flexShrink: true,\n    flexNegative: true,\n    flexOrder: true,\n    gridRow: true,\n    gridColumn: true,\n    fontWeight: true,\n    lineClamp: true,\n    lineHeight: true,\n    opacity: true,\n    order: true,\n    orphans: true,\n    tabSize: true,\n    widows: true,\n    zIndex: true,\n    zoom: true,\n\n    // SVG-related properties\n    fillOpacity: true,\n    floodOpacity: true,\n    stopOpacity: true,\n    strokeDasharray: true,\n    strokeDashoffset: true,\n    strokeMiterlimit: true,\n    strokeOpacity: true,\n    strokeWidth: true\n};\n\n/**\n * Taken from React's CSSProperty.js\n *\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n    return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n * Taken from React's CSSProperty.js\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n// Taken from React's CSSProperty.js\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n    prefixes.forEach(function (prefix) {\n        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n    });\n});\n\nvar stringifyValue = function stringifyValue(key /* : string */\n, prop /* : any */\n) /* : string */{\n    if (typeof prop === \"number\") {\n        if (isUnitlessNumber[key]) {\n            return \"\" + prop;\n        } else {\n            return prop + \"px\";\n        }\n    } else {\n        return '' + prop;\n    }\n};\n\nvar stringifyAndImportantifyValue = function stringifyAndImportantifyValue(key /* : string */\n, prop /* : any */\n) {\n    return (/* : string */importantify(stringifyValue(key, prop))\n    );\n};\n\n// Turn a string into a hash string of base-36 values (using letters and numbers)\n// eslint-disable-next-line no-unused-vars\nvar hashString = function hashString(string /* : string */, key /* : ?string */) {\n    return (/* string */stringHash(string).toString(36)\n    );\n};\n\n// Hash a javascript object using JSON.stringify. This is very fast, about 3\n// microseconds on my computer for a sample object:\n// http://jsperf.com/test-hashfnv32a-hash/5\n//\n// Note that this uses JSON.stringify to stringify the objects so in order for\n// this to produce consistent hashes browsers need to have a consistent\n// ordering of objects. Ben Alpert says that Facebook depends on this, so we\n// can probably depend on this too.\nvar hashObject = function hashObject(object /* : ObjectMap */) {\n    return (/* : string */hashString(JSON.stringify(object))\n    );\n};\n\n// Given a single style value string like the \"b\" from \"a: b;\", adds !important\n// to generate \"b !important\".\nvar importantify = function importantify(string /* : string */) {\n    return (/* : string */\n        // Bracket string character access is very fast, and in the default case we\n        // normally don't expect there to be \"!important\" at the end of the string\n        // so we can use this simple check to take an optimized path. If there\n        // happens to be a \"!\" in this position, we follow up with a more thorough\n        // check.\n        string[string.length - 10] === '!' && string.slice(-11) === ' !important' ? string : String(string) + ' !important'\n    );\n};\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar prefixAll = createPrefixer(staticPrefixData);\n\n/* ::\nimport type { SheetDefinition } from './index.js';\ntype StringHandlers = { [id:string]: Function };\ntype SelectorCallback = (selector: string) => string[];\nexport type SelectorHandler = (\n    selector: string,\n    baseSelector: string,\n    callback: SelectorCallback\n) => string[] | string | null;\n*/\n\n/**\n * `selectorHandlers` are functions which handle special selectors which act\n * differently than normal style definitions. These functions look at the\n * current selector and can generate CSS for the styles in their subtree by\n * calling the callback with a new selector.\n *\n * For example, when generating styles with a base selector of '.foo' and the\n * following styles object:\n *\n *   {\n *     ':nth-child(2n)': {\n *       ':hover': {\n *         color: 'red'\n *       }\n *     }\n *   }\n *\n * when we reach the ':hover' style, we would call our selector handlers like\n *\n *   handler(':hover', '.foo:nth-child(2n)', callback)\n *\n * Since our `pseudoSelectors` handles ':hover' styles, that handler would call\n * the callback like\n *\n *   callback('.foo:nth-child(2n):hover')\n *\n * to generate its subtree `{ color: 'red' }` styles with a\n * '.foo:nth-child(2n):hover' selector. The callback would return an array of CSS\n * rules like\n *\n *   ['.foo:nth-child(2n):hover{color:red !important;}']\n *\n * and the handler would then return that resulting CSS.\n *\n * `defaultSelectorHandlers` is the list of default handlers used in a call to\n * `generateCSS`.\n *\n * @name SelectorHandler\n * @function\n * @param {string} selector: The currently inspected selector. ':hover' in the\n *     example above.\n * @param {string} baseSelector: The selector of the parent styles.\n *     '.foo:nth-child(2n)' in the example above.\n * @param {function} generateSubtreeStyles: A function which can be called to\n *     generate CSS for the subtree of styles corresponding to the selector.\n *     Accepts a new baseSelector to use for generating those styles.\n * @returns {string[] | string | null} The generated CSS for this selector, or\n *     null if we don't handle this selector.\n */\nvar defaultSelectorHandlers /* : SelectorHandler[] */ = [\n// Handle pseudo-selectors, like :hover and :nth-child(3n)\nfunction () {\n    function pseudoSelectors(selector, baseSelector, generateSubtreeStyles) {\n        if (selector[0] !== \":\") {\n            return null;\n        }\n        return generateSubtreeStyles(baseSelector + selector);\n    }\n\n    return pseudoSelectors;\n}(),\n\n// Handle media queries (or font-faces)\nfunction () {\n    function mediaQueries(selector, baseSelector, generateSubtreeStyles) {\n        if (selector[0] !== \"@\") {\n            return null;\n        }\n        // Generate the styles normally, and then wrap them in the media query.\n        var generated = generateSubtreeStyles(baseSelector);\n        return [String(selector) + '{' + String(generated.join('')) + '}'];\n    }\n\n    return mediaQueries;\n}()];\n\n/**\n * Generate CSS for a selector and some styles.\n *\n * This function handles the media queries and pseudo selectors that can be used\n * in aphrodite styles.\n *\n * @param {string} selector: A base CSS selector for the styles to be generated\n *     with.\n * @param {Object} styleTypes: A list of properties of the return type of\n *     StyleSheet.create, e.g. [styles.red, styles.blue].\n * @param {Array.<SelectorHandler>} selectorHandlers: A list of selector\n *     handlers to use for handling special selectors. See\n *     `defaultSelectorHandlers`.\n * @param stringHandlers: See `generateCSSRuleset`\n * @param useImportant: See `generateCSSRuleset`\n *\n * To actually generate the CSS special-construct-less styles are passed to\n * `generateCSSRuleset`.\n *\n * For instance, a call to\n *\n *     generateCSS(\".foo\", [{\n *       color: \"red\",\n *       \"@media screen\": {\n *         height: 20,\n *         \":hover\": {\n *           backgroundColor: \"black\"\n *         }\n *       },\n *       \":active\": {\n *         fontWeight: \"bold\"\n *       }\n *     }], defaultSelectorHandlers);\n *\n * with the default `selectorHandlers` will make 5 calls to\n * `generateCSSRuleset`:\n *\n *     generateCSSRuleset(\".foo\", { color: \"red\" }, ...)\n *     generateCSSRuleset(\".foo:active\", { fontWeight: \"bold\" }, ...)\n *     // These 2 will be wrapped in @media screen {}\n *     generateCSSRuleset(\".foo\", { height: 20 }, ...)\n *     generateCSSRuleset(\".foo:hover\", { backgroundColor: \"black\" }, ...)\n */\nvar generateCSS = function generateCSS(selector /* : string */\n, styleTypes /* : SheetDefinition[] */\n, selectorHandlers /* : SelectorHandler[] */\n, stringHandlers /* : StringHandlers */\n, useImportant /* : boolean */\n) /* : string[] */{\n    var merged = new OrderedElements();\n\n    for (var i = 0; i < styleTypes.length; i++) {\n        merged.addStyleType(styleTypes[i]);\n    }\n\n    var plainDeclarations = new OrderedElements();\n    var generatedStyles = [];\n\n    // TODO(emily): benchmark this to see if a plain for loop would be faster.\n    merged.forEach(function (val, key) {\n        // For each key, see if one of the selector handlers will handle these\n        // styles.\n        var foundHandler = selectorHandlers.some(function (handler) {\n            var result = handler(key, selector, function (newSelector) {\n                return generateCSS(newSelector, [val], selectorHandlers, stringHandlers, useImportant);\n            });\n            if (result != null) {\n                // If the handler returned something, add it to the generated\n                // CSS and stop looking for another handler.\n                if (Array.isArray(result)) {\n                    generatedStyles.push.apply(generatedStyles, _toConsumableArray(result));\n                } else {\n                    // eslint-disable-next-line\n                    console.warn('WARNING: Selector handlers should return an array of rules.' + 'Returning a string containing multiple rules is deprecated.', handler);\n                    generatedStyles.push('@media all {' + String(result) + '}');\n                }\n                return true;\n            }\n        });\n        // If none of the handlers handled it, add it to the list of plain\n        // style declarations.\n        if (!foundHandler) {\n            plainDeclarations.set(key, val, true);\n        }\n    });\n    var generatedRuleset = generateCSSRuleset(selector, plainDeclarations, stringHandlers, useImportant, selectorHandlers);\n\n    if (generatedRuleset) {\n        generatedStyles.unshift(generatedRuleset);\n    }\n\n    return generatedStyles;\n};\n\n/**\n * Helper method of generateCSSRuleset to facilitate custom handling of certain\n * CSS properties. Used for e.g. font families.\n *\n * See generateCSSRuleset for usage and documentation of paramater types.\n */\nvar runStringHandlers = function runStringHandlers(declarations /* : OrderedElements */\n, stringHandlers /* : StringHandlers */\n, selectorHandlers /* : SelectorHandler[] */\n) /* : void */{\n    if (!stringHandlers) {\n        return;\n    }\n\n    var stringHandlerKeys = Object.keys(stringHandlers);\n    for (var i = 0; i < stringHandlerKeys.length; i++) {\n        var key = stringHandlerKeys[i];\n        if (declarations.has(key)) {\n            // A declaration exists for this particular string handler, so we\n            // need to let the string handler interpret the declaration first\n            // before proceeding.\n            //\n            // TODO(emily): Pass in a callback which generates CSS, similar to\n            // how our selector handlers work, instead of passing in\n            // `selectorHandlers` and have them make calls to `generateCSS`\n            // themselves. Right now, this is impractical because our string\n            // handlers are very specialized and do complex things.\n            declarations.set(key, stringHandlers[key](declarations.get(key), selectorHandlers),\n\n            // Preserve order here, since we are really replacing an\n            // unprocessed style with a processed style, not overriding an\n            // earlier style\n            false);\n        }\n    }\n};\n\nvar transformRule = function transformRule(key /* : string */\n, value /* : string */\n, transformValue /* : function */\n) {\n    return (/* : string */String(kebabifyStyleName(key)) + ':' + String(transformValue(key, value)) + ';'\n    );\n};\n\nvar arrayToObjectKeysReducer = function arrayToObjectKeysReducer(acc, val) {\n    acc[val] = true;\n    return acc;\n};\n\n/**\n * Generate a CSS ruleset with the selector and containing the declarations.\n *\n * This function assumes that the given declarations don't contain any special\n * children (such as media queries, pseudo-selectors, or descendant styles).\n *\n * Note that this method does not deal with nesting used for e.g.\n * psuedo-selectors or media queries. That responsibility is left to  the\n * `generateCSS` function.\n *\n * @param {string} selector: the selector associated with the ruleset\n * @param {Object} declarations: a map from camelCased CSS property name to CSS\n *     property value.\n * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS\n *     property name to a function which will map the given value to the value\n *     that is output.\n * @param {bool} useImportant: A boolean saying whether to append \"!important\"\n *     to each of the CSS declarations.\n * @returns {string} A string of raw CSS.\n *\n * Examples:\n *\n *    generateCSSRuleset(\".blah\", { color: \"red\" })\n *    -> \".blah{color: red !important;}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {}, false)\n *    -> \".blah{color: red}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {color: c => c.toUpperCase})\n *    -> \".blah{color: RED}\"\n *    generateCSSRuleset(\".blah:hover\", { color: \"red\" })\n *    -> \".blah:hover{color: red}\"\n */\nvar generateCSSRuleset = function generateCSSRuleset(selector /* : string */\n, declarations /* : OrderedElements */\n, stringHandlers /* : StringHandlers */\n, useImportant /* : boolean */\n, selectorHandlers /* : SelectorHandler[] */\n) /* : string */{\n    // Mutates declarations\n    runStringHandlers(declarations, stringHandlers, selectorHandlers);\n\n    var originalElements = Object.keys(declarations.elements).reduce(arrayToObjectKeysReducer, Object.create(null));\n\n    // NOTE(emily): This mutates handledDeclarations.elements.\n    var prefixedElements = prefixAll(declarations.elements);\n\n    var elementNames = Object.keys(prefixedElements);\n    if (elementNames.length !== declarations.keyOrder.length) {\n        // There are some prefixed values, so we need to figure out how to sort\n        // them.\n        //\n        // Loop through prefixedElements, looking for anything that is not in\n        // sortOrder, which means it was added by prefixAll. This means that we\n        // need to figure out where it should appear in the sortOrder.\n        for (var i = 0; i < elementNames.length; i++) {\n            if (!originalElements[elementNames[i]]) {\n                // This element is not in the sortOrder, which means it is a prefixed\n                // value that was added by prefixAll. Let's try to figure out where it\n                // goes.\n                var originalStyle = void 0;\n                if (elementNames[i][0] === 'W') {\n                    // This is a Webkit-prefixed style, like \"WebkitTransition\". Let's\n                    // find its original style's sort order.\n                    originalStyle = elementNames[i][6].toLowerCase() + elementNames[i].slice(7);\n                } else if (elementNames[i][1] === 'o') {\n                    // This is a Moz-prefixed style, like \"MozTransition\". We check\n                    // the second character to avoid colliding with Ms-prefixed\n                    // styles. Let's find its original style's sort order.\n                    originalStyle = elementNames[i][3].toLowerCase() + elementNames[i].slice(4);\n                } else {\n                    // if (elementNames[i][1] === 's') {\n                    // This is a Ms-prefixed style, like \"MsTransition\".\n                    originalStyle = elementNames[i][2].toLowerCase() + elementNames[i].slice(3);\n                }\n\n                if (originalStyle && originalElements[originalStyle]) {\n                    var originalIndex = declarations.keyOrder.indexOf(originalStyle);\n                    declarations.keyOrder.splice(originalIndex, 0, elementNames[i]);\n                } else {\n                    // We don't know what the original style was, so sort it to\n                    // top. This can happen for styles that are added that don't\n                    // have the same base name as the original style.\n                    declarations.keyOrder.unshift(elementNames[i]);\n                }\n            }\n        }\n    }\n\n    var transformValue = useImportant === false ? stringifyValue : stringifyAndImportantifyValue;\n\n    var rules = [];\n    for (var _i = 0; _i < declarations.keyOrder.length; _i++) {\n        var key = declarations.keyOrder[_i];\n        var value = prefixedElements[key];\n        if (Array.isArray(value)) {\n            // inline-style-prefixer returns an array when there should be\n            // multiple rules for the same key. Here we flatten to multiple\n            // pairs with the same key.\n            for (var j = 0; j < value.length; j++) {\n                rules.push(transformRule(key, value[j], transformValue));\n            }\n        } else {\n            rules.push(transformRule(key, value, transformValue));\n        }\n    }\n\n    if (rules.length) {\n        return String(selector) + '{' + String(rules.join(\"\")) + '}';\n    } else {\n        return \"\";\n    }\n};\n\nvar _typeof$1 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* ::\nimport type { SheetDefinition, SheetDefinitions } from './index.js';\nimport type { MaybeSheetDefinition } from './exports.js';\nimport type { SelectorHandler } from './generate.js';\n*/\n\n// The current <style> tag we are inserting into, or null if we haven't\n// inserted anything yet. We could find this each time using\n// `document.querySelector(\"style[data-aphrodite\"])`, but holding onto it is\n// faster.\nvar styleTag /* : ?HTMLStyleElement */ = null;\n\n// Inject a set of rules into a <style> tag in the head of the document. This\n// will automatically create a style tag and then continue to use it for\n// multiple injections. It will also use a style tag with the `data-aphrodite`\n// tag on it if that exists in the DOM. This could be used for e.g. reusing the\n// same style tag that server-side rendering inserts.\nvar injectStyleTag = function injectStyleTag(cssRules /* : string[] */) {\n    if (styleTag == null) {\n        // Try to find a style tag with the `data-aphrodite` attribute first.\n        styleTag = document.querySelector(\"style[data-aphrodite]\") /* : any */;\n\n        // If that doesn't work, generate a new style tag.\n        if (styleTag == null) {\n            // Taken from\n            // http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript\n            var head = document.head || document.getElementsByTagName('head')[0];\n            styleTag = document.createElement('style');\n\n            styleTag.type = 'text/css';\n            styleTag.setAttribute(\"data-aphrodite\", \"\");\n            head.appendChild(styleTag);\n        }\n    }\n\n    var sheet = styleTag.styleSheet || styleTag.sheet /* : any */;\n\n    if (sheet.insertRule) {\n        var numRules = sheet.cssRules.length;\n        cssRules.forEach(function (rule) {\n            try {\n                sheet.insertRule(rule, numRules);\n                numRules += 1;\n            } catch (e) {\n                // The selector for this rule wasn't compatible with the browser\n            }\n        });\n    } else {\n        styleTag.innerText = (styleTag.innerText || '') + cssRules.join('');\n    }\n};\n\n// Custom handlers for stringifying CSS values that have side effects\n// (such as fontFamily, which can cause @font-face rules to be injected)\nvar stringHandlers = {\n    // With fontFamily we look for objects that are passed in and interpret\n    // them as @font-face rules that we need to inject. The value of fontFamily\n    // can either be a string (as normal), an object (a single font face), or\n    // an array of objects and strings.\n    fontFamily: function () {\n        function fontFamily(val) {\n            if (Array.isArray(val)) {\n                return val.map(fontFamily).join(\",\");\n            } else if ((typeof val === 'undefined' ? 'undefined' : _typeof$1(val)) === \"object\") {\n                injectStyleOnce(val.src, \"@font-face\", [val], false);\n                return '\"' + String(val.fontFamily) + '\"';\n            } else {\n                return val;\n            }\n        }\n\n        return fontFamily;\n    }(),\n\n    // With animationName we look for an object that contains keyframes and\n    // inject them as an `@keyframes` block, returning a uniquely generated\n    // name. The keyframes object should look like\n    //  animationName: {\n    //    from: {\n    //      left: 0,\n    //      top: 0,\n    //    },\n    //    '50%': {\n    //      left: 15,\n    //      top: 5,\n    //    },\n    //    to: {\n    //      left: 20,\n    //      top: 20,\n    //    }\n    //  }\n    // TODO(emily): `stringHandlers` doesn't let us rename the key, so I have\n    // to use `animationName` here. Improve that so we can call this\n    // `animation` instead of `animationName`.\n    animationName: function () {\n        function animationName(val, selectorHandlers) {\n            if (Array.isArray(val)) {\n                return val.map(function (v) {\n                    return animationName(v, selectorHandlers);\n                }).join(\",\");\n            } else if ((typeof val === 'undefined' ? 'undefined' : _typeof$1(val)) === \"object\") {\n                // Generate a unique name based on the hash of the object. We can't\n                // just use the hash because the name can't start with a number.\n                // TODO(emily): this probably makes debugging hard, allow a custom\n                // name?\n                var name = 'keyframe_' + String(hashObject(val));\n\n                // Since keyframes need 3 layers of nesting, we use `generateCSS` to\n                // build the inner layers and wrap it in `@keyframes` ourselves.\n                var finalVal = '@keyframes ' + name + '{';\n\n                // TODO see if we can find a way where checking for OrderedElements\n                // here is not necessary. Alternatively, perhaps we should have a\n                // utility method that can iterate over either a plain object, an\n                // instance of OrderedElements, or a Map, and then use that here and\n                // elsewhere.\n                if (val instanceof OrderedElements) {\n                    val.forEach(function (valVal, valKey) {\n                        finalVal += generateCSS(valKey, [valVal], selectorHandlers, stringHandlers, false).join('');\n                    });\n                } else {\n                    Object.keys(val).forEach(function (key) {\n                        finalVal += generateCSS(key, [val[key]], selectorHandlers, stringHandlers, false).join('');\n                    });\n                }\n                finalVal += '}';\n\n                injectGeneratedCSSOnce(name, [finalVal]);\n\n                return name;\n            } else {\n                return val;\n            }\n        }\n\n        return animationName;\n    }()\n};\n\n// This is a map from Aphrodite's generated class names to `true` (acting as a\n// set of class names)\nvar alreadyInjected = {};\n\n// This is the buffer of styles which have not yet been flushed.\nvar injectionBuffer /* : string[] */ = [];\n\n// A flag to tell if we are already buffering styles. This could happen either\n// because we scheduled a flush call already, so newly added styles will\n// already be flushed, or because we are statically buffering on the server.\nvar isBuffering = false;\n\nvar injectGeneratedCSSOnce = function injectGeneratedCSSOnce(key, generatedCSS) {\n    var _injectionBuffer;\n\n    if (alreadyInjected[key]) {\n        return;\n    }\n\n    if (!isBuffering) {\n        // We should never be automatically buffering on the server (or any\n        // place without a document), so guard against that.\n        if (typeof document === \"undefined\") {\n            throw new Error(\"Cannot automatically buffer without a document\");\n        }\n\n        // If we're not already buffering, schedule a call to flush the\n        // current styles.\n        isBuffering = true;\n        asap(flushToStyleTag);\n    }\n\n    (_injectionBuffer = injectionBuffer).push.apply(_injectionBuffer, _toConsumableArray$1(generatedCSS));\n    alreadyInjected[key] = true;\n};\n\nvar injectStyleOnce = function injectStyleOnce(key /* : string */\n, selector /* : string */\n, definitions /* : SheetDefinition[] */\n, useImportant /* : boolean */\n) {\n    var selectorHandlers /* : SelectorHandler[] */ = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    if (alreadyInjected[key]) {\n        return;\n    }\n\n    var generated = generateCSS(selector, definitions, selectorHandlers, stringHandlers, useImportant);\n\n    injectGeneratedCSSOnce(key, generated);\n};\n\nvar reset = function reset() {\n    injectionBuffer = [];\n    alreadyInjected = {};\n    isBuffering = false;\n    styleTag = null;\n};\n\nvar getBufferedStyles = function getBufferedStyles() {\n    return injectionBuffer;\n};\n\nvar startBuffering = function startBuffering() {\n    if (isBuffering) {\n        throw new Error(\"Cannot buffer while already buffering\");\n    }\n    isBuffering = true;\n};\n\nvar flushToArray = function flushToArray() {\n    isBuffering = false;\n    var ret = injectionBuffer;\n    injectionBuffer = [];\n    return ret;\n};\n\nvar flushToString = function flushToString() {\n    return flushToArray().join('');\n};\n\nvar flushToStyleTag = function flushToStyleTag() {\n    var cssRules = flushToArray();\n    if (cssRules.length > 0) {\n        injectStyleTag(cssRules);\n    }\n};\n\nvar getRenderedClassNames = function getRenderedClassNames() {\n    return Object.keys(alreadyInjected);\n};\n\nvar addRenderedClassNames = function addRenderedClassNames(classNames /* : string[] */) {\n    classNames.forEach(function (className) {\n        alreadyInjected[className] = true;\n    });\n};\n\nvar processStyleDefinitions = function processStyleDefinitions(styleDefinitions /* : any[] */\n, classNameBits /* : string[] */\n, definitionBits /* : Object[] */\n, length /* : number */\n) /* : number */{\n    for (var i = 0; i < styleDefinitions.length; i += 1) {\n        // Filter out falsy values from the input, to allow for\n        // `css(a, test && c)`\n        if (styleDefinitions[i]) {\n            if (Array.isArray(styleDefinitions[i])) {\n                // We've encountered an array, so let's recurse\n                length += processStyleDefinitions(styleDefinitions[i], classNameBits, definitionBits, length);\n            } else {\n                classNameBits.push(styleDefinitions[i]._name);\n                definitionBits.push(styleDefinitions[i]._definition);\n                length += styleDefinitions[i]._len;\n            }\n        }\n    }\n    return length;\n};\n\n/**\n * Inject styles associated with the passed style definition objects, and return\n * an associated CSS class name.\n *\n * @param {boolean} useImportant If true, will append !important to generated\n *     CSS output. e.g. {color: red} -> \"color: red !important\".\n * @param {(Object|Object[])[]} styleDefinitions style definition objects, or\n *     arbitrarily nested arrays of them, as returned as properties of the\n *     return value of StyleSheet.create().\n */\nvar injectAndGetClassName = function injectAndGetClassName(useImportant /* : boolean */\n, styleDefinitions /* : MaybeSheetDefinition[] */\n, selectorHandlers /* : SelectorHandler[] */\n) /* : string */{\n    var classNameBits = [];\n    var definitionBits = [];\n\n    // Mutates classNameBits and definitionBits and returns a length which we\n    // will append to the hash to decrease the chance of hash collisions.\n    var length = processStyleDefinitions(styleDefinitions, classNameBits, definitionBits, 0);\n\n    // Break if there aren't any valid styles.\n    if (classNameBits.length === 0) {\n        return \"\";\n    }\n\n    var className = void 0;\n    if (process.env.NODE_ENV === 'production') {\n        className = classNameBits.length === 1 ? '_' + String(classNameBits[0]) : '_' + String(hashString(classNameBits.join())) + String((length % 36).toString(36));\n    } else {\n        className = classNameBits.join(\"-o_O-\");\n    }\n\n    injectStyleOnce(className, '.' + String(className), definitionBits, useImportant, selectorHandlers);\n\n    return className;\n};\n\n/* ::\nimport type { SelectorHandler } from './generate.js';\nexport type SheetDefinition = { [id:string]: any };\nexport type SheetDefinitions = SheetDefinition | SheetDefinition[];\ntype RenderFunction = () => string;\ntype Extension = {\n    selectorHandler: SelectorHandler\n};\nexport type MaybeSheetDefinition = SheetDefinition | false | null | void\n*/\n\nvar unminifiedHashFn = function unminifiedHashFn(str /* : string */, key /* : string */) {\n    return String(key) + '_' + String(hashString(str));\n};\n\n// StyleSheet.create is in a hot path so we want to keep as much logic out of it\n// as possible. So, we figure out which hash function to use once, and only\n// switch it out via minify() as necessary.\n//\n// This is in an exported function to make it easier to test.\nvar initialHashFn = function initialHashFn() {\n    return process.env.NODE_ENV === 'production' ? hashString : unminifiedHashFn;\n};\n\nvar hashFn = initialHashFn();\n\nvar StyleSheet = {\n    create: function () {\n        function create(sheetDefinition /* : SheetDefinition */) /* : Object */{\n            var mappedSheetDefinition = {};\n            var keys = Object.keys(sheetDefinition);\n\n            for (var i = 0; i < keys.length; i += 1) {\n                var key = keys[i];\n                var val = sheetDefinition[key];\n                var stringVal = JSON.stringify(val);\n\n                mappedSheetDefinition[key] = {\n                    _len: stringVal.length,\n                    _name: hashFn(stringVal, key),\n                    _definition: val\n                };\n            }\n\n            return mappedSheetDefinition;\n        }\n\n        return create;\n    }(),\n    rehydrate: function () {\n        function rehydrate() {\n            var renderedClassNames /* : string[] */ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n            addRenderedClassNames(renderedClassNames);\n        }\n\n        return rehydrate;\n    }()\n};\n\n/**\n * Utilities for using Aphrodite server-side.\n *\n * This can be minified out in client-only bundles by replacing `typeof window`\n * with `\"object\"`, e.g. via Webpack's DefinePlugin:\n *\n *   new webpack.DefinePlugin({\n *     \"typeof window\": JSON.stringify(\"object\")\n *   })\n */\nvar StyleSheetServer = typeof window !== 'undefined' ? null : {\n    renderStatic: function () {\n        function renderStatic(renderFunc /* : RenderFunction */) {\n            reset();\n            startBuffering();\n            var html = renderFunc();\n            var cssContent = flushToString();\n\n            return {\n                html: html,\n                css: {\n                    content: cssContent,\n                    renderedClassNames: getRenderedClassNames()\n                }\n            };\n        }\n\n        return renderStatic;\n    }()\n};\n\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\nvar StyleSheetTestUtils = process.env.NODE_ENV === 'production' ? null : {\n    /**\n    * Prevent styles from being injected into the DOM.\n    *\n    * This is useful in situations where you'd like to test rendering UI\n    * components which use Aphrodite without any of the side-effects of\n    * Aphrodite happening. Particularly useful for testing the output of\n    * components when you have no DOM, e.g. testing in Node without a fake DOM.\n    *\n    * Should be paired with a subsequent call to\n    * clearBufferAndResumeStyleInjection.\n    */\n    suppressStyleInjection: function () {\n        function suppressStyleInjection() {\n            reset();\n            startBuffering();\n        }\n\n        return suppressStyleInjection;\n    }(),\n\n\n    /**\n    * Opposite method of preventStyleInject.\n    */\n    clearBufferAndResumeStyleInjection: function () {\n        function clearBufferAndResumeStyleInjection() {\n            reset();\n        }\n\n        return clearBufferAndResumeStyleInjection;\n    }(),\n\n\n    /**\n    * Returns a string of buffered styles which have not been flushed\n    *\n    * @returns {string}  Buffer of styles which have not yet been flushed.\n    */\n    getBufferedStyles: function () {\n        function getBufferedStyles$$1() {\n            return getBufferedStyles();\n        }\n\n        return getBufferedStyles$$1;\n    }()\n};\n\n/**\n * Generate the Aphrodite API exports, with given `selectorHandlers` and\n * `useImportant` state.\n */\nfunction makeExports(useImportant /* : boolean */\n, selectorHandlers /* : SelectorHandler[] */\n) {\n    return {\n        StyleSheet: Object.assign({}, StyleSheet, {\n\n            /**\n             * Returns a version of the exports of Aphrodite (i.e. an object\n             * with `css` and `StyleSheet` properties) which have some\n             * extensions included.\n             *\n             * @param {Array.<Object>} extensions: An array of extensions to\n             *     add to this instance of Aphrodite. Each object should have a\n             *     single property on it, defining which kind of extension to\n             *     add.\n             * @param {SelectorHandler} [extensions[].selectorHandler]: A\n             *     selector handler extension. See `defaultSelectorHandlers` in\n             *     generate.js.\n             *\n             * @returns {Object} An object containing the exports of the new\n             *     instance of Aphrodite.\n             */\n            extend: function () {\n                function extend(extensions /* : Extension[] */) {\n                    var extensionSelectorHandlers = extensions\n                    // Pull out extensions with a selectorHandler property\n                    .map(function (extension) {\n                        return extension.selectorHandler;\n                    })\n                    // Remove nulls (i.e. extensions without a selectorHandler\n                    // property).\n                    .filter(function (handler) {\n                        return handler;\n                    });\n\n                    return makeExports(useImportant, selectorHandlers.concat(extensionSelectorHandlers));\n                }\n\n                return extend;\n            }()\n        }),\n\n        StyleSheetServer: StyleSheetServer,\n        StyleSheetTestUtils: StyleSheetTestUtils,\n\n        minify: function () {\n            function minify(shouldMinify /* : boolean */) {\n                hashFn = shouldMinify ? hashString : unminifiedHashFn;\n            }\n\n            return minify;\n        }(),\n        css: function () {\n            function css() /* : MaybeSheetDefinition[] */{\n                for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n                    styleDefinitions[_key] = arguments[_key];\n                }\n\n                return injectAndGetClassName(useImportant, styleDefinitions, selectorHandlers);\n            }\n\n            return css;\n        }()\n    };\n}\n\nvar useImportant = true; // Add !important to all style definitions\n\nvar Aphrodite = makeExports(useImportant, defaultSelectorHandlers);\n\nvar StyleSheet$1 = Aphrodite.StyleSheet,\n    StyleSheetServer$1 = Aphrodite.StyleSheetServer,\n    StyleSheetTestUtils$1 = Aphrodite.StyleSheetTestUtils,\n    css = Aphrodite.css,\n    minify = Aphrodite.minify;\n\nexport { StyleSheet$1 as StyleSheet, StyleSheetServer$1 as StyleSheetServer, StyleSheetTestUtils$1 as StyleSheetTestUtils, css, minify, flushToStyleTag };\n","import {Component} from 'preact'\n\nexport interface SerializedComponent<S> {\n  state: S\n  serializedSubcomponents: {[key: string]: any}\n}\n\nexport abstract class ReloadableComponent<P, S> extends Component<P, S> {\n  serialize(): SerializedComponent<S> {\n    const serializedSubcomponents: {[key: string]: any} = Object.create(null)\n\n    const subcomponents = this.subcomponents()\n    for (const key in subcomponents) {\n      const val = subcomponents[key]\n      if (val && val instanceof ReloadableComponent) {\n        serializedSubcomponents[key] = val.serialize()\n      }\n    }\n\n    return {\n      state: this.state,\n      serializedSubcomponents,\n    }\n  }\n  rehydrate(serialized: SerializedComponent<S>) {\n    this.setState(serialized.state, () => {\n      const subcomponents = this.subcomponents()\n      for (const key in subcomponents) {\n        const val = subcomponents[key]\n        const data = serialized.serializedSubcomponents[key]\n        if (data && val && val instanceof ReloadableComponent) {\n          val.rehydrate(data)\n        }\n      }\n    })\n  }\n  subcomponents(): {[key: string]: any} {\n    return Object.create(null)\n  }\n}\n","export function lastOf<T>(ts: T[]): T | null {\n  return ts[ts.length - 1] || null\n}\n\nexport function sortBy<T>(ts: T[], key: (t: T) => number | string): void {\n  function comparator(a: T, b: T) {\n    return key(a) < key(b) ? -1 : 1\n  }\n  ts.sort(comparator)\n}\n\nexport function getOrInsert<K, V>(map: Map<K, V>, k: K, fallback: (k: K) => V): V {\n  if (!map.has(k)) map.set(k, fallback(k))\n  return map.get(k)!\n}\n\nexport function getOrElse<K, V>(map: Map<K, V>, k: K, fallback: (k: K) => V): V {\n  if (!map.has(k)) return fallback(k)\n  return map.get(k)!\n}\n\nexport function getOrThrow<K, V>(map: Map<K, V>, k: K): V {\n  if (!map.has(k)) {\n    throw new Error(`Expected key ${k}`)\n  }\n  return map.get(k)!\n}\n\n// Intended to be used to de-duplicate objects based on a key property. This\n// allows value comparisons to be done efficiently and for the returned objects\n// to be used intuitively in Map objects.\n//\n// Example usage:\n//\n// export class Frame {\n//   private constructor(readonly file: string, readonly name: string) {}\n//   get key() { return `${this.file}:${this.name}` }\n//   static getOrInsert(set: KeyedSet<Frame>, file: string, name: string) {\n//     return set.getOrInsert(set, new Frame(file, name))\n//   }\n// }\n//\nexport interface HasKey {\n  readonly key: string | number\n}\nexport class KeyedSet<T extends HasKey> implements Iterable<T> {\n  private map = new Map<string | number, T>()\n\n  getOrInsert(t: T): T {\n    const key = t.key\n    const existing = this.map.get(key)\n    if (existing) return existing\n    this.map.set(key, t)\n    return t\n  }\n  forEach(fn: (t: T) => void) {\n    this.map.forEach(fn)\n  }\n  [Symbol.iterator]() {\n    return this.map.values()\n  }\n}\n\nexport function* itMap<T, U>(it: Iterable<T>, f: (t: T) => U): Iterable<U> {\n  for (let t of it) {\n    yield f(t)\n  }\n}\n\nexport function itForEach<T>(it: Iterable<T>, f: (t: T) => void): void {\n  for (let t of it) {\n    f(t)\n  }\n}\n\nexport function itReduce<T, U>(it: Iterable<T>, f: (a: U, b: T) => U, init: U): U {\n  let accum: U = init\n  for (let t of it) {\n    accum = f(accum, t)\n  }\n  return accum\n}\n\nexport function zeroPad(s: string, width: number) {\n  return new Array(Math.max(width - s.length, 0) + 1).join('0') + s\n}\n\nexport function formatPercent(percent: number) {\n  let formattedPercent = `${percent.toFixed(0)}%`\n  if (percent === 100) formattedPercent = '100%'\n  else if (percent > 99) formattedPercent = '>99%'\n  else if (percent < 0.01) formattedPercent = '<0.01%'\n  else if (percent < 1) formattedPercent = `${percent.toFixed(2)}%`\n  else if (percent < 10) formattedPercent = `${percent.toFixed(1)}%`\n  return formattedPercent\n}\n\nexport function fract(x: number) {\n  return x - Math.floor(x)\n}\n\nexport function triangle(x: number) {\n  return 2.0 * Math.abs(fract(x) - 0.5) - 1.0\n}\n\nexport function binarySearch(\n  lo: number,\n  hi: number,\n  f: (val: number) => number,\n  target: number,\n  targetRangeSize = 1,\n): [number, number] {\n  console.assert(!isNaN(targetRangeSize) && !isNaN(target))\n  while (true) {\n    if (hi - lo <= targetRangeSize) return [lo, hi]\n    const mid = (hi + lo) / 2\n    const val = f(mid)\n    if (val < target) lo = mid\n    else hi = mid\n  }\n}\n\nexport function noop(...args: any[]) {}\n","export interface ValueFormatter {\n  format(v: number): string\n}\n\nexport class RawValueFormatter implements ValueFormatter {\n  format(v: number) {\n    return v.toLocaleString()\n  }\n}\n\nexport class TimeFormatter implements ValueFormatter {\n  private multiplier: number\n\n  constructor(unit: 'nanoseconds' | 'microseconds' | 'milliseconds' | 'seconds') {\n    if (unit === 'nanoseconds') this.multiplier = 1e-9\n    else if (unit === 'microseconds') this.multiplier = 1e-6\n    else if (unit === 'milliseconds') this.multiplier = 1e-3\n    else this.multiplier = 1\n  }\n\n  format(v: number) {\n    const s = v * this.multiplier\n\n    if (s / 60 >= 1) return `${(s / 60).toFixed(2)}min`\n    if (s / 1 >= 1) return `${s.toFixed(2)}s`\n    if (s / 1e-3 >= 1) return `${(s / 1e-3).toFixed(2)}ms`\n    if (s / 1e-6 >= 1) return `${(s / 1e-6).toFixed(2)}µs`\n    else return `${(s / 1e-9).toFixed(2)}ns`\n  }\n}\n\nexport class ByteFormatter implements ValueFormatter {\n  format(v: number) {\n    if (v < 1024) return `${v.toFixed(0)} B`\n    v /= 1024\n    if (v < 1024) return `${v.toFixed(2)} KB`\n    v /= 1024\n    if (v < 1024) return `${v.toFixed(2)} MB`\n    v /= 1024\n    return `${v.toFixed(2)} GB`\n  }\n}\n","let cppfilt: (name: string) => string\nconst cache = new Map<string, string>()\n\n// This function converts a mangled C++ name such as \"__ZNK7Support6ColorFeqERKS0_\"\n// into a human-readable symbol (in this case \"Support::ColorF::==(Support::ColorF&)\")\nexport function demangleCpp(name: string): string {\n  if (name.startsWith('__Z')) {\n    let result = cache.get(name)\n    if (result !== undefined) {\n      name = result\n    } else {\n      if (!cppfilt) {\n        cppfilt = new Function('exports', code)()\n      }\n      result = cppfilt(name.slice(1))\n      result = result === '(null)' ? name : result\n      cache.set(name, result)\n      name = result\n    }\n  }\n  return name\n}\n\n// This was taken from https://d.fuqu.jp/c++filtjs/\nconst code = `\nreturn function(){function r(r){eval.call(null,r)}function a(r){throw print(r+\":\\\\n\"+(new Error).stack),ke=!0,\"Assertion: \"+r}function e(r,e){r||a(\"Assertion failed: \"+e)}function i(r,a,i,v){function t(r,a){if(\"string\"==a){var e=Oe;return le.stackAlloc(r.length+1),A(r,e),e}return r}function f(r,a){return\"string\"==a?s(r):r}try{func=ce.Module[\"_\"+r]}catch(r){}e(func,\"Cannot call unknown function \"+r+\" (perhaps LLVM optimizations or closure removed it?)\");var _=0,n=v?v.map(function(r){return t(r,i[_++])}):[];return f(func.apply(null,n),a)}function v(r,a,e){return function(){return i(r,a,e,Array.prototype.slice.call(arguments))}}function t(r,e,i,v){switch(i=i||\"i8\",\"*\"===i[i.length-1]&&(i=\"i32\"),i){case\"i1\":Ae[r]=e;break;case\"i8\":Ae[r]=e;break;case\"i16\":ye[r>>1]=e;break;case\"i32\":Se[r>>2]=e;break;case\"i64\":Se[r>>2]=e;break;case\"float\":Ce[r>>2]=e;break;case\"double\":ze[0]=e,Se[r>>2]=xe[0],Se[r+4>>2]=xe[1];break;default:a(\"invalid type for setValue: \"+i)}}function f(r,e,i){switch(e=e||\"i8\",\"*\"===e[e.length-1]&&(e=\"i32\"),e){case\"i1\":return Ae[r];case\"i8\":return Ae[r];case\"i16\":return ye[r>>1];case\"i32\":return Se[r>>2];case\"i64\":return Se[r>>2];case\"float\":return Ce[r>>2];case\"double\":return xe[0]=Se[r>>2],xe[1]=Se[r+4>>2],ze[0];default:a(\"invalid type for setValue: \"+e)}return null}function _(r,a,e){var i,v;\"number\"==typeof r?(i=!0,v=r):(i=!1,v=r.length);var f=\"string\"==typeof a?a:null,_=[Jr,le.stackAlloc,le.staticAlloc][void 0===e?we:e](Math.max(v,f?1:a.length));if(i)return Fa(_,0,v),_;for(var s,n=0;n<v;){var o=r[n];\"function\"==typeof o&&(o=le.getFunctionIndex(o)),s=f||a[n],0!==s?(\"i64\"==s&&(s=\"i32\"),t(_+n,o,s),n+=le.getNativeTypeSize(s)):n++}return _}function s(r,a){for(var e,i=\"undefined\"==typeof a,v=\"\",t=0,f=String.fromCharCode(0);;){if(e=String.fromCharCode(ge[r+t]),i&&e==f)break;if(v+=e,t+=1,!i&&t==a)break}return v}function n(r){for(var a=\"\",e=0;e<r.length;e++)a+=String.fromCharCode(r[e]);return a}function o(r){return r+4095>>12<<12}function l(){for(;Le<=Ie;)Le=o(2*Le);var r=Ae,a=new ArrayBuffer(Le);Ae=new Int8Array(a),ye=new Int16Array(a),Se=new Int32Array(a),ge=new Uint8Array(a),me=new Uint16Array(a),Me=new Uint32Array(a),Ce=new Float32Array(a),Re=new Float64Array(a),Ae.set(r)}function b(r){for(;r.length>0;){var a=r.shift(),e=a.func;\"number\"==typeof e&&(e=pe[e]),e(void 0===a.arg?null:a.arg)}}function k(){b(Ve)}function u(){b(Be),be.print()}function c(r,a){return Array.prototype.slice.call(Ae.subarray(r,r+a))}function h(r,a){for(var e=new Uint8Array(a),i=0;i<a;++i)e[i]=Ae[r+i];return e.buffer}function d(r){for(var a=0;Ae[r+a];)a++;return a}function w(r,a){var e=d(r);a&&e++;var i=c(r,e);return a&&(i[e-1]=0),i}function p(r,a){for(var e=[],i=0;i<r.length;){var v=r.charCodeAt(i);v>255&&(v&=255),e.push(v),i+=1}return a||e.push(0),e}function E(r){for(var a=[],e=0;e<r.length;e++){var i=r[e];i>255&&(i&=255),a.push(String.fromCharCode(i))}return a.join(\"\")}function A(r,a,e){for(var i=0;i<r.length;){var v=r.charCodeAt(i);v>255&&(v&=255),Ae[a+i]=v,i+=1}e||(Ae[a+i]=0)}function g(r,a,e,i){return r>=0?r:a<=32?2*Math.abs(1<<a-1)+r:Math.pow(2,a)+r}function y(r,a,e,i){if(r<=0)return r;var v=a<=32?Math.abs(1<<a-1):Math.pow(2,a-1);return r>=v&&(a<=32||r>v)&&(r=-2*v+r),r}function m(r,a,e){if(0==(0|r)|0==(0|a)|0==(0|e))var i=0;else{Se[r>>2]=0,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function S(r,a,e){if(0==(0|r)|(0|a)<0|0==(0|e))var i=0;else{Se[r>>2]=41,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function M(r,a,e){if(0==(0|r)|0==(0|e))var i=0;else{Se[r>>2]=6,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function C(r,a,e){if(0==(0|r)|0==(0|e))var i=0;else{Se[r>>2]=7,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function R(r,a){var e,i=0==(0|a);do if(i)var v=0;else{var e=(r+32|0)>>2,t=Se[e];if((0|t)>=(0|Se[r+36>>2])){var v=0;break}var f=(t<<2)+Se[r+28>>2]|0;Se[f>>2]=a;var _=Se[e]+1|0;Se[e]=_;var v=1}while(0);var v;return v}function T(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=i+1|0;Se[e]=v;var t=Ae[i]<<24>>24==95;do if(t){var f=i+2|0;if(Se[e]=f,Ae[v]<<24>>24!=90){var _=0;break}var s=O(r,a),_=s}else var _=0;while(0);var _;return _}function O(r,a){var e=r+12|0,i=Ae[Se[e>>2]];r:do if(i<<24>>24==71||i<<24>>24==84)var v=Tr(r),t=v;else{var f=Ar(r),_=0==(0|f)|0==(0|a);do if(!_){if(0!=(1&Se[r+8>>2]|0))break;var s=Me[f>>2],n=(s-25|0)>>>0<3;a:do if(n)for(var o=f;;){var o,l=Me[o+4>>2],b=Me[l>>2];if((b-25|0)>>>0>=3){var k=l,u=b;break a}var o=l}else var k=f,u=s;while(0);var u,k;if(2!=(0|u)){var t=k;break r}var c=k+8|0,h=Me[c>>2],d=(Se[h>>2]-25|0)>>>0<3;a:do if(d)for(var w=h;;){var w,p=Me[w+4>>2];if((Se[p>>2]-25|0)>>>0>=3){var E=p;break a}var w=p}else var E=h;while(0);var E;Se[c>>2]=E;var t=k;break r}while(0);var A=Ae[Se[e>>2]];if(A<<24>>24==0||A<<24>>24==69){var t=f;break}var g=Or(f),y=Sr(r,g),m=D(r,3,f,y),t=m}while(0);var t;return t}function N(r){var a,e,i=Oe;Oe+=4;var v=i,e=v>>2,a=(r+12|0)>>2,t=Me[a],f=Ae[t],_=f<<24>>24;r:do if(f<<24>>24==114||f<<24>>24==86||f<<24>>24==75){var s=I(r,v,0);if(0==(0|s)){var n=0;break}var o=N(r);Se[s>>2]=o;var l=Se[e],b=R(r,l);if(0==(0|b)){var n=0;break}var n=Se[e]}else{do{if(97==(0|_)||98==(0|_)||99==(0|_)||100==(0|_)||101==(0|_)||102==(0|_)||103==(0|_)||104==(0|_)||105==(0|_)||106==(0|_)||108==(0|_)||109==(0|_)||110==(0|_)||111==(0|_)||115==(0|_)||116==(0|_)||118==(0|_)||119==(0|_)||120==(0|_)||121==(0|_)||122==(0|_)){var k=ai+20*(_-97)|0,u=P(r,k);Se[e]=u;var c=r+48|0,h=Se[c>>2]+Se[Se[u+4>>2]+4>>2]|0;Se[c>>2]=h;var d=Se[a]+1|0;Se[a]=d;var n=u;break r}if(117==(0|_)){Se[a]=t+1|0;var w=L(r),p=D(r,34,w,0);Se[e]=p;var E=p}else if(70==(0|_)){var A=F(r);Se[e]=A;var E=A}else if(48==(0|_)||49==(0|_)||50==(0|_)||51==(0|_)||52==(0|_)||53==(0|_)||54==(0|_)||55==(0|_)||56==(0|_)||57==(0|_)||78==(0|_)||90==(0|_)){var g=X(r);Se[e]=g;var E=g}else if(65==(0|_)){var y=j(r);Se[e]=y;var E=y}else if(77==(0|_)){var m=U(r);Se[e]=m;var E=m}else if(84==(0|_)){var S=x(r);if(Se[e]=S,Ae[Se[a]]<<24>>24!=73){var E=S;break}var M=R(r,S);if(0==(0|M)){var n=0;break r}var C=Se[e],T=z(r),O=D(r,4,C,T);Se[e]=O;var E=O}else if(83==(0|_)){var B=ge[t+1|0];if((B-48&255&255)<10|B<<24>>24==95|(B-65&255&255)<26){var H=V(r,0);if(Se[e]=H,Ae[Se[a]]<<24>>24!=73){var n=H;break r}var K=z(r),Y=D(r,4,H,K);Se[e]=Y;var E=Y}else{var G=X(r);if(Se[e]=G,0==(0|G)){var E=0;break}if(21==(0|Se[G>>2])){var n=G;break r}var E=G}}else if(80==(0|_)){Se[a]=t+1|0;var W=N(r),Z=D(r,29,W,0);Se[e]=Z;var E=Z}else if(82==(0|_)){Se[a]=t+1|0;var Q=N(r),q=D(r,30,Q,0);Se[e]=q;var E=q}else if(67==(0|_)){Se[a]=t+1|0;var $=N(r),J=D(r,31,$,0);Se[e]=J;var E=J}else if(71==(0|_)){Se[a]=t+1|0;var rr=N(r),ar=D(r,32,rr,0);Se[e]=ar;var E=ar}else{if(85!=(0|_)){var n=0;break r}Se[a]=t+1|0;var er=L(r);Se[e]=er;var ir=N(r),vr=Se[e],tr=D(r,28,ir,vr);Se[e]=tr;var E=tr}}while(0);var E,fr=R(r,E);if(0==(0|fr)){var n=0;break}var n=Se[e]}while(0);var n;return Oe=i,n}function I(r,a,e){for(var i,v=r+12|0,t=0!=(0|e),f=t?25:22,i=(r+48|0)>>2,_=t?26:23,s=t?27:24,n=a;;){var n,o=Se[v>>2],l=Ae[o];if(l<<24>>24!=114&&l<<24>>24!=86&&l<<24>>24!=75){var b=n;break}var k=o+1|0;if(Se[v>>2]=k,l<<24>>24==114){var u=Se[i]+9|0;Se[i]=u;var c=f}else if(l<<24>>24==86){var h=Se[i]+9|0;Se[i]=h;var c=_}else{var d=Se[i]+6|0;Se[i]=d;var c=s}var c,w=D(r,c,0,0);if(Se[n>>2]=w,0==(0|w)){var b=0;break}var n=w+4|0}var b;return b}function P(r,a){var e=0==(0|a);do if(e)var i=0;else{var v=J(r);if(0==(0|v)){var i=0;break}Se[v>>2]=33,Se[v+4>>2]=a;var i=v}while(0);var i;return i}function D(r,a,e,i){var v,t;do{if(1==(0|a)||2==(0|a)||3==(0|a)||4==(0|a)||10==(0|a)||28==(0|a)||37==(0|a)||43==(0|a)||44==(0|a)||45==(0|a)||46==(0|a)||47==(0|a)||48==(0|a)||49==(0|a)||50==(0|a)){if(0==(0|e)|0==(0|i)){var f=0;t=7;break}t=5;break}if(8==(0|a)||9==(0|a)||11==(0|a)||12==(0|a)||13==(0|a)||14==(0|a)||15==(0|a)||16==(0|a)||17==(0|a)||18==(0|a)||19==(0|a)||20==(0|a)||29==(0|a)||30==(0|a)||31==(0|a)||32==(0|a)||34==(0|a)||38==(0|a)||39==(0|a)||42==(0|a)){if(0==(0|e)){var f=0;t=7;break}t=5;break}if(36==(0|a)){if(0==(0|i)){var f=0;t=7;break}t=5;break}if(35==(0|a)||22==(0|a)||23==(0|a)||24==(0|a)||25==(0|a)||26==(0|a)||27==(0|a))t=5;else{var f=0;t=7}}while(0);do if(5==t){var _=J(r),v=_>>2;if(0==(0|_)){var f=0;break}Se[v]=a,Se[v+1]=e,Se[v+2]=i;var f=_}while(0);var f;return f}function L(r){var a=sr(r);if((0|a)<1)var e=0;else{var i=Rr(r,a);Se[r+44>>2]=i;var e=i}var e;return e}function F(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;if(Se[a]=i,Ae[e]<<24>>24==70){if(Ae[i]<<24>>24==89){var v=e+2|0;Se[a]=v}var t=Sr(r,1),f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==69?t:0,n=s}else var n=0;var n;return n}function X(r){var a=Ar(r);return a}function j(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==65;do if(v){var t=Ae[i];if(t<<24>>24==95)var f=0;else if((t-48&255&255)<10){for(var _=i;;){var _,s=_+1|0;if(Se[a]=s,(Ae[s]-48&255&255)>=10)break;var _=s}var n=s-i|0,o=lr(r,i,n);if(0==(0|o)){var l=0;break}var f=o}else{var b=nr(r);if(0==(0|b)){var l=0;break}var f=b}var f,k=Se[a],u=k+1|0;if(Se[a]=u,Ae[k]<<24>>24!=95){var l=0;break}var c=N(r),h=D(r,36,f,c),l=h}else var l=0;while(0);var l;return l}function U(r){var a=Oe;Oe+=4;var e=a,i=r+12|0,v=Se[i>>2],t=v+1|0;Se[i>>2]=t;var f=Ae[v]<<24>>24==77;r:do if(f){var _=N(r),s=I(r,e,1);if(0==(0|s)){var n=0;break}var o=N(r);Se[s>>2]=o;var l=(0|s)==(0|e);do if(!l){if(35==(0|Se[o>>2]))break;var b=Se[e>>2],k=R(r,b);if(0==(0|k)){var n=0;break r}}while(0);var u=Se[e>>2],c=D(r,37,_,u),n=c}else var n=0;while(0);var n;return Oe=a,n}function x(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==84;do if(v){if(Ae[i]<<24>>24==95)var t=0,f=i;else{var _=sr(r);if((0|_)<0){var s=0;break}var t=_+1|0,f=Se[a]}var f,t;if(Se[a]=f+1|0,Ae[f]<<24>>24!=95){var s=0;break}var n=r+40|0,o=Se[n>>2]+1|0;Se[n>>2]=o;var l=Er(r,t),s=l}else var s=0;while(0);var s;return s}function z(r){var a,e=Oe;Oe+=4;var i=e,v=r+44|0,t=Se[v>>2],a=(r+12|0)>>2,f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==73;r:do if(s){Se[i>>2]=0;for(var n=i;;){var n,o=_r(r);if(0==(0|o)){var l=0;break r}var b=D(r,39,o,0);if(Se[n>>2]=b,0==(0|b)){var l=0;break r}var k=Se[a];if(Ae[k]<<24>>24==69)break;var n=b+8|0}var u=k+1|0;Se[a]=u,Se[v>>2]=t;var l=Se[i>>2]}else var l=0;while(0);var l;return Oe=e,l}function V(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=i+1|0;Se[e]=v;var t=Ae[i]<<24>>24==83;r:do if(t){var f=i+2|0;Se[e]=f;var _=ge[v];if(_<<24>>24==95)var s=0;else{if(!((_-48&255&255)<10|(_-65&255&255)<26)){var n=8&Se[r+8>>2],o=n>>>3,l=0!=(0|n)|0==(0|a);do if(l)var b=o;else{if((Ae[f]-67&255&255)>=2){var b=o;break}var b=1}while(0);for(var b,k=0|ei;;){var k;if(k>>>0>=(ei+196|0)>>>0){var u=0;break r}if(_<<24>>24==Ae[0|k]<<24>>24)break;var k=k+28|0}var c=Se[k+20>>2];if(0!=(0|c)){var h=Se[k+24>>2],d=fr(r,c,h);Se[r+44>>2]=d}if(0==(0|b))var w=k+8|0,p=k+4|0;else var w=k+16|0,p=k+12|0;var p,w,E=Se[w>>2],A=Se[p>>2],g=r+48|0,y=Se[g>>2]+E|0;Se[g>>2]=y;var m=fr(r,A,E),u=m;break}for(var S=_,M=0,C=f;;){var C,M,S;if((S-48&255&255)<10)var R=36*M-48|0;else{if((S-65&255&255)>=26){var u=0;break r}var R=36*M-55|0}var R,T=(S<<24>>24)+R|0;if((0|T)<0){var u=0;break r}var O=C+1|0;Se[e]=O;var N=ge[C];if(N<<24>>24==95)break;var S=N,M=T,C=O}var s=T+1|0}var s;if((0|s)>=(0|Se[r+32>>2])){var u=0;break}var I=r+40|0,P=Se[I>>2]+1|0;Se[I>>2]=P;var u=Se[Se[r+28>>2]+(s<<2)>>2]}else var u=0;while(0);var u;return u}function B(r,a,e,i){var v,t,f,_,s=Oe;Oe+=28;var n,o=s,_=o>>2;Se[_]=r;var l=e+1|0,f=(o+12|0)>>2;Se[f]=l;var b=Jr(l),t=(o+4|0)>>2;if(Se[t]=b,0==(0|b))var k=0,u=1;else{var v=(o+8|0)>>2;Se[v]=0,Se[_+4]=0,Se[_+5]=0;var c=o+24|0;Se[c>>2]=0,H(o,a);var h=Me[t],d=0==(0|h);do{if(!d){var w=Me[v];if(w>>>0>=Me[f]>>>0){n=5;break}Se[v]=w+1|0,Ae[h+w|0]=0,n=6;break}n=5}while(0);5==n&&Y(o,0);var p=Se[t],E=0==(0|p)?Se[c>>2]:Se[f],k=p,u=E}var u,k;return Se[i>>2]=u,Oe=s,k}function H(r,a){var e,i,v,t,f,_,s,n,o,l,b,k,u,c,h,d,w,p,E,A,g,y,m,S,M,C,R,T,O,N,I,P,D,L,F,X,j,U,x,z,V,B,K,G,W,J,vr,tr,fr,_r,sr,nr,or,lr,br,kr,ur,cr,hr,dr,wr,pr=a>>2,Er=r>>2,Ar=Oe;Oe+=184;var gr,yr=Ar,wr=yr>>2,mr=Ar+64,dr=mr>>2,Sr=Ar+72,Mr=Ar+88,Cr=Ar+104,hr=Cr>>2,Rr=Ar+168,Tr=0==(0|a);r:do if(Tr)Z(r);else{var cr=(r+4|0)>>2,Or=Me[cr];if(0==(0|Or))break;var Nr=0|a,Ir=Me[Nr>>2];a:do{if(0==(0|Ir)){if(0!=(4&Se[Er]|0)){var Pr=Se[pr+1],Dr=Se[pr+2];q(r,Pr,Dr);break r}var ur=(r+8|0)>>2,Lr=Me[ur],Fr=a+8|0,Xr=Me[Fr>>2];if((Xr+Lr|0)>>>0>Me[Er+3]>>>0){var jr=Se[pr+1];Q(r,jr,Xr);break r}var Ur=Or+Lr|0,xr=Se[pr+1];Pa(Ur,xr,Xr,1);var zr=Se[ur]+Se[Fr>>2]|0;Se[ur]=zr;break r}if(1==(0|Ir)||2==(0|Ir)){var Vr=Se[pr+1];H(r,Vr);var Br=0==(4&Se[Er]|0),Hr=Me[cr],Kr=0!=(0|Hr);e:do if(Br){do if(Kr){var kr=(r+8|0)>>2,Yr=Me[kr];if((Yr+2|0)>>>0>Me[Er+3]>>>0)break;var Gr=Hr+Yr|0;oe=14906,Ae[Gr]=255&oe,oe>>=8,Ae[Gr+1]=255&oe;var Wr=Se[kr]+2|0;Se[kr]=Wr;break e}while(0);Q(r,0|He.__str120,2)}else{do if(Kr){var Zr=r+8|0,Qr=Me[Zr>>2];if(Qr>>>0>=Me[Er+3]>>>0)break;Se[Zr>>2]=Qr+1|0,Ae[Hr+Qr|0]=46;break e}while(0);Y(r,46)}while(0);var qr=Se[pr+2];H(r,qr);break r}if(3==(0|Ir)){for(var br=(r+20|0)>>2,$r=Me[br],lr=(r+16|0)>>2,Jr=a,ra=0,aa=$r;;){var aa,ra,Jr,ea=Me[Jr+4>>2];if(0==(0|ea)){var ia=ra,va=0;gr=33;break}if(ra>>>0>3){Z(r);break r}var ta=(ra<<4)+yr|0;Se[ta>>2]=aa,Se[br]=ta,Se[((ra<<4)+4>>2)+wr]=ea,Se[((ra<<4)+8>>2)+wr]=0;var fa=Me[lr];Se[((ra<<4)+12>>2)+wr]=fa;var _a=ra+1|0,sa=0|ea,na=Me[sa>>2];if((na-25|0)>>>0>=3){gr=25;break}var Jr=ea,ra=_a,aa=ta}e:do if(25==gr){if(4==(0|na)){Se[dr]=fa,Se[lr]=mr,Se[dr+1]=ea;var oa=Se[sa>>2],la=mr}else var oa=na,la=fa;var la,oa;if(2!=(0|oa)){var ia=_a,va=sa;break}for(var ba=_a,ka=ea+8|0;;){var ka,ba,ua=Me[ka>>2];if((Se[ua>>2]-25|0)>>>0>=3){var ia=ba,va=sa;break e}if(ba>>>0>3)break;var ca=(ba<<4)+yr|0,ha=ba-1|0,da=(ha<<4)+yr|0,or=ca>>2,nr=da>>2;Se[or]=Se[nr],Se[or+1]=Se[nr+1],Se[or+2]=Se[nr+2],Se[or+3]=Se[nr+3],Se[ca>>2]=da,Se[br]=ca,Se[((ha<<4)+4>>2)+wr]=ua,Se[((ha<<4)+8>>2)+wr]=0,Se[((ha<<4)+12>>2)+wr]=la;var ba=ba+1|0,ka=ua+4|0}Z(r);break r}while(0);var va,ia,wa=Se[pr+2];if(H(r,wa),4==(0|Se[va>>2])){var pa=Se[dr];Se[lr]=pa}var Ea=0==(0|ia);e:do if(!Ea)for(var Aa=r+8|0,ga=r+12|0,ya=ia;;){var ya,ma=ya-1|0;if(0==(0|Se[((ma<<4)+8>>2)+wr])){var Sa=Me[cr],Ma=0==(0|Sa);do{if(!Ma){var Ca=Me[Aa>>2];if(Ca>>>0>=Me[ga>>2]>>>0){gr=41;break}Se[Aa>>2]=Ca+1|0,Ae[Sa+Ca|0]=32,gr=42;break}gr=41}while(0);41==gr&&Y(r,32);var Ra=Se[((ma<<4)+4>>2)+wr];$(r,Ra)}if(0==(0|ma))break e;var ya=ma}while(0);Se[br]=$r;break r}if(4==(0|Ir)){var sr=(r+20|0)>>2,Ta=Se[sr];Se[sr]=0;var Oa=Se[pr+1];H(r,Oa);var Na=Me[cr],Ia=0==(0|Na);do{if(!Ia){var _r=(r+8|0)>>2,Da=Me[_r],La=0==(0|Da);do if(!La){if(Ae[Na+(Da-1)|0]<<24>>24!=60)break;Da>>>0<Me[Er+3]>>>0?(Se[_r]=Da+1|0,Ae[Na+Da|0]=32):Y(r,32)}while(0);var Fa=Me[cr];if(0==(0|Fa)){gr=54;break}var Xa=Me[_r];if(Xa>>>0>=Me[Er+3]>>>0){gr=54;break}Se[_r]=Xa+1|0,Ae[Fa+Xa|0]=60,gr=55;break}gr=54}while(0);54==gr&&Y(r,60);var ja=Se[pr+2];H(r,ja);var Ua=Me[cr],xa=0==(0|Ua);do{if(!xa){var fr=(r+8|0)>>2,za=Me[fr],Va=0==(0|za);do if(!Va){if(Ae[Ua+(za-1)|0]<<24>>24!=62)break;za>>>0<Me[Er+3]>>>0?(Se[fr]=za+1|0,Ae[Ua+za|0]=32):Y(r,32)}while(0);var Ba=Me[cr];if(0==(0|Ba)){gr=64;break}var Ha=Me[fr];if(Ha>>>0>=Me[Er+3]>>>0){gr=64;break}Se[fr]=Ha+1|0,Ae[Ba+Ha|0]=62,gr=65;break}gr=64}while(0);64==gr&&Y(r,62),Se[sr]=Ta;break r}if(5==(0|Ir)){var tr=(r+16|0)>>2,Ka=Me[tr];if(0==(0|Ka)){Z(r);break r}for(var Ya=Se[pr+1],Ga=Se[Ka+4>>2];;){var Ga,Ya,Wa=Se[Ga+8>>2];if(0==(0|Wa))break;if(39!=(0|Se[Wa>>2])){Z(r);break r}if((0|Ya)<1){if(0!=(0|Ya))break;var Za=Se[Ka>>2];Se[tr]=Za;var Qa=Se[Wa+4>>2];H(r,Qa),Se[tr]=Ka;break r}var Ya=Ya-1|0,Ga=Wa}Z(r);break r}if(6==(0|Ir)){var qa=Se[pr+2];H(r,qa);break r}if(7==(0|Ir)){var $a=r+8|0,Ja=Me[$a>>2];Ja>>>0<Me[Er+3]>>>0?(Se[$a>>2]=Ja+1|0,Ae[Or+Ja|0]=126):Y(r,126);var re=Se[pr+2];H(r,re);break r}if(8==(0|Ir)){var vr=(r+8|0)>>2,ae=Me[vr];if((ae+11|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str121,11);else{for(var ee=Or+ae|0,ie=0|He.__str121,ve=ee,te=ie+11;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var fe=Se[vr]+11|0;Se[vr]=fe}var _e=Se[pr+1];H(r,_e);break r}if(9==(0|Ir)){var J=(r+8|0)>>2,se=Me[J];if((se+8|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str122,8);else{var ne=Or+se|0,le=0|ne;oe=542397526,Ae[le]=255&oe,oe>>=8,Ae[le+1]=255&oe,oe>>=8,Ae[le+2]=255&oe,oe>>=8,Ae[le+3]=255&oe;var be=ne+4|0;oe=544370534,Ae[be]=255&oe,oe>>=8,Ae[be+1]=255&oe,oe>>=8,Ae[be+2]=255&oe,oe>>=8,Ae[be+3]=255&oe;var ke=Se[J]+8|0;Se[J]=ke}var ue=Se[pr+1];H(r,ue);break r}if(10==(0|Ir)){var W=(r+8|0)>>2,ce=Me[W],he=r+12|0;if((ce+24|0)>>>0>Me[he>>2]>>>0)Q(r,0|He.__str123,24);else{var de=Or+ce|0;Pa(de,0|He.__str123,24,1);var we=Se[W]+24|0;Se[W]=we}var pe=Se[pr+1];H(r,pe);var Ee=Me[cr],ge=0==(0|Ee);do{if(!ge){var ye=Me[W];if((ye+4|0)>>>0>Me[he>>2]>>>0){gr=96;break}var me=Ee+ye|0;oe=762210605,Ae[me]=255&oe,oe>>=8,Ae[me+1]=255&oe,oe>>=8,Ae[me+2]=255&oe,oe>>=8,Ae[me+3]=255&oe;var Ce=Se[W]+4|0;Se[W]=Ce,gr=97;break}gr=96}while(0);96==gr&&Q(r,0|He.__str124,4);var Re=Se[pr+2];H(r,Re);break r}if(11==(0|Ir)){var G=(r+8|0)>>2,Te=Me[G];if((Te+13|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str125,13);else{for(var Ne=Or+Te|0,ie=0|He.__str125,ve=Ne,te=ie+13;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Ie=Se[G]+13|0;Se[G]=Ie}var Pe=Se[pr+1];H(r,Pe);break r}if(12==(0|Ir)){var K=(r+8|0)>>2,De=Me[K];if((De+18|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str126,18);else{for(var Le=Or+De|0,ie=0|He.__str126,ve=Le,te=ie+18;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Fe=Se[K]+18|0;Se[K]=Fe}var Xe=Se[pr+1];H(r,Xe);break r}if(13==(0|Ir)){var B=(r+8|0)>>2,je=Me[B];if((je+16|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str127,16);else{for(var Ue=Or+je|0,ie=0|He.__str127,ve=Ue,te=ie+16;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var xe=Se[B]+16|0;Se[B]=xe}var ze=Se[pr+1];H(r,ze);break r}if(14==(0|Ir)){var V=(r+8|0)>>2,Ve=Me[V];if((Ve+21|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str128,21);else{var Be=Or+Ve|0;Pa(Be,0|He.__str128,21,1);var Ke=Se[V]+21|0;Se[V]=Ke}var Ye=Se[pr+1];H(r,Ye);break r}if(15==(0|Ir)){var z=(r+8|0)>>2,Ge=Me[z];if((Ge+17|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str129,17);else{for(var We=Or+Ge|0,ie=0|He.__str129,ve=We,te=ie+17;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Ze=Se[z]+17|0;Se[z]=Ze}var Qe=Se[pr+1];H(r,Qe);break r}if(16==(0|Ir)){var x=(r+8|0)>>2,qe=Me[x];if((qe+26|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str130,26);else{var $e=Or+qe|0;Pa($e,0|He.__str130,26,1);var Je=Se[x]+26|0;Se[x]=Je}var ri=Se[pr+1];H(r,ri);break r}if(17==(0|Ir)){var U=(r+8|0)>>2,ai=Me[U];if((ai+15|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str131,15);else{for(var ei=Or+ai|0,ie=0|He.__str131,ve=ei,te=ie+15;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var ii=Se[U]+15|0;Se[U]=ii}var vi=Se[pr+1];H(r,vi);break r}if(18==(0|Ir)){var j=(r+8|0)>>2,ti=Me[j];if((ti+19|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str132,19);else{for(var fi=Or+ti|0,ie=0|He.__str132,ve=fi,te=ie+19;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var _i=Se[j]+19|0;Se[j]=_i}var si=Se[pr+1];H(r,si);break r}if(19==(0|Ir)){var X=(r+8|0)>>2,ni=Me[X];if((ni+24|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str133,24);else{var oi=Or+ni|0;Pa(oi,0|He.__str133,24,1);var li=Se[X]+24|0;Se[X]=li}var bi=Se[pr+1];H(r,bi);break r}if(20==(0|Ir)){var F=(r+8|0)>>2,ki=Me[F];if((ki+17|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str134,17);else{for(var ui=Or+ki|0,ie=0|He.__str134,ve=ui,te=ie+17;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var ci=Se[F]+17|0;Se[F]=ci}var hi=Se[pr+1];H(r,hi);break r}if(21==(0|Ir)){var L=(r+8|0)>>2,di=Me[L],wi=a+8|0,pi=Me[wi>>2];if((pi+di|0)>>>0>Me[Er+3]>>>0){var Ei=Se[pr+1];Q(r,Ei,pi);break r}var Ai=Or+di|0,gi=Se[pr+1];Pa(Ai,gi,pi,1);var yi=Se[L]+Se[wi>>2]|0;Se[L]=yi;break r}if(22==(0|Ir)||23==(0|Ir)||24==(0|Ir)){for(var mi=r+20|0;;){var mi,Si=Me[mi>>2];if(0==(0|Si))break a;if(0==(0|Se[Si+8>>2])){var Mi=Me[Se[Si+4>>2]>>2];if((Mi-22|0)>>>0>=3)break a;if((0|Mi)==(0|Ir))break}var mi=0|Si}var Ci=Se[pr+1];H(r,Ci);break r}if(25!=(0|Ir)&&26!=(0|Ir)&&27!=(0|Ir)&&28!=(0|Ir)&&29!=(0|Ir)&&30!=(0|Ir)&&31!=(0|Ir)&&32!=(0|Ir)){if(33==(0|Ir)){var D=(r+8|0)>>2,Ri=Me[D],P=(a+4|0)>>2,I=Me[P]>>2;if(0==(4&Se[Er]|0)){var Ti=Me[I+1];if((Ti+Ri|0)>>>0>Me[Er+3]>>>0){var Oi=Se[I];Q(r,Oi,Ti);break r}var Ni=Or+Ri|0,Ii=Se[I];Pa(Ni,Ii,Ti,1);var Pi=Se[D]+Se[Se[P]+4>>2]|0;Se[D]=Pi;break r}var Di=Me[I+3];if((Di+Ri|0)>>>0>Me[Er+3]>>>0){var Li=Se[I+2];Q(r,Li,Di);break r}var Fi=Or+Ri|0,Xi=Se[I+2];Pa(Fi,Xi,Di,1);var ji=Se[D]+Se[Se[P]+12>>2]|0;Se[D]=ji;break r}if(34==(0|Ir)){var Ui=Se[pr+1];H(r,Ui);break r}if(35==(0|Ir)){var N=(0|r)>>2;if(0!=(32&Se[N]|0)){var xi=Se[Er+5];rr(r,a,xi)}var zi=a+4|0,Vi=0==(0|Se[zi>>2]);e:do if(!Vi){var O=(r+20|0)>>2,Bi=Se[O],Hi=0|Mr;Se[Hi>>2]=Bi,Se[O]=Mr,Se[Mr+4>>2]=a;var Ki=Mr+8|0;Se[Ki>>2]=0;var Yi=Se[Er+4];Se[Mr+12>>2]=Yi;var Gi=Se[zi>>2];H(r,Gi);var Wi=Se[Hi>>2];if(Se[O]=Wi,0!=(0|Se[Ki>>2]))break r;if(0!=(32&Se[N]|0))break;var Zi=Me[cr],Qi=0==(0|Zi);do if(!Qi){var qi=r+8|0,$i=Me[qi>>2];if($i>>>0>=Me[Er+3]>>>0)break;Se[qi>>2]=$i+1|0,Ae[Zi+$i|0]=32;break e}while(0);Y(r,32)}while(0);if(0!=(32&Se[N]|0))break r;var Ji=Se[Er+5];rr(r,a,Ji);break r}if(36==(0|Ir)){var T=(r+20|0)>>2,rv=Me[T],av=0|Cr;Se[hr]=rv,Se[T]=av,Se[hr+1]=a;var ev=Cr+8|0;Se[ev>>2]=0;var iv=Se[Er+4];Se[hr+3]=iv;for(var vv=rv,tv=1;;){var tv,vv;if(0==(0|vv))break;if((Se[Se[vv+4>>2]>>2]-22|0)>>>0>=3)break;var fv=vv+8|0;if(0==(0|Se[fv>>2])){if(tv>>>0>3){Z(r);break r}var _v=(tv<<4)+Cr|0,R=_v>>2,C=vv>>2;Se[R]=Se[C],Se[R+1]=Se[C+1],Se[R+2]=Se[C+2],Se[R+3]=Se[C+3];var sv=Se[T];Se[_v>>2]=sv,Se[T]=_v,Se[fv>>2]=1;var nv=tv+1|0}else var nv=tv;var nv,vv=Se[vv>>2],tv=nv}var ov=Se[pr+2];if(H(r,ov),Se[T]=rv,0!=(0|Se[ev>>2]))break r;if(tv>>>0>1){for(var lv=tv;;){var lv,bv=lv-1|0,kv=Se[((bv<<4)+4>>2)+hr];if($(r,kv),bv>>>0<=1)break;var lv=bv}var uv=Se[T]}else var uv=rv;var uv;ar(r,a,uv);break r}if(37==(0|Ir)){var M=(r+20|0)>>2,cv=Se[M],hv=0|Rr;Se[hv>>2]=cv,Se[M]=Rr,Se[Rr+4>>2]=a;var dv=Rr+8|0;Se[dv>>2]=0;var wv=Se[Er+4];Se[Rr+12>>2]=wv;var pv=a+4|0,Ev=Se[pr+2];H(r,Ev);var Av=0==(0|Se[dv>>2]);e:do if(Av){var gv=Me[cr],yv=0==(0|gv);do{if(!yv){var mv=r+8|0,Sv=Me[mv>>2];if(Sv>>>0>=Me[Er+3]>>>0){gr=187;break}Se[mv>>2]=Sv+1|0,Ae[gv+Sv|0]=32,gr=188;break}gr=187}while(0);187==gr&&Y(r,32);var Mv=Se[pv>>2];H(r,Mv);var Cv=Me[cr],Rv=0==(0|Cv);do if(!Rv){var S=(r+8|0)>>2,Tv=Me[S];if((Tv+3|0)>>>0>Me[Er+3]>>>0)break;var Ov=Cv+Tv|0;Ae[Ov]=Ae[0|He.__str135],Ae[Ov+1]=Ae[(0|He.__str135)+1],Ae[Ov+2]=Ae[(0|He.__str135)+2];var Nv=Se[S]+3|0;Se[S]=Nv;break e}while(0);Q(r,0|He.__str135,3)}while(0);var Iv=Se[hv>>2];Se[M]=Iv;break r}if(38==(0|Ir)||39==(0|Ir)){var Pv=Se[pr+1];H(r,Pv);var Dv=a+8|0;if(0==(0|Se[Dv>>2]))break r;var Lv=Me[cr],Fv=0==(0|Lv);do{if(!Fv){var m=(r+8|0)>>2,Xv=Me[m];if((Xv+2|0)>>>0>Me[Er+3]>>>0){gr=197;break}var jv=Lv+Xv|0;oe=8236,Ae[jv]=255&oe,oe>>=8,Ae[jv+1]=255&oe;var Uv=Se[m]+2|0;Se[m]=Uv,gr=198;break}gr=197}while(0);197==gr&&Q(r,0|He.__str136,2);var xv=Se[Dv>>2];H(r,xv);break r}if(40==(0|Ir)){var y=(r+8|0)>>2,zv=Me[y],g=(r+12|0)>>2;if((zv+8|0)>>>0>Me[g]>>>0)Q(r,0|He.__str137,8);else{var Vv=Or+zv|0,le=0|Vv;oe=1919250543,Ae[le]=255&oe,oe>>=8,Ae[le+1]=255&oe,oe>>=8,Ae[le+2]=255&oe,oe>>=8,Ae[le+3]=255&oe;var be=Vv+4|0;oe=1919906913,Ae[be]=255&oe,oe>>=8,Ae[be+1]=255&oe,oe>>=8,Ae[be+2]=255&oe,oe>>=8,Ae[be+3]=255&oe;var Bv=Se[y]+8|0;Se[y]=Bv}var A=(a+4|0)>>2,Hv=(Ae[Se[Se[A]+4>>2]]-97&255&255)<26;e:do if(Hv){var Kv=Me[cr],Yv=0==(0|Kv);do if(!Yv){var Gv=Me[y];if(Gv>>>0>=Me[g]>>>0)break;Se[y]=Gv+1|0,Ae[Kv+Gv|0]=32;break e}while(0);Y(r,32)}while(0);var Wv=Me[cr],Zv=0==(0|Wv);do{if(!Zv){var Qv=Me[y],qv=Me[A],$v=Me[qv+8>>2];if(($v+Qv|0)>>>0>Me[g]>>>0){var Jv=qv,rt=$v;break}var at=Wv+Qv|0,et=Se[qv+4>>2];Pa(at,et,$v,1);var it=Se[y]+Se[Se[A]+8>>2]|0;Se[y]=it;break r}var vt=Me[A],Jv=vt,rt=Se[vt+8>>2]}while(0);var rt,Jv,tt=Se[Jv+4>>2];Q(r,tt,rt);break r}if(41==(0|Ir)){var E=(r+8|0)>>2,ft=Me[E];if((ft+9|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str10180,9);else{for(var _t=Or+ft|0,ie=0|He.__str10180,ve=_t,te=ie+9;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var st=Se[E]+9|0;Se[E]=st}var nt=Se[pr+2];H(r,nt);break r}if(42==(0|Ir)){var p=(r+8|0)>>2,ot=Me[p];if((ot+9|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str10180,9);else{for(var lt=Or+ot|0,ie=0|He.__str10180,ve=lt,te=ie+9;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var bt=Se[p]+9|0;Se[p]=bt}er(r,a);break r}if(43==(0|Ir)){var kt=a+4|0,ut=Se[kt>>2],ct=42==(0|Se[ut>>2]);e:do if(ct){var w=(r+8|0)>>2,ht=Me[w],dt=r+12|0;ht>>>0<Me[dt>>2]>>>0?(Se[w]=ht+1|0,Ae[Or+ht|0]=40):Y(r,40);var wt=Se[kt>>2];er(r,wt);var pt=Me[cr],Et=0==(0|pt);do if(!Et){var At=Me[w];if(At>>>0>=Me[dt>>2]>>>0)break;Se[w]=At+1|0,Ae[pt+At|0]=41;break e}while(0);Y(r,41)}else ir(r,ut);while(0);var gt=Me[cr],yt=0==(0|gt);do{if(!yt){var mt=r+8|0,St=Me[mt>>2];if(St>>>0>=Me[Er+3]>>>0){gr=232;break}Se[mt>>2]=St+1|0,Ae[gt+St|0]=40,gr=233;break}gr=232}while(0);232==gr&&Y(r,40);var Mt=Se[pr+2];H(r,Mt);var Ct=Me[cr],Rt=0==(0|Ct);do if(!Rt){var Tt=r+8|0,Ot=Me[Tt>>2];if(Ot>>>0>=Me[Er+3]>>>0)break;Se[Tt>>2]=Ot+1|0,Ae[Ct+Ot|0]=41;break r}while(0);Y(r,41);break r}if(44==(0|Ir)){var d=(a+8|0)>>2;if(45==(0|Se[Se[d]>>2])){var h=(a+4|0)>>2,Nt=Se[h],It=40==(0|Se[Nt>>2]);do if(It){var Pt=Se[Nt+4>>2];if(1!=(0|Se[Pt+8>>2]))break;if(Ae[Se[Pt+4>>2]]<<24>>24!=62)break;var Dt=r+8|0,Lt=Me[Dt>>2];Lt>>>0<Me[Er+3]>>>0?(Se[Dt>>2]=Lt+1|0,Ae[Or+Lt|0]=40):Y(r,40)}while(0);var Ft=Me[cr],Xt=0==(0|Ft);do{if(!Xt){var jt=r+8|0,Ut=Me[jt>>2];if(Ut>>>0>=Me[Er+3]>>>0){gr=248;break}Se[jt>>2]=Ut+1|0,Ae[Ft+Ut|0]=40,gr=249;break}gr=248}while(0);248==gr&&Y(r,40);var xt=Se[Se[d]+4>>2];H(r,xt);var zt=Me[cr],Vt=0==(0|zt);do{if(!Vt){var c=(r+8|0)>>2,Bt=Me[c];if((Bt+2|0)>>>0>Me[Er+3]>>>0){gr=252;break}var Ht=zt+Bt|0;oe=8233,Ae[Ht]=255&oe,oe>>=8,Ae[Ht+1]=255&oe;var Kt=Se[c]+2|0;Se[c]=Kt,gr=253;break}gr=252}while(0);252==gr&&Q(r,0|He.__str139,2);var Yt=Se[h];ir(r,Yt);var Gt=Me[cr],Wt=0==(0|Gt);do{if(!Wt){var u=(r+8|0)>>2,Zt=Me[u];if((Zt+2|0)>>>0>Me[Er+3]>>>0){gr=256;break}var Qt=Gt+Zt|0;oe=10272,Ae[Qt]=255&oe,oe>>=8,Ae[Qt+1]=255&oe;var qt=Se[u]+2|0;Se[u]=qt,gr=257;break}gr=256}while(0);256==gr&&Q(r,0|He.__str140,2);var $t=Se[Se[d]+8>>2];H(r,$t);var Jt=Me[cr],rf=0==(0|Jt);do{if(!rf){var af=r+8|0,ef=Me[af>>2];if(ef>>>0>=Me[Er+3]>>>0){gr=260;break}Se[af>>2]=ef+1|0,Ae[Jt+ef|0]=41,gr=261;break}gr=260}while(0);260==gr&&Y(r,41);var vf=Se[h];if(40!=(0|Se[vf>>2]))break r;var tf=Se[vf+4>>2];if(1!=(0|Se[tf+8>>2]))break r;if(Ae[Se[tf+4>>2]]<<24>>24!=62)break r;var ff=Me[cr],_f=0==(0|ff);do if(!_f){var sf=r+8|0,nf=Me[sf>>2];if(nf>>>0>=Me[Er+3]>>>0)break;Se[sf>>2]=nf+1|0,Ae[ff+nf|0]=41;break r}while(0);Y(r,41);break r}Z(r);break r}if(45==(0|Ir)){Z(r);break r}if(46==(0|Ir)){var of=a+4|0,k=(a+8|0)>>2,lf=Se[k],bf=47==(0|Se[lf>>2]);do if(bf){if(48!=(0|Se[Se[lf+8>>2]>>2]))break;var b=(r+8|0)>>2,kf=Me[b],l=(r+12|0)>>2;kf>>>0<Me[l]>>>0?(Se[b]=kf+1|0,Ae[Or+kf|0]=40):Y(r,40);var uf=Se[Se[k]+4>>2];H(r,uf);var cf=Me[cr],hf=0==(0|cf);do{if(!hf){var df=Me[b];if((df+2|0)>>>0>Me[l]>>>0){gr=278;break}var wf=cf+df|0;oe=8233,Ae[wf]=255&oe,oe>>=8,Ae[wf+1]=255&oe;var pf=Se[b]+2|0;Se[b]=pf,gr=279;break}gr=278}while(0);278==gr&&Q(r,0|He.__str139,2);var Ef=Se[of>>2];ir(r,Ef);var Af=Me[cr],gf=0==(0|Af);do{if(!gf){var yf=Me[b];if((yf+2|0)>>>0>Me[l]>>>0){gr=282;break}var mf=Af+yf|0;oe=10272,Ae[mf]=255&oe,oe>>=8,Ae[mf+1]=255&oe;var Sf=Se[b]+2|0;Se[b]=Sf,gr=283;break}gr=282}while(0);282==gr&&Q(r,0|He.__str140,2);var Mf=Se[Se[Se[k]+8>>2]+4>>2];H(r,Mf);var Cf=Me[cr],Rf=0==(0|Cf);do{if(!Rf){var Tf=Me[b];if((Tf+5|0)>>>0>Me[l]>>>0){gr=286;break}var Of=Cf+Tf|0;Ae[Of]=Ae[0|He.__str141],Ae[Of+1]=Ae[(0|He.__str141)+1],Ae[Of+2]=Ae[(0|He.__str141)+2],Ae[Of+3]=Ae[(0|He.__str141)+3],Ae[Of+4]=Ae[(0|He.__str141)+4];var Nf=Se[b]+5|0;Se[b]=Nf,gr=287;break}gr=286}while(0);286==gr&&Q(r,0|He.__str141,5);var If=Se[Se[Se[k]+8>>2]+8>>2];H(r,If);var Pf=Me[cr],Df=0==(0|Pf);do if(!Df){var Lf=Me[b];if(Lf>>>0>=Me[l]>>>0)break;Se[b]=Lf+1|0,Ae[Pf+Lf|0]=41;break r}while(0);Y(r,41);break r}while(0);Z(r);break r}if(47==(0|Ir)||48==(0|Ir)){Z(r);break r}if(49==(0|Ir)||50==(0|Ir)){var Ff=a+4|0,Xf=Se[Ff>>2],jf=33==(0|Se[Xf>>2]);do{if(jf){var Uf=Me[Se[Xf+4>>2]+16>>2];if(1==(0|Uf)||2==(0|Uf)||3==(0|Uf)||4==(0|Uf)||5==(0|Uf)||6==(0|Uf)){var xf=a+8|0;if(0!=(0|Se[Se[xf>>2]>>2])){var zf=Uf;break}if(50==(0|Ir)){var Vf=r+8|0,Bf=Me[Vf>>2];Bf>>>0<Me[Er+3]>>>0?(Se[Vf>>2]=Bf+1|0,Ae[Or+Bf|0]=45):Y(r,45)}var Hf=Se[xf>>2];if(H(r,Hf),2==(0|Uf)){var Kf=Me[cr],Yf=0==(0|Kf);do if(!Yf){var Gf=r+8|0,Wf=Me[Gf>>2];if(Wf>>>0>=Me[Er+3]>>>0)break;Se[Gf>>2]=Wf+1|0,Ae[Kf+Wf|0]=117;break r}while(0);Y(r,117);break r}if(3==(0|Uf)){var Zf=Me[cr],Qf=0==(0|Zf);do if(!Qf){var qf=r+8|0,$f=Me[qf>>2];if($f>>>0>=Me[Er+3]>>>0)break;Se[qf>>2]=$f+1|0,Ae[Zf+$f|0]=108;break r}while(0);Y(r,108);break r}if(4==(0|Uf)){var Jf=Me[cr],r_=0==(0|Jf);do if(!r_){var o=(r+8|0)>>2,a_=Me[o];if((a_+2|0)>>>0>Me[Er+3]>>>0)break;var e_=Jf+a_|0;oe=27765,Ae[e_]=255&oe,oe>>=8,Ae[e_+1]=255&oe;var i_=Se[o]+2|0;Se[o]=i_;break r}while(0);Q(r,0|He.__str142,2);break r}if(5==(0|Uf)){var v_=Me[cr],t_=0==(0|v_);do if(!t_){var n=(r+8|0)>>2,f_=Me[n];if((f_+2|0)>>>0>Me[Er+3]>>>0)break;var __=v_+f_|0;oe=27756,Ae[__]=255&oe,oe>>=8,Ae[__+1]=255&oe;var s_=Se[n]+2|0;Se[n]=s_;break r}while(0);Q(r,0|He.__str143,2);break r}if(6==(0|Uf)){var n_=Me[cr],o_=0==(0|n_);do if(!o_){var s=(r+8|0)>>2,l_=Me[s];if((l_+3|0)>>>0>Me[Er+3]>>>0)break;var b_=n_+l_|0;Ae[b_]=Ae[0|He.__str144],Ae[b_+1]=Ae[(0|He.__str144)+1],Ae[b_+2]=Ae[(0|He.__str144)+2];var k_=Se[s]+3|0;Se[s]=k_;break r}while(0);Q(r,0|He.__str144,3);break r}break r}if(7==(0|Uf)){var _=Se[pr+2]>>2;if(0!=(0|Se[_])){var zf=7;break}if(!(1==(0|Se[_+2])&49==(0|Ir))){var zf=Uf;break}var u_=Ae[Se[_+1]]<<24>>24;if(48==(0|u_)){var f=(r+8|0)>>2,c_=Me[f];if((c_+5|0)>>>0>Me[Er+3]>>>0){Q(r,0|He.__str145,5);break r}var h_=Or+c_|0;Ae[h_]=Ae[0|He.__str145],Ae[h_+1]=Ae[(0|He.__str145)+1],Ae[h_+2]=Ae[(0|He.__str145)+2],Ae[h_+3]=Ae[(0|He.__str145)+3],Ae[h_+4]=Ae[(0|He.__str145)+4];var d_=Se[f]+5|0;Se[f]=d_;break r}if(49==(0|u_)){var t=(r+8|0)>>2,w_=Me[t];if((w_+4|0)>>>0>Me[Er+3]>>>0){Q(r,0|He.__str146,4);break r}var p_=Or+w_|0;oe=1702195828,Ae[p_]=255&oe,oe>>=8,Ae[p_+1]=255&oe,oe>>=8,Ae[p_+2]=255&oe,oe>>=8,Ae[p_+3]=255&oe;var E_=Se[t]+4|0;Se[t]=E_;break r}var zf=Uf;break}var zf=Uf;break}var zf=0}while(0);var zf,v=(r+8|0)>>2,A_=Me[v],i=(r+12|0)>>2;A_>>>0<Me[i]>>>0?(Se[v]=A_+1|0,Ae[Or+A_|0]=40):Y(r,40);var g_=Se[Ff>>2];H(r,g_);var y_=Me[cr],m_=0==(0|y_);do{if(!m_){var S_=Me[v];if(S_>>>0>=Me[i]>>>0){gr=335;break}Se[v]=S_+1|0,Ae[y_+S_|0]=41,gr=336;break}gr=335}while(0);335==gr&&Y(r,41);var M_=50==(0|Se[Nr>>2]);e:do if(M_){var C_=Me[cr],R_=0==(0|C_);do if(!R_){var T_=Me[v];if(T_>>>0>=Me[i]>>>0)break;Se[v]=T_+1|0,Ae[C_+T_|0]=45;break e}while(0);Y(r,45)}while(0);if(8==(0|zf)){var O_=Me[cr],N_=0==(0|O_);do{if(!N_){var I_=Me[v];if(I_>>>0>=Me[i]>>>0){gr=345;break}Se[v]=I_+1|0,Ae[O_+I_|0]=91,gr=346;break}gr=345}while(0);345==gr&&Y(r,91);var P_=Se[pr+2];H(r,P_);var D_=Me[cr],L_=0==(0|D_);do if(!L_){var F_=Me[v];if(F_>>>0>=Me[i]>>>0)break;Se[v]=F_+1|0,Ae[D_+F_|0]=93;break r}while(0);Y(r,93);break r}var X_=Se[pr+2];H(r,X_);break r}Z(r);break r}}while(0);var e=(r+20|0)>>2,j_=Se[e],U_=0|Sr;Se[U_>>2]=j_,Se[e]=Sr,Se[Sr+4>>2]=a;var x_=Sr+8|0;Se[x_>>2]=0;var z_=Se[Er+4];Se[Sr+12>>2]=z_;var V_=Se[pr+1];H(r,V_),0==(0|Se[x_>>2])&&$(r,a);var B_=Se[U_>>2];Se[e]=B_}while(0);Oe=Ar}function K(r,a,e,i){var v=i>>2;Se[v]=r,Se[v+1]=r+e|0,Se[v+2]=a,Se[v+3]=r,Se[v+6]=e<<1,Se[v+5]=0,Se[v+9]=e,Se[v+8]=0,Se[v+10]=0,Se[v+11]=0,Se[v+12]=0}function Y(r,a){var e,i=r+4|0,v=Me[i>>2],t=0==(0|v);do if(!t){var e=(r+8|0)>>2,f=Me[e];if(f>>>0<Me[r+12>>2]>>>0)var _=v,s=f;else{tr(r,1);var n=Me[i>>2];if(0==(0|n))break;var _=n,s=Se[e]}var s,_;Ae[_+s|0]=255&a;var o=Se[e]+1|0;Se[e]=o}while(0)}function G(r,a,e,i){var v,t=i>>2,f=Oe;Oe+=4;var _=f,v=_>>2,s=0==(0|r);do if(s){if(0==(0|i)){var n=0;break}Se[t]=-3;var n=0}else{var o=0==(0|e);if(0!=(0|a)&o){if(0==(0|i)){var n=0;break}Se[t]=-3;var n=0}else{var l=W(r,_);if(0==(0|l)){if(0==(0|i)){var n=0;break}if(1==(0|Se[v])){Se[t]=-1;var n=0}else{Se[t]=-2;var n=0}}else{var b=0==(0|a);do if(b){if(o){var k=l;break}var u=Se[v];Se[e>>2]=u;var k=l}else{var c=Ca(l);if(c>>>0<Me[e>>2]>>>0){Ra(a,l);va(l);var k=a}else{va(a);var h=Se[v];Se[e>>2]=h;var k=l}}while(0);var k;if(0==(0|i)){var n=k;break}Se[t]=0;var n=k}}}while(0);var n;return Oe=f,n}function W(r,a){var e,i=Oe;Oe+=52;var v,t=i,e=t>>2;Se[a>>2]=0;var f=Ca(r),_=Ae[r]<<24>>24==95;do{if(_){if(Ae[r+1|0]<<24>>24==90){var s=0;v=13;break}v=3;break}v=3}while(0);do if(3==v){var n=Na(r,0|He.__str117,8);if(0!=(0|n)){var s=1;v=13;break}var o=Ae[r+8|0];if(o<<24>>24!=46&&o<<24>>24!=95&&o<<24>>24!=36){var s=1;v=13;break}var l=r+9|0,b=Ae[l];if(b<<24>>24!=68&&b<<24>>24!=73){\nvar s=1;v=13;break}if(Ae[r+10|0]<<24>>24!=95){var s=1;v=13;break}var k=f+29|0,u=Jr(k);if(0==(0|u)){Se[a>>2]=1;var c=0;v=19;break}Ae[l]<<24>>24==73?Pa(u,0|He.__str118,30,1):Pa(u,0|He.__str119,29,1);var h=r+11|0,c=(Ia(u,h),u);v=19;break}while(0);if(13==v){var s;K(r,17,f,t);var d=Se[e+6],w=Ta(),p=Oe;Oe+=12*d,Oe=Oe+3>>2<<2;var E=Oe;if(Oe+=4*Se[e+9],Oe=Oe+3>>2<<2,Se[e+4]=p,Se[e+7]=E,s)var A=N(t),g=A;else var y=T(t,1),g=y;var g,m=Ae[Se[e+3]]<<24>>24==0?g:0,S=Se[e+12]+f+10*Se[e+10]|0;if(0==(0|m))var M=0;else var C=S/8+S|0,R=B(17,m,C,a),M=R;var M;Oa(w);var c=M}var c;return Oe=i,c}function Z(r){var a=r+4|0,e=Se[a>>2];va(e),Se[a>>2]=0}function Q(r,a,e){var i,v=r+4|0,t=Me[v>>2],f=0==(0|t);do if(!f){var i=(r+8|0)>>2,_=Me[i];if((_+e|0)>>>0>Me[r+12>>2]>>>0){tr(r,e);var s=Me[v>>2];if(0==(0|s))break;var n=s,o=Se[i]}else var n=t,o=_;var o,n;Pa(n+o|0,a,e,1);var l=Se[i]+e|0;Se[i]=l}while(0)}function q(r,a,e){var i,v,t=a+e|0,f=(0|e)>0;r:do if(f)for(var _=t,s=r+4|0,i=(r+8|0)>>2,n=r+12|0,o=a;;){var o,l=(_-o|0)>3;a:do{if(l){if(Ae[o]<<24>>24!=95){v=21;break}if(Ae[o+1|0]<<24>>24!=95){v=21;break}if(Ae[o+2|0]<<24>>24!=85){v=21;break}for(var b=o+3|0,k=0;;){var k,b;if(b>>>0>=t>>>0){v=21;break a}var u=ge[b],c=u<<24>>24;if((u-48&255&255)<10)var h=c-48|0;else if((u-65&255&255)<6)var h=c-55|0;else{if((u-97&255&255)>=6)break;var h=c-87|0}var h,b=b+1|0,k=(k<<4)+h|0}if(!(u<<24>>24==95&k>>>0<256)){v=21;break}var d=Me[s>>2],w=0==(0|d);do if(!w){var p=Me[i];if(p>>>0>=Me[n>>2]>>>0)break;Se[i]=p+1|0,Ae[d+p|0]=255&k;var E=b;v=25;break a}while(0);Y(r,k);var E=b;v=25;break}v=21}while(0);a:do if(21==v){var A=Me[s>>2],g=0==(0|A);do if(!g){var y=Me[i];if(y>>>0>=Me[n>>2]>>>0)break;var m=Ae[o];Se[i]=y+1|0,Ae[A+y|0]=m;var E=o;break a}while(0);var S=Ae[o]<<24>>24;Y(r,S);var E=o}while(0);var E,M=E+1|0;if(M>>>0>=t>>>0)break r;var o=M}while(0)}function $(r,a){var e,i,v,t,f,_,s,n=r>>2,o=Se[a>>2];r:do if(22==(0|o)||25==(0|o)){var l=Me[n+1],b=0==(0|l);do if(!b){var _=(r+8|0)>>2,k=Me[_];if((k+9|0)>>>0>Me[n+3]>>>0)break;for(var u=l+k|0,c=0|He.__str147,h=u,d=c+9;c<d;c++,h++)Ae[h]=Ae[c];var w=Se[_]+9|0;Se[_]=w;break r}while(0);Q(r,0|He.__str147,9)}else if(23==(0|o)||26==(0|o)){var p=Me[n+1],E=0==(0|p);do if(!E){var f=(r+8|0)>>2,A=Me[f];if((A+9|0)>>>0>Me[n+3]>>>0)break;for(var g=p+A|0,c=0|He.__str148,h=g,d=c+9;c<d;c++,h++)Ae[h]=Ae[c];var y=Se[f]+9|0;Se[f]=y;break r}while(0);Q(r,0|He.__str148,9)}else if(24==(0|o)||27==(0|o)){var m=Me[n+1],S=0==(0|m);do if(!S){var t=(r+8|0)>>2,M=Me[t];if((M+6|0)>>>0>Me[n+3]>>>0)break;var C=m+M|0;Ae[C]=Ae[0|He.__str149],Ae[C+1]=Ae[(0|He.__str149)+1],Ae[C+2]=Ae[(0|He.__str149)+2],Ae[C+3]=Ae[(0|He.__str149)+3],Ae[C+4]=Ae[(0|He.__str149)+4],Ae[C+5]=Ae[(0|He.__str149)+5];var R=Se[t]+6|0;Se[t]=R;break r}while(0);Q(r,0|He.__str149,6)}else if(28==(0|o)){var T=Me[n+1],O=0==(0|T);do{if(!O){var N=r+8|0,I=Me[N>>2];if(I>>>0>=Me[n+3]>>>0){s=17;break}Se[N>>2]=I+1|0,Ae[T+I|0]=32,s=18;break}s=17}while(0);17==s&&Y(r,32);var P=Se[a+8>>2];H(r,P)}else if(29==(0|o)){if(0!=(4&Se[n]|0))break;var D=Me[n+1],L=0==(0|D);do if(!L){var F=r+8|0,X=Me[F>>2];if(X>>>0>=Me[n+3]>>>0)break;Se[F>>2]=X+1|0,Ae[D+X|0]=42;break r}while(0);Y(r,42)}else if(30==(0|o)){var j=Me[n+1],U=0==(0|j);do if(!U){var x=r+8|0,z=Me[x>>2];if(z>>>0>=Me[n+3]>>>0)break;Se[x>>2]=z+1|0,Ae[j+z|0]=38;break r}while(0);Y(r,38)}else if(31==(0|o)){var V=Me[n+1],B=0==(0|V);do if(!B){var v=(r+8|0)>>2,K=Me[v];if((K+8|0)>>>0>Me[n+3]>>>0)break;var G=V+K|0,W=0|G;oe=1886220131,Ae[W]=255&oe,oe>>=8,Ae[W+1]=255&oe,oe>>=8,Ae[W+2]=255&oe,oe>>=8,Ae[W+3]=255&oe;var Z=G+4|0;oe=544761196,Ae[Z]=255&oe,oe>>=8,Ae[Z+1]=255&oe,oe>>=8,Ae[Z+2]=255&oe,oe>>=8,Ae[Z+3]=255&oe;var q=Se[v]+8|0;Se[v]=q;break r}while(0);Q(r,0|He.__str150,8)}else if(32==(0|o)){var $=Me[n+1],J=0==(0|$);do if(!J){var i=(r+8|0)>>2,rr=Me[i];if((rr+10|0)>>>0>Me[n+3]>>>0)break;for(var ar=$+rr|0,c=0|He.__str151,h=ar,d=c+10;c<d;c++,h++)Ae[h]=Ae[c];var er=Se[i]+10|0;Se[i]=er;break r}while(0);Q(r,0|He.__str151,10)}else if(37==(0|o)){var ir=r+4|0,vr=Me[ir>>2],tr=0==(0|vr);do{if(!tr){var fr=r+8|0,_r=Me[fr>>2];if(0!=(0|_r)&&Ae[vr+(_r-1)|0]<<24>>24==40){s=42;break}if(_r>>>0>=Me[n+3]>>>0){s=41;break}Se[fr>>2]=_r+1|0,Ae[vr+_r|0]=32,s=42;break}s=41}while(0);41==s&&Y(r,32);var sr=Se[a+4>>2];H(r,sr);var nr=Me[ir>>2],or=0==(0|nr);do if(!or){var e=(r+8|0)>>2,lr=Me[e];if((lr+3|0)>>>0>Me[n+3]>>>0)break;var br=nr+lr|0;Ae[br]=Ae[0|He.__str135],Ae[br+1]=Ae[(0|He.__str135)+1],Ae[br+2]=Ae[(0|He.__str135)+2];var kr=Se[e]+3|0;Se[e]=kr;break r}while(0);Q(r,0|He.__str135,3)}else if(3==(0|o)){var ur=Se[a+4>>2];H(r,ur)}else H(r,a);while(0)}function J(r){var a=r+20|0,e=Se[a>>2];if((0|e)<(0|Se[r+24>>2])){var i=Se[r+16>>2]+12*e|0,v=e+1|0;Se[a>>2]=v;var t=i}else var t=0;var t;return t}function rr(r,a,e){var i,v,t,f,_=r>>2,s=e,t=s>>2,n=0;r:for(;;){var n,s,o=0==(0|s);do if(!o){if(0!=(0|Se[t+2]))break;var l=Se[Se[t+1]>>2];if(29==(0|l)||30==(0|l)){f=9;break r}if(22==(0|l)||23==(0|l)||24==(0|l)||28==(0|l)||31==(0|l)||32==(0|l)||37==(0|l)){var b=Se[_+1];f=12;break r}var s=Se[t],t=s>>2,n=1;continue r}while(0);if(0!=(0|Se[a+4>>2])&0==(0|n)){f=9;break}var k=0,u=r+4|0,v=u>>2;f=22;break}do if(9==f){var c=Se[_+1];if(0==(0|c)){f=17;break}var h=Se[_+2];if(0==(0|h)){var d=c;f=13;break}var w=Ae[c+(h-1)|0];if(w<<24>>24==40||w<<24>>24==42){f=18;break}var b=c;f=12;break}while(0);do if(12==f){var b;if(0==(0|b)){f=17;break}var d=b;f=13;break}while(0);do if(13==f){var d,p=r+8|0,E=Me[p>>2];if(0!=(0|E)&&Ae[d+(E-1)|0]<<24>>24==32){f=18;break}if(E>>>0>=Me[_+3]>>>0){f=17;break}Se[p>>2]=E+1|0,Ae[d+E|0]=32,f=18;break}while(0);do if(17==f){Y(r,32),f=18;break}while(0);r:do if(18==f){var A=r+4|0,g=Me[A>>2],y=0==(0|g);do if(!y){var m=r+8|0,S=Me[m>>2];if(S>>>0>=Me[_+3]>>>0)break;Se[m>>2]=S+1|0,Ae[g+S|0]=40;var k=1,u=A,v=u>>2;break r}while(0);Y(r,40);var k=1,u=A,v=u>>2}while(0);var u,k,i=(r+20|0)>>2,M=Se[i];Se[i]=0,vr(r,e,0);r:do if(k){var C=Me[v],R=0==(0|C);do if(!R){var T=r+8|0,O=Me[T>>2];if(O>>>0>=Me[_+3]>>>0)break;Se[T>>2]=O+1|0,Ae[C+O|0]=41;break r}while(0);Y(r,41)}while(0);var N=Me[v],I=0==(0|N);do{if(!I){var P=r+8|0,D=Me[P>>2];if(D>>>0>=Me[_+3]>>>0){f=30;break}Se[P>>2]=D+1|0,Ae[N+D|0]=40,f=31;break}f=30}while(0);30==f&&Y(r,40);var L=Se[a+8>>2];0!=(0|L)&&H(r,L);var F=Me[v],X=0==(0|F);do{if(!X){var j=r+8|0,U=Me[j>>2];if(U>>>0>=Me[_+3]>>>0){f=36;break}Se[j>>2]=U+1|0,Ae[F+U|0]=41,f=37;break}f=36}while(0);36==f&&Y(r,41),vr(r,e,1),Se[i]=M}function ar(r,a,e){var i,v,t,f=r>>2,_=0==(0|e);do{if(!_){var s=e,v=s>>2;r:for(;;){var s;if(0==(0|s)){var n=1;t=14;break}if(0==(0|Se[v+2])){var o=36==(0|Se[Se[v+1]>>2]),l=1&o^1;if(o){var n=l;t=14;break}var b=r+4|0,k=Me[b>>2],u=0==(0|k);do{if(!u){var i=(r+8|0)>>2,c=Me[i];if((c+2|0)>>>0>Me[f+3]>>>0){t=9;break}var h=k+c|0;oe=10272,Ae[h]=255&oe,oe>>=8,Ae[h+1]=255&oe;var d=Se[i]+2|0;Se[i]=d,vr(r,e,0),t=10;break}t=9}while(0);9==t&&(Q(r,0|He.__str140,2),vr(r,e,0));var w=Me[b>>2],p=0==(0|w);do if(!p){var E=r+8|0,A=Me[E>>2];if(A>>>0>=Me[f+3]>>>0)break;Se[E>>2]=A+1|0,Ae[w+A|0]=41;var g=l;t=15;break r}while(0);Y(r,41);var g=l;t=15;break}var s=Se[v],v=s>>2}if(14==t){var n;vr(r,e,0);var g=n}var g;if(0!=(0|g)){t=17;break}var y=r+4|0;t=21;break}t=17}while(0);r:do if(17==t){var m=r+4|0,S=Me[m>>2],M=0==(0|S);do if(!M){var C=r+8|0,R=Me[C>>2];if(R>>>0>=Me[f+3]>>>0)break;Se[C>>2]=R+1|0,Ae[S+R|0]=32;var y=m;break r}while(0);Y(r,32);var y=m}while(0);var y,T=Me[y>>2],O=0==(0|T);do{if(!O){var N=r+8|0,I=Me[N>>2];if(I>>>0>=Me[f+3]>>>0){t=24;break}Se[N>>2]=I+1|0,Ae[T+I|0]=91,t=25;break}t=24}while(0);24==t&&Y(r,91);var P=Se[a+4>>2];0!=(0|P)&&H(r,P);var D=Me[y>>2],L=0==(0|D);do{if(!L){var F=r+8|0,X=Me[F>>2];if(X>>>0>=Me[f+3]>>>0){t=30;break}Se[F>>2]=X+1|0,Ae[D+X|0]=93,t=31;break}t=30}while(0);30==t&&Y(r,93)}function er(r,a){var e,i,v,t,f,_,s=Oe;Oe+=8;var n,o=s,_=(a+4|0)>>2,l=Se[_];if(4==(0|Se[l>>2])){var f=(r+20|0)>>2,b=Se[f];Se[f]=0;var t=(r+16|0)>>2,k=Se[t],u=0|o;Se[u>>2]=k,Se[t]=o;var c=Se[_];Se[o+4>>2]=c;var h=Se[c+4>>2];H(r,h);var d=Se[u>>2];Se[t]=d;var v=(r+4|0)>>2,w=Me[v],p=0==(0|w);do{if(!p){var i=(r+8|0)>>2,E=Me[i],A=0==(0|E);do if(!A){if(Ae[w+(E-1)|0]<<24>>24!=60)break;E>>>0<Me[r+12>>2]>>>0?(Se[i]=E+1|0,Ae[w+E|0]=32):Y(r,32)}while(0);var g=Me[v];if(0==(0|g)){n=12;break}var y=Me[i];if(y>>>0>=Me[r+12>>2]>>>0){n=12;break}Se[i]=y+1|0,Ae[g+y|0]=60,n=13;break}n=12}while(0);12==n&&Y(r,60);var m=Se[Se[_]+8>>2];H(r,m);var S=Me[v],M=0==(0|S);do{if(!M){var e=(r+8|0)>>2,C=Me[e],R=0==(0|C);do if(!R){if(Ae[S+(C-1)|0]<<24>>24!=62)break;C>>>0<Me[r+12>>2]>>>0?(Se[e]=C+1|0,Ae[S+C|0]=32):Y(r,32)}while(0);var T=Me[v];if(0==(0|T)){n=22;break}var O=Me[e];if(O>>>0>=Me[r+12>>2]>>>0){n=22;break}Se[e]=O+1|0,Ae[T+O|0]=62,n=23;break}n=22}while(0);22==n&&Y(r,62),Se[f]=b}else H(r,l);Oe=s}function ir(r,a){var e,i=40==(0|Se[a>>2]);r:do if(i){var v=Me[r+4>>2],t=0==(0|v);do{if(!t){var e=(r+8|0)>>2,f=Me[e],_=a+4|0,s=Me[_>>2],n=Me[s+8>>2];if((n+f|0)>>>0>Me[r+12>>2]>>>0){var o=s,l=n;break}var b=v+f|0,k=Se[s+4>>2];Pa(b,k,n,1);var u=Se[e]+Se[Se[_>>2]+8>>2]|0;Se[e]=u;break r}var c=Me[a+4>>2],o=c,l=Se[c+8>>2]}while(0);var l,o,h=Se[o+4>>2];Q(r,h,l)}else H(r,a);while(0)}function vr(r,a,e){var i,v,t,f,_,f=(r+4|0)>>2,s=0==(0|e),t=(r+16|0)>>2;r:do if(s)for(var n=a;;){var n;if(0==(0|n)){_=29;break r}if(0==(0|Se[f])){_=29;break r}var o=n+8|0,l=0==(0|Se[o>>2]);do if(l){var b=n+4|0;if((Se[Se[b>>2]>>2]-25|0)>>>0<3)break;Se[o>>2]=1;var k=Me[t],u=Se[n+12>>2];Se[t]=u;var c=Me[b>>2],h=Se[c>>2];if(35==(0|h)){var d=n,w=k,p=c;_=14;break r}if(36==(0|h)){var E=n,A=k,g=c;_=15;break r}if(2==(0|h)){var y=k,m=b;_=16;break r}$(r,c),Se[t]=k}while(0);var n=Se[n>>2]}else for(var S=a;;){var S;if(0==(0|S)){_=29;break r}if(0==(0|Se[f])){_=29;break r}var M=S+8|0;if(0==(0|Se[M>>2])){Se[M>>2]=1;var C=Me[t],R=Se[S+12>>2];Se[t]=R;var T=S+4|0,O=Me[T>>2],N=Se[O>>2];if(35==(0|N)){var d=S,w=C,p=O;_=14;break r}if(36==(0|N)){var E=S,A=C,g=O;_=15;break r}if(2==(0|N)){var y=C,m=T;_=16;break r}$(r,O),Se[t]=C}var S=Se[S>>2]}while(0);if(14==_){var p,w,d,I=Se[d>>2];rr(r,p,I),Se[t]=w}else if(15==_){var g,A,E,P=Se[E>>2];ar(r,g,P),Se[t]=A}else if(16==_){var m,y,v=(r+20|0)>>2,D=Se[v];Se[v]=0;var L=Se[Se[m>>2]+4>>2];H(r,L),Se[v]=D;var F=0==(4&Se[r>>2]|0),X=Me[f],j=0!=(0|X);r:do if(F){do if(j){var i=(r+8|0)>>2,U=Me[i];if((U+2|0)>>>0>Me[r+12>>2]>>>0)break;var x=X+U|0;oe=14906,Ae[x]=255&oe,oe>>=8,Ae[x+1]=255&oe;var z=Se[i]+2|0;Se[i]=z;break r}while(0);Q(r,0|He.__str120,2)}else{do if(j){var V=r+8|0,B=Me[V>>2];if(B>>>0>=Me[r+12>>2]>>>0)break;Se[V>>2]=B+1|0,Ae[X+B|0]=46;break r}while(0);Y(r,46)}while(0);var K=Me[Se[m>>2]+8>>2],G=(Se[K>>2]-25|0)>>>0<3;r:do if(G)for(var W=K;;){var W,Z=Me[W+4>>2];if((Se[Z>>2]-25|0)>>>0>=3){var q=Z;break r}var W=Z}else var q=K;while(0);var q;H(r,q),Se[t]=y}}function tr(r,a){var e,e=(r+4|0)>>2,i=Se[e],v=0==(0|i);r:do if(!v){for(var t=Se[r+8>>2]+a|0,f=r+12|0,_=Se[f>>2],s=i;;){var s,_;if(t>>>0<=_>>>0)break r;var n=_<<1,o=fa(s,n);if(0==(0|o))break;Se[e]=o,Se[f>>2]=n;var _=n,s=o}var l=Se[e];va(l),Se[e]=0,Se[r+24>>2]=1}while(0)}function fr(r,a,e){var i,v=J(r),i=v>>2;return 0!=(0|v)&&(Se[i]=21,Se[i+1]=a,Se[i+2]=e),v}function _r(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e]<<24>>24;if(88==(0|i)){var v=e+1|0;Se[a]=v;var t=nr(r),f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==69?t:0,n=s}else if(76==(0|i))var o=or(r),n=o;else var l=N(r),n=l;var n;return n}function sr(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e];if(i<<24>>24==110){var v=e+1|0;Se[a]=v;var t=1,f=Ae[v],_=v}else var t=0,f=i,_=e;var _,f,t,s=(f-48&255&255)<10;r:do if(s)for(var n=f,o=0,l=_;;){var l,o,n,b=(n<<24>>24)-48+10*o|0,k=l+1|0;Se[a]=k;var u=ge[k];if((u-48&255&255)>=10){var c=b;break r}var n=u,o=b,l=k}else var c=0;while(0);var c,h=0==(0|t)?c:0|-c;return h}function nr(r){var a,e,a=(r+12|0)>>2,i=Se[a],v=Ae[i];do{if(v<<24>>24==76){var t=or(r),f=t;e=21;break}if(v<<24>>24==84){var _=x(r),f=_;e=21;break}if(v<<24>>24==115){if(Ae[i+1|0]<<24>>24!=114){e=8;break}var s=i+2|0;Se[a]=s;var n=N(r),o=br(r);if(Ae[Se[a]]<<24>>24==73){var l=z(r),b=D(r,4,o,l),k=D(r,1,n,b),f=k;e=21;break}var u=D(r,1,n,o),f=u;e=21;break}e=8}while(0);r:do if(8==e){var c=kr(r);if(0==(0|c)){var f=0;break}var h=0|c,d=Se[h>>2],w=40==(0|d);do{if(w){var p=c+4|0,E=r+48|0,A=Se[Se[p>>2]+8>>2]-2+Se[E>>2]|0;Se[E>>2]=A;var g=Se[h>>2];if(40!=(0|g)){var y=g;e=13;break}var m=Se[p>>2],S=Se[m>>2],M=Da(S,0|He.__str90);if(0!=(0|M)){var C=m;e=15;break}var R=N(r),T=D(r,43,c,R),f=T;break r}var y=d;e=13}while(0);do if(13==e){var y;if(40==(0|y)){var C=Se[c+4>>2];e=15;break}if(41==(0|y)){var O=c+4|0;e=17;break}if(42==(0|y)){e=18;break}var f=0;break r}while(0);do if(15==e){var C,O=C+12|0;e=17;break}while(0);do if(17==e){var O,I=Se[O>>2];if(1==(0|I))break;if(2==(0|I)){var P=nr(r),L=nr(r),F=D(r,45,P,L),X=D(r,44,c,F);return X}if(3==(0|I)){var j=nr(r),U=nr(r),V=nr(r),B=D(r,48,U,V),H=D(r,47,j,B),K=D(r,46,c,H);return K}var f=0;break r}while(0);var Y=nr(r),G=D(r,43,c,Y);return G}while(0);var f;return f}function or(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==76;r:do if(v){if(Ae[i]<<24>>24==95)var t=T(r,0),f=t;else{var _=N(r);if(0==(0|_)){var s=0;break}var n=33==(0|Se[_>>2]);do if(n){var o=Se[_+4>>2];if(0==(0|Se[o+16>>2]))break;var l=r+48|0,b=Se[l>>2]-Se[o+4>>2]|0;Se[l>>2]=b}while(0);var k=Se[a];if(Ae[k]<<24>>24==110){var u=k+1|0;Se[a]=u;var c=50,h=u}else var c=49,h=k;for(var h,c,d=h;;){var d,w=Ae[d];if(w<<24>>24==69)break;if(w<<24>>24==0){var s=0;break r}var p=d+1|0;Se[a]=p;var d=p}var E=lr(r,h,d-h|0),A=D(r,c,_,E),f=A}var f,g=Se[a],y=g+1|0;Se[a]=y;var m=Ae[g]<<24>>24==69?f:0,s=m}else var s=0;while(0);var s;return s}function lr(r,a,e){var i=J(r),v=m(i,a,e),t=0==(0|v)?0:i;return t}function br(r){var a=r+12|0,e=Me[a>>2],i=ge[e],v=(i-48&255&255)<10;do if(v)var t=L(r),f=t;else if((i-97&255&255)<26){var _=kr(r);if(0==(0|_)){var f=0;break}if(40!=(0|Se[_>>2])){var f=_;break}var s=r+48|0,n=Se[Se[_+4>>2]+8>>2]+Se[s>>2]+7|0;Se[s>>2]=n;var f=_}else if(i<<24>>24==67||i<<24>>24==68)var o=hr(r),f=o;else{if(i<<24>>24!=76){var f=0;break}Se[a>>2]=e+1|0;var l=L(r);if(0==(0|l)){var f=0;break}var b=dr(r),k=0==(0|b)?0:l,f=k}while(0);var f;return f}function kr(r){var a,e,a=(r+12|0)>>2,i=Se[a],v=i+1|0;Se[a]=v;var t=ge[i],f=i+2|0;Se[a]=f;var _=ge[v];do{if(t<<24>>24==118){if((_-48&255&255)>=10){var s=49,n=0;e=6;break}var o=(_<<24>>24)-48|0,l=L(r),b=ur(r,o,l),k=b;e=14;break}if(t<<24>>24==99){if(_<<24>>24!=118){var s=49,n=0;e=6;break}var u=N(r),c=D(r,42,u,0),k=c;e=14;break}var s=49,n=0;e=6}while(0);r:do if(6==e){for(;;){var n,s,h=(s-n)/2+n|0,d=(h<<4)+ri|0,w=Se[d>>2],p=Ae[w],E=t<<24>>24==p<<24>>24;if(E&&_<<24>>24==Ae[w+1|0]<<24>>24)break;var A=t<<24>>24<p<<24>>24;do if(A)var g=h,y=n;else{if(E&&_<<24>>24<Ae[w+1|0]<<24>>24){var g=h,y=n;break}var g=s,y=h+1|0}while(0);var y,g;if((0|y)==(0|g)){var k=0;break r}var s=g,n=y}var m=cr(r,d),k=m}while(0);var k;return k}function ur(r,a,e){var i=J(r),v=S(i,a,e),t=0==(0|v)?0:i;return t}function cr(r,a){var e=J(r);return 0!=(0|e)&&(Se[e>>2]=40,Se[e+4>>2]=a),e}function hr(r){var a,e,i=Se[r+44>>2],e=i>>2,v=0==(0|i);do if(!v){var t=Se[e];if(0==(0|t)){var f=r+48|0,_=Se[f>>2]+Se[e+2]|0;Se[f>>2]=_}else{if(21!=(0|t))break;var s=r+48|0,n=Se[s>>2]+Se[e+2]|0;Se[s>>2]=n}}while(0);var a=(r+12|0)>>2,o=Se[a],l=o+1|0;Se[a]=l;var b=Ae[o]<<24>>24;do if(67==(0|b)){var k=o+2|0;Se[a]=k;var u=Ae[l]<<24>>24;if(49==(0|u))var c=1;else if(50==(0|u))var c=2;else{if(51!=(0|u)){var h=0;break}var c=3}var c,d=wr(r,c,i),h=d}else if(68==(0|b)){var w=o+2|0;Se[a]=w;var p=Ae[l]<<24>>24;if(48==(0|p))var E=1;else if(49==(0|p))var E=2;else{if(50!=(0|p)){var h=0;break}var E=3}var E,A=pr(r,E,i),h=A}else var h=0;while(0);var h;return h}function dr(r){var a=r+12|0,e=Se[a>>2];if(Ae[e]<<24>>24==95){var i=e+1|0;Se[a>>2]=i;var v=sr(r),t=v>>>31^1}else var t=1;var t;return t}function wr(r,a,e){var i=J(r),v=M(i,a,e),t=0==(0|v)?0:i;return t}function pr(r,a,e){var i=J(r),v=C(i,a,e),t=0==(0|v)?0:i;return t}function Er(r,a){var e=J(r);return 0!=(0|e)&&(Se[e>>2]=5,Se[e+4>>2]=a),e}function Ar(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e]<<24>>24;do if(78==(0|i))var v=gr(r),t=v;else if(90==(0|i))var f=yr(r),t=f;else if(76==(0|i))var _=br(r),t=_;else if(83==(0|i)){if(Ae[e+1|0]<<24>>24==116){var s=e+2|0;Se[a]=s;var n=lr(r,0|He.__str152,3),o=br(r),l=D(r,1,n,o),b=r+48|0,k=Se[b>>2]+3|0;Se[b>>2]=k;var u=0,c=l}else var h=V(r,0),u=1,c=h;var c,u;if(Ae[Se[a]]<<24>>24!=73){var t=c;break}if(0==(0|u)){var d=R(r,c);if(0==(0|d)){var t=0;break}}var w=z(r),p=D(r,4,c,w),t=p}else{var E=br(r);if(Ae[Se[a]]<<24>>24!=73){var t=E;break}var A=R(r,E);if(0==(0|A)){var t=0;break}var g=z(r),y=D(r,4,E,g),t=y}while(0);var t;return t}function gr(r){var a,e=Oe;Oe+=4;var i=e,a=(r+12|0)>>2,v=Se[a],t=v+1|0;Se[a]=t;var f=Ae[v]<<24>>24==78;do if(f){var _=I(r,i,1);if(0==(0|_)){var s=0;break}var n=mr(r);if(Se[_>>2]=n,0==(0|n)){var s=0;break}var o=Se[a],l=o+1|0;if(Se[a]=l,Ae[o]<<24>>24!=69){var s=0;break}var s=Se[i>>2]}else var s=0;while(0);var s;return Oe=e,s}function yr(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==90;do if(v){var t=O(r,0),f=Se[a],_=f+1|0;if(Se[a]=_,Ae[f]<<24>>24!=69){var s=0;break}if(Ae[_]<<24>>24==115){var n=f+2|0;Se[a]=n;var o=dr(r);if(0==(0|o)){var s=0;break}var l=lr(r,0|He.__str168,14),b=D(r,2,t,l),s=b}else{var k=Ar(r),u=dr(r);if(0==(0|u)){var s=0;break}var c=D(r,2,t,k),s=c}}else var s=0;while(0);var s;return s}function mr(r){var a,e=r+12|0,i=0;r:for(;;){var i,v=ge[Se[e>>2]];if(v<<24>>24==0){var t=0;break}var f=(v-48&255&255)<10|(v-97&255&255)<26;do{if(!f){if(v<<24>>24==76||v<<24>>24==68||v<<24>>24==67){a=5;break}if(v<<24>>24==83){var _=V(r,1),s=_;a=10;break}if(v<<24>>24==73){if(0==(0|i)){var t=0;break r}var n=z(r),o=4,l=n;a=11;break}if(v<<24>>24==84){var b=x(r),s=b;a=10;break}if(v<<24>>24==69){var t=i;break r}var t=0;break r}a=5}while(0);do if(5==a){var k=br(r),s=k;a=10;break}while(0);do if(10==a){var s;if(0==(0|i)){var u=s;a=12;break}var o=1,l=s;a=11;break}while(0);if(11==a)var l,o,c=D(r,o,i,l),u=c;var u;if(v<<24>>24!=83)if(Ae[Se[e>>2]]<<24>>24!=69){var h=R(r,u);if(0==(0|h)){var t=0;break}var i=u}else var i=u;else var i=u}var t;return t}function Sr(r,a){var e,i,v=Oe;Oe+=4;var t=v,i=t>>2,e=(r+12|0)>>2,f=Se[e];if(Ae[f]<<24>>24==74){var _=f+1|0;Se[e]=_;var s=1}else var s=a;var s;Se[i]=0;var n=s,o=0,l=t;r:for(;;)for(var l,o,n,b=n,k=o;;){var k,b,u=Ae[Se[e]];if(u<<24>>24==0||u<<24>>24==69){var c=Se[i];if(0==(0|c)){var h=0;break r}var d=0==(0|Se[c+8>>2]);do if(d){var w=Se[c+4>>2];if(33!=(0|Se[w>>2])){var p=c;break}var E=Se[w+4>>2];if(9!=(0|Se[E+16>>2])){var p=c;break}var A=r+48|0,g=Se[A>>2]-Se[E+4>>2]|0;Se[A>>2]=g,Se[i]=0;var p=0}else var p=c;while(0);var p,y=D(r,35,k,p),h=y;break r}var m=N(r);if(0==(0|m)){var h=0;break r}if(0==(0|b)){var S=D(r,38,m,0);if(Se[l>>2]=S,0==(0|S)){var h=0;break r}var n=0,o=k,l=S+8|0;continue r}var b=0,k=m}var h;return Oe=v,h}function Mr(r){for(var a=r;;){var a;if(0==(0|a)){var e=0;break}var i=Se[a>>2];if(1!=(0|i)&&2!=(0|i)){if(6==(0|i)||7==(0|i)||42==(0|i)){var e=1;break}var e=0;break}var a=Se[a+8>>2]}var e;return e}function Cr(r){var a=r>>2;Se[a+3]=0,Se[a+2]=0,Se[a+1]=0,Se[a]=0,Se[a+4]=0}function Rr(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=(Se[r+4>>2]-i|0)<(0|a);r:do if(v)var t=0;else{var f=i+a|0;Se[e]=f;var _=0==(4&Se[r+8>>2]|0);do if(!_){if(Ae[f]<<24>>24!=36)break;var s=a+(i+1)|0;Se[e]=s}while(0);var n=(0|a)>9;do if(n){var o=La(i,0|He.__str117,8);if(0!=(0|o))break;var l=Ae[i+8|0];if(l<<24>>24!=46&&l<<24>>24!=95&&l<<24>>24!=36)break;if(Ae[i+9|0]<<24>>24!=78)break;var b=r+48|0,k=22-a+Se[b>>2]|0;Se[b>>2]=k;var u=lr(r,0|He.__str169,21),t=u;break r}while(0);var c=lr(r,i,a),t=c}while(0);var t;return t}function Tr(r){var a,e,e=(r+48|0)>>2,i=Se[e],v=i+20|0;Se[e]=v;var a=(r+12|0)>>2,t=Se[a],f=t+1|0;Se[a]=f;var _=Ae[t];do if(_<<24>>24==84){var s=t+2|0;Se[a]=s;var n=Ae[f]<<24>>24;if(86==(0|n)){var o=i+15|0;Se[e]=o;var l=N(r),b=D(r,8,l,0),k=b}else if(84==(0|n)){var u=i+10|0;Se[e]=u;var c=N(r),h=D(r,9,c,0),k=h}else if(73==(0|n))var d=N(r),w=D(r,11,d,0),k=w;else if(83==(0|n))var p=N(r),E=D(r,12,p,0),k=E;else if(104==(0|n)){var A=Nr(r,104);if(0==(0|A)){var k=0;break}var g=O(r,0),y=D(r,14,g,0),k=y}else if(118==(0|n)){var m=Nr(r,118);if(0==(0|m)){var k=0;break}var S=O(r,0),M=D(r,15,S,0),k=M}else if(99==(0|n)){var C=Nr(r,0);if(0==(0|C)){var k=0;break}var R=Nr(r,0);if(0==(0|R)){var k=0;break}var T=O(r,0),I=D(r,16,T,0),k=I}else if(67==(0|n)){var P=N(r),L=sr(r);if((0|L)<0){var k=0;break}var F=Se[a],X=F+1|0;if(Se[a]=X,Ae[F]<<24>>24!=95){var k=0;break}var j=N(r),U=Se[e]+5|0;Se[e]=U;var x=D(r,10,j,P),k=x}else if(70==(0|n))var z=N(r),V=D(r,13,z,0),k=V;else{if(74!=(0|n)){var k=0;break}var B=N(r),H=D(r,17,B,0),k=H}}else if(_<<24>>24==71){var K=t+2|0;Se[a]=K;var Y=Ae[f]<<24>>24;if(86==(0|Y))var G=Ar(r),W=D(r,18,G,0),k=W;else if(82==(0|Y))var Z=Ar(r),Q=D(r,19,Z,0),k=Q;else{if(65!=(0|Y)){var k=0;break}var q=O(r,0),$=D(r,20,q,0),k=$}}else var k=0;while(0);var k;return k}function Or(r){for(var a,e=r,a=e>>2;;){var e;if(0==(0|e)){var i=0;break}var v=Se[a];if(4==(0|v)){var t=Se[a+1],f=Mr(t),i=0==(0|f)&1;break}if(25!=(0|v)&&26!=(0|v)&&27!=(0|v)){var i=0;break}var e=Se[a+1],a=e>>2}var i;return i}function Nr(r,a){var e;if(0==(0|a)){var i=r+12|0,v=Se[i>>2],t=v+1|0;Se[i>>2]=t;var f=Ae[v]<<24>>24}else var f=a;var f;do{if(104==(0|f)){var _=(sr(r),r+12|0);e=7;break}if(118==(0|f)){var s=(sr(r),r+12|0),n=Se[s>>2],o=n+1|0;if(Se[s>>2]=o,Ae[n]<<24>>24!=95){var l=0;e=8;break}var _=(sr(r),s);e=7;break}var l=0;e=8}while(0);if(7==e){var _,b=Se[_>>2],k=b+1|0;Se[_>>2]=k;var l=Ae[b]<<24>>24==95&1}var l;return l}function Ir(r){var a,e,i=r>>2,v=Oe;Oe+=56;var t,f=v,_=v+8,s=v+16,n=v+36,e=(0|r)>>2,o=Se[e],l=0==(8192&o|0);r:do{if(l){var a=(r+12|0)>>2,b=Se[a];if(Ae[b]<<24>>24!=63){var k=0;t=111;break}var u=b+1|0;Se[a]=u;var c=Ae[u];do if(c<<24>>24==63){if(Ae[b+2|0]<<24>>24==36){var h=b+3|0;if(Ae[h]<<24>>24!=63){var d=5;t=90;break}Se[a]=h;var w=6,p=h}else var w=0,p=u;var p,w,E=p+1|0;Se[a]=E;var A=Ae[E]<<24>>24;do if(48==(0|A)){var g=1;t=81}else{if(49==(0|A)){var g=2;t=81;break}if(50!=(0|A)){if(51==(0|A)){var y=0|He.__str2172,m=E;t=82;break}if(52==(0|A)){var y=0|He.__str3173,m=E;t=82;break}if(53==(0|A)){var y=0|He.__str4174,m=E;t=82;break}if(54==(0|A)){var y=0|He.__str5175,m=E;t=82;break}if(55==(0|A)){var y=0|He.__str6176,m=E;t=82;break}if(56==(0|A)){var y=0|He.__str7177,m=E;t=82;break}if(57==(0|A)){var y=0|He.__str8178,m=E;t=82;break}if(65==(0|A)){var y=0|He.__str9179,m=E;t=82;break}if(66==(0|A)){Se[a]=p+2|0;var S=0|He.__str10180,M=3;t=88;break}if(67==(0|A)){var y=0|He.__str11181,m=E;t=82;break}if(68==(0|A)){var y=0|He.__str12182,m=E;t=82;break}if(69==(0|A)){var y=0|He.__str13183,m=E;t=82;break}if(70==(0|A)){var y=0|He.__str14184,m=E;t=82;break}if(71==(0|A)){var y=0|He.__str15185,m=E;t=82;break}if(72==(0|A)){var y=0|He.__str16186,m=E;t=82;break}if(73==(0|A)){var y=0|He.__str17187,m=E;t=82;break}if(74==(0|A)){var y=0|He.__str18188,m=E;t=82;break}if(75==(0|A)){var y=0|He.__str19189,m=E;t=82;break}if(76==(0|A)){var y=0|He.__str20190,m=E;t=82;break}if(77==(0|A)){var y=0|He.__str21191,m=E;t=82;break}if(78==(0|A)){var y=0|He.__str22192,m=E;t=82;break}if(79==(0|A)){var y=0|He.__str23193,m=E;t=82;break}if(80==(0|A)){var y=0|He.__str24194,m=E;t=82;break}if(81==(0|A)){var y=0|He.__str25195,m=E;t=82;break}if(82==(0|A)){var y=0|He.__str26196,m=E;t=82;break}if(83==(0|A)){var y=0|He.__str27197,m=E;t=82;break}if(84==(0|A)){var y=0|He.__str28198,m=E;t=82;break}if(85==(0|A)){var y=0|He.__str29199,m=E;t=82;break}if(86==(0|A)){var y=0|He.__str30200,m=E;t=82;break}if(87==(0|A)){var y=0|He.__str31201,m=E;t=82;break}if(88==(0|A)){var y=0|He.__str32202,m=E;t=82;break}if(89==(0|A)){var y=0|He.__str33203,m=E;t=82;break}if(90==(0|A)){var y=0|He.__str34204,m=E;t=82;break}if(95==(0|A)){var C=p+2|0;Se[a]=C;var R=Ae[C]<<24>>24;if(48==(0|R)){var y=0|He.__str35205,m=C;t=82;break}if(49==(0|R)){var y=0|He.__str36206,m=C;t=82;break}if(50==(0|R)){var y=0|He.__str37207,m=C;t=82;break}if(51==(0|R)){var y=0|He.__str38208,m=C;t=82;break}if(52==(0|R)){var y=0|He.__str39209,m=C;t=82;break}if(53==(0|R)){var y=0|He.__str40210,m=C;t=82;break}if(54==(0|R)){var y=0|He.__str41211,m=C;t=82;break}if(55==(0|R)){var y=0|He.__str42212,m=C;t=82;break}if(56==(0|R)){var y=0|He.__str43213,m=C;t=82;break}if(57==(0|R)){var y=0|He.__str44214,m=C;t=82;break}if(65==(0|R)){var y=0|He.__str45215,m=C;t=82;break}if(66==(0|R)){var y=0|He.__str46216,m=C;t=82;break}if(67==(0|R)){Se[a]=p+3|0;var T=0|He.__str47217;t=84;break}if(68==(0|R)){var y=0|He.__str48218,m=C;t=82;break}if(69==(0|R)){var y=0|He.__str49219,m=C;t=82;break}if(70==(0|R)){var y=0|He.__str50220,m=C;t=82;break}if(71==(0|R)){var y=0|He.__str51221,m=C;t=82;break}if(72==(0|R)){var y=0|He.__str52222,m=C;t=82;break}if(73==(0|R)){var y=0|He.__str53223,m=C;t=82;break}if(74==(0|R)){var y=0|He.__str54224,m=C;t=82;break}if(75==(0|R)){var y=0|He.__str55225,m=C;t=82;break}if(76==(0|R)){var y=0|He.__str56226,m=C;t=82;break}if(77==(0|R)){var y=0|He.__str57227,m=C;t=82;break}if(78==(0|R)){var y=0|He.__str58228,m=C;t=82;break}if(79==(0|R)){var y=0|He.__str59229,m=C;t=82;break}if(82==(0|R)){var O=4|o;Se[e]=O;var N=p+3|0;Se[a]=N;var I=Ae[N]<<24>>24;if(48==(0|I)){Se[a]=p+4|0,Cr(s);var P=(Pr(r,_,s,0),Se[_>>2]),D=Se[_+4>>2],L=Dr(r,0|He.__str60230,(ne=Oe,Oe+=8,Se[ne>>2]=P,Se[ne+4>>2]=D,ne)),F=Se[a]-1|0;Se[a]=F;var y=L,m=F;t=82;break}if(49==(0|I)){Se[a]=p+4|0;var X=Lr(r),j=Lr(r),U=Lr(r),x=Lr(r),z=Se[a]-1|0;Se[a]=z;var V=Dr(r,0|He.__str61231,(ne=Oe,Oe+=16,Se[ne>>2]=X,Se[ne+4>>2]=j,Se[ne+8>>2]=U,Se[ne+12>>2]=x,ne)),y=V,m=Se[a];t=82;break}if(50==(0|I)){var y=0|He.__str62232,m=N;t=82;break}if(51==(0|I)){var y=0|He.__str63233,m=N;t=82;break}if(52==(0|I)){var y=0|He.__str64234,m=N;t=82;break}var y=0,m=N;t=82;break}if(83==(0|R)){var y=0|He.__str65235,m=C;t=82;break}if(84==(0|R)){var y=0|He.__str66236,m=C;t=82;break}if(85==(0|R)){var y=0|He.__str67237,m=C;t=82;break}if(86==(0|R)){var y=0|He.__str68238,m=C;t=82;break}if(88==(0|R)){var y=0|He.__str69239,m=C;t=82;break}if(89==(0|R)){var y=0|He.__str70240,m=C;t=82;break}var k=0;t=111;break r}var k=0;t=111;break r}var y=0|He.__str1171,m=E;t=82}while(0);do{if(81==t){var g;Se[a]=p+2|0;var B=g;t=83;break}if(82==t){var m,y;if(Se[a]=m+1|0,1==(0|w)||2==(0|w)){var B=w;t=83;break}if(4==(0|w)){var T=y;t=84;break}if(6!=(0|w)){var S=y,M=w;t=88;break}Cr(n);var H=Xr(r,n,0,60,62);if(0==(0|H))var K=y;else var Y=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=y,Se[ne+4>>2]=H,ne)),K=Y;var K;Se[i+6]=0;var S=K,M=w;t=88;break}}while(0);if(83==t){var B,G=r+40|0,W=Fr(r,0|He._symbol_demangle_dashed_null,-1,G);if(0==(0|W)){var k=0;t=111;break r}var d=B;t=90;break}if(84==t){var T;Se[i+4]=T;var Z=1,Q=T;t=109;break r}if(88==t){var M,S,q=r+40|0,$=Fr(r,S,-1,q);if(0==(0|$)){var k=0;t=111;break r}var d=M;t=90;break}}else{if(c<<24>>24==36){var J=b+2|0;Se[a]=J;var rr=jr(r);Se[i+4]=rr;var ar=0!=(0|rr)&1;t=107;break}var d=0;t=90}while(0);if(90==t){var d,er=Me[a],ir=Ae[er]<<24>>24;if(64==(0|ir))Se[a]=er+1|0;else if(36==(0|ir))t=93;else{var vr=zr(r);if(0==(0|vr)){var k=-1;t=111;break}}if(5==(0|d)){var tr=r+20|0,fr=Se[tr>>2]+1|0;Se[tr>>2]=fr}else if(1==(0|d)||2==(0|d)){if(Me[i+11]>>>0<2){var k=-1;t=111;break}var _r=r+56|0,sr=Me[_r>>2],nr=Se[sr+4>>2];if(1==(0|d))Se[sr>>2]=nr;else{var or=Dr(r,0|He.__str71241,(ne=Oe,Oe+=4,Se[ne>>2]=nr,ne)),lr=Se[_r>>2];Se[lr>>2]=or}var br=4|Se[e];Se[e]=br}else if(3==(0|d)){var kr=Se[e]&-5;Se[e]=kr}var ur=ge[Se[a]];if((ur-48&255&255)<10)var cr=Vr(r),ar=cr;else if((ur-65&255&255)<26)var hr=Br(r,3==(0|d)&1),ar=hr;else{if(ur<<24>>24!=36){var k=-1;t=111;break}var dr=Hr(r),ar=dr}}var ar;if(0==(0|ar)){var k=-1;t=111;break}var Z=ar,Q=Se[i+4];t=109;break}var wr=Pr(r,f,0,0);if(0==(0|wr)){var k=-1;t=111;break}var pr=Se[f>>2],Er=Se[f+4>>2],Ar=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=pr,Se[ne+4>>2]=Er,ne));Se[i+4]=Ar;var Z=1,Q=Ar;t=109;break}while(0);do if(109==t){var Q,Z;if(0!=(0|Q)){var k=Z;break}Xa(0|He.__str72242,1499,0|He.___func___symbol_demangle,0|He.__str73243);var k=Z}while(0);var k;return Oe=v,k}function Pr(r,a,e,i){var v,t,f,_=Oe;Oe+=24;var s=_,n=_+4,o=_+8,l=_+16,b=_+20;0==(0|a)&&Xa(0|He.__str72242,829,0|He.___func___demangle_datatype,0|He.__str121291);var f=(a+4|0)>>2;Se[f]=0;var t=(0|a)>>2;Se[t]=0;var v=(r+12|0)>>2,k=Me[v],u=k+1|0;Se[v]=u;var c=Ae[k],h=c<<24>>24;do if(95==(0|h)){Se[v]=k+2|0;var d=Ae[u],w=Zr(d);Se[t]=w}else if(67==(0|h)||68==(0|h)||69==(0|h)||70==(0|h)||71==(0|h)||72==(0|h)||73==(0|h)||74==(0|h)||75==(0|h)||77==(0|h)||78==(0|h)||79==(0|h)||88==(0|h)||90==(0|h)){var p=Qr(c);Se[t]=p}else if(84==(0|h)||85==(0|h)||86==(0|h)||89==(0|h)){var E=qr(r);if(0==(0|E))break;var A=0==(32768&Se[r>>2]|0);do if(A)if(84==(0|h))var g=0|He.__str122292;else if(85==(0|h))var g=0|He.__str123293;else if(86==(0|h))var g=0|He.__str124294;else{if(89!=(0|h)){var g=0;break}var g=0|He.__str125295}else var g=0;while(0);var g,y=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=g,Se[ne+4>>2]=E,ne));Se[t]=y}else if(63==(0|h))if(0==(0|i))$r(a,r,e,63,0);else{var m=Lr(r);if(0==(0|m))break;var S=Dr(r,0|He.__str126296,(ne=Oe,Oe+=4,Se[ne>>2]=m,ne));Se[t]=S}else if(65==(0|h)||66==(0|h))$r(a,r,e,c,i);else if(81==(0|h)||82==(0|h)||83==(0|h)){var M=0==(0|i)?80:c;$r(a,r,e,M,i)}else if(80==(0|h))if(((Ae[u]<<24>>24)-48|0)>>>0<10){var C=k+2|0;if(Se[v]=C,Ae[u]<<24>>24!=54)break;var R=r+44|0,T=Se[R>>2];Se[v]=k+3|0;var O=Ae[C],N=Se[r>>2]&-17,I=Ur(O,s,n,N);if(0==(0|I))break;var P=Pr(r,o,e,0);if(0==(0|P))break;var D=Xr(r,e,1,40,41);if(0==(0|D))break;Se[R>>2]=T;var L=Se[o>>2],F=Se[o+4>>2],X=Se[s>>2],j=Dr(r,0|He.__str127297,(ne=Oe,Oe+=12,Se[ne>>2]=L,Se[ne+4>>2]=F,Se[ne+8>>2]=X,ne));Se[t]=j;var U=Dr(r,0|He.__str128298,(ne=Oe,Oe+=4,Se[ne>>2]=D,ne));Se[f]=U}else $r(a,r,e,80,i);else if(87==(0|h)){if(Ae[u]<<24>>24!=52)break;Se[v]=k+2|0;var x=qr(r);if(0==(0|x))break;if(0==(32768&Se[r>>2]|0)){var z=Dr(r,0|He.__str129299,(ne=Oe,Oe+=4,Se[ne>>2]=x,ne));Se[t]=z}else Se[t]=x}else if(48==(0|h)||49==(0|h)||50==(0|h)||51==(0|h)||52==(0|h)||53==(0|h)||54==(0|h)||55==(0|h)||56==(0|h)||57==(0|h)){var V=h<<1,B=V-96|0,H=Yr(e,B);Se[t]=H;var K=V-95|0,Y=Yr(e,K);Se[f]=Y}else if(36==(0|h)){var G=k+2|0;Se[v]=G;var W=Ae[u]<<24>>24;if(48==(0|W)){var Z=Lr(r);Se[t]=Z}else if(68==(0|W)){var Q=Lr(r);if(0==(0|Q))break;var q=Dr(r,0|He.__str130300,(ne=Oe,Oe+=4,Se[ne>>2]=Q,ne));Se[t]=q}else if(70==(0|W)){var $=Lr(r);if(0==(0|$))break;var J=Lr(r);if(0==(0|J))break;var rr=Dr(r,0|He.__str131301,(ne=Oe,Oe+=8,Se[ne>>2]=$,Se[ne+4>>2]=J,ne));Se[t]=rr}else if(71==(0|W)){var ar=Lr(r);if(0==(0|ar))break;var er=Lr(r);if(0==(0|er))break;var ir=Lr(r);if(0==(0|ir))break;var vr=Dr(r,0|He.__str132302,(ne=Oe,Oe+=12,Se[ne>>2]=ar,Se[ne+4>>2]=er,Se[ne+8>>2]=ir,ne));Se[t]=vr}else if(81==(0|W)){var tr=Lr(r);if(0==(0|tr))break;var fr=Dr(r,0|He.__str133303,(ne=Oe,Oe+=4,Se[ne>>2]=tr,ne));Se[t]=fr}else{if(36!=(0|W))break;if(Ae[G]<<24>>24!=67)break;Se[v]=k+3|0;var _r=xr(r,l,b);if(0==(0|_r))break;var sr=Pr(r,a,e,i);if(0==(0|sr))break;var nr=Se[t],or=Se[l>>2],lr=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=nr,Se[ne+4>>2]=or,ne));Se[t]=lr}}while(0);var br=0!=(0|Se[t])&1;return Oe=_,br}function Dr(r,a){var e,i=Oe;Oe+=4;var v=i,e=v>>2,t=v;Se[t>>2]=arguments[Dr.length];var f=1,_=0;r:for(;;){var _,f,s=Ae[a+_|0];do{if(s<<24>>24==0)break r;if(s<<24>>24==37){var n=_+1|0,o=Ae[a+n|0]<<24>>24;if(115==(0|o)){var l=Se[e],b=l,k=l+4|0;Se[e]=k;var u=Se[b>>2];if(0==(0|u)){var c=f,h=n;break}var d=Ca(u),c=d+f|0,h=n;break}if(99==(0|o)){var w=Se[e]+4|0;Se[e]=w;var c=f+1|0,h=n;break}if(37==(0|o))var p=n;else var p=_;var p,c=f+1|0,h=p}else var c=f+1|0,h=_}while(0);var h,c,f=c,_=h+1|0}var E=Wr(r,f);if(0==(0|E))var A=0;else{Se[t>>2]=arguments[Dr.length];var g=E,y=0;r:for(;;){var y,g,m=Ae[a+y|0];do{if(m<<24>>24==0)break r;if(m<<24>>24==37){var S=y+1|0,M=Ae[a+S|0]<<24>>24;if(115==(0|M)){var C=Se[e],R=C,T=C+4|0;Se[e]=T;var O=Se[R>>2];if(0==(0|O)){var N=g,I=S;break}var P=Ca(O);Pa(g,O,P,1);var N=g+P|0,I=S;break}if(99==(0|M)){var D=Se[e],L=D,F=D+4|0;Se[e]=F,Ae[g]=255&Se[L>>2];var N=g+1|0,I=S;break}if(37==(0|M))var X=S;else var X=y;var X;Ae[g]=37;var N=g+1|0,I=X}else{Ae[g]=m;var N=g+1|0,I=y}}while(0);var I,N,g=N,y=I+1|0}Ae[g]=0;var A=E}var A;return Oe=i,A}function Lr(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e];if(i<<24>>24==63){var v=e+1|0;Se[a]=v;var t=1,f=v,_=Ae[v]}else var t=0,f=e,_=i;var _,f,t,s=(_-48&255&255)<9;do if(s){var n=Wr(r,3),o=0!=(0|t);o&&(Ae[n]=45);var l=Ae[Se[a]]+1&255;Ae[n+t|0]=l;var b=o?2:1;\nAe[n+b|0]=0;var k=Se[a]+1|0;Se[a]=k;var u=n}else if(_<<24>>24==57){var c=Wr(r,4),h=0!=(0|t);h&&(Ae[c]=45),Ae[c+t|0]=49;var d=h?2:1;Ae[c+d|0]=48;var w=h?3:2;Ae[c+w|0]=0;var p=Se[a]+1|0;Se[a]=p;var u=c}else{if((_-65&255&255)>=16){var u=0;break}for(var E=0,A=f;;){var A,E,g=A+1|0;Se[a]=g;var y=(Ae[A]<<24>>24)+((E<<4)-65)|0,m=ge[g];if((m-65&255&255)>=16)break;var E=y,A=g}if(m<<24>>24!=64){var u=0;break}var S=Wr(r,17),M=0!=(0|t)?0|He.__str119289:0|ii,C=(za(S,0|He.__str118288,(ne=Oe,Oe+=8,Se[ne>>2]=M,Se[ne+4>>2]=y,ne)),Se[a]+1|0);Se[a]=C;var u=S}while(0);var u;return u}function Fr(r,a,e,i){var v,t,f,_;0==(0|a)&&Xa(0|He.__str72242,212,0|He.___func___str_array_push,0|He.__str115285),0==(0|i)&&Xa(0|He.__str72242,213,0|He.___func___str_array_push,0|He.__str116286);var f=(i+12|0)>>2,s=Me[f],n=0==(0|s);do{if(n){Se[f]=32;var o=Wr(r,128);if(0==(0|o)){var l=0;_=17;break}Se[i+16>>2]=o,_=11;break}if(Me[i+8>>2]>>>0<s>>>0){_=11;break}var b=s<<3,k=Wr(r,b);if(0==(0|k)){var l=0;_=17;break}var u=k,c=i+16|0,h=Se[c>>2],d=Se[f]<<2;Pa(k,h,d,1);var w=Se[f]<<1;Se[f]=w,Se[c>>2]=u,_=11;break}while(0);do if(11==_){if((0|e)==-1)var p=Ca(a),E=p;else var E=e;var E,A=ja(a),g=E+1|0,y=Wr(r,g),t=(i+4|0)>>2,v=(i+16|0)>>2,m=(Se[t]<<2)+Se[v]|0;Se[m>>2]=y;var S=Se[Se[v]+(Se[t]<<2)>>2];if(0==(0|S)){Xa(0|He.__str72242,233,0|He.___func___str_array_push,0|He.__str117287);var M=Se[Se[v]+(Se[t]<<2)>>2]}else var M=S;var M;Pa(M,A,E,1),va(A),Ae[Se[Se[v]+(Se[t]<<2)>>2]+g|0]=0;var C=Se[t]+1|0;Se[t]=C;var R=i+8|0;if(C>>>0<Me[R>>2]>>>0){var l=1;break}Se[R>>2]=C;var l=1}while(0);var l;return l}function Xr(r,a,e,i,v){var t,f,_=Oe;Oe+=28;var s,n=_,o=_+8;Cr(o);var f=(r+12|0)>>2,l=0==(0|e),t=(0|n)>>2,b=n+4|0;r:do if(l)for(;;){var k=Se[f],u=Ae[k];if(u<<24>>24==0){s=12;break r}if(u<<24>>24==64){var c=k;s=7;break r}var h=Pr(r,n,a,1);if(0==(0|h)){var d=0;s=25;break r}var w=Se[t],p=Se[b>>2],E=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=w,Se[ne+4>>2]=p,ne)),A=Fr(r,E,-1,o);if(0==(0|A)){var d=0;s=25;break r}var g=Se[t],y=Da(g,0|He.__str110280);if(0==(0|y)){s=12;break r}}else for(;;){var m=Se[f],S=Ae[m];if(S<<24>>24==0){s=12;break r}if(S<<24>>24==64){var c=m;s=7;break r}var M=Pr(r,n,a,1);if(0==(0|M)){var d=0;s=25;break r}var C=Se[t],R=Da(C,0|He.__str84254);if(0==(0|R)){s=13;break r}var T=Se[b>>2],O=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=C,Se[ne+4>>2]=T,ne)),N=Fr(r,O,-1,o);if(0==(0|N)){var d=0;s=25;break r}var I=Se[t],P=Da(I,0|He.__str110280);if(0==(0|P)){s=12;break r}}while(0);do if(7==s){var c;Se[f]=c+1|0,s=12;break}while(0);do if(12==s){if(l){s=14;break}s=13;break}while(0);do if(13==s){var D=Se[f],L=D+1|0;if(Se[f]=L,Ae[D]<<24>>24==90){s=14;break}var d=0;s=25;break}while(0);r:do if(14==s){var F=o+4|0,X=Me[F>>2];do{if(0!=(0|X)){if(1==(0|X)){var j=o+16|0,U=Se[Se[j>>2]>>2],x=Da(U,0|He.__str84254);if(0==(0|x)){s=17;break}var z=j;s=20;break}var V=o+16|0;if(X>>>0<=1){var z=V;s=20;break}for(var B=0,H=1;;){var H,B,K=Se[Se[V>>2]+(H<<2)>>2],Y=Dr(r,0|He.__str112282,(ne=Oe,Oe+=8,Se[ne>>2]=B,Se[ne+4>>2]=K,ne)),G=H+1|0;if(G>>>0>=Me[F>>2]>>>0)break;var B=Y,H=G}if(0==(0|Y)){var z=V;s=20;break}var W=Y,Z=Y;s=21;break}s=17}while(0);if(17==s){var Q=i<<24>>24,q=v<<24>>24,$=Dr(r,0|He.__str111281,(ne=Oe,Oe+=8,Se[ne>>2]=Q,Se[ne+4>>2]=q,ne)),d=$;break}if(20==s)var z,W=Se[Se[z>>2]>>2],Z=0;var Z,W,J=v<<24>>24,rr=v<<24>>24==62;do if(rr){var ar=Ca(W);if(Ae[W+(ar-1)|0]<<24>>24!=62)break;var er=i<<24>>24,ir=Se[Se[o+16>>2]>>2],vr=Dr(r,0|He.__str113283,(ne=Oe,Oe+=16,Se[ne>>2]=er,Se[ne+4>>2]=ir,Se[ne+8>>2]=Z,Se[ne+12>>2]=J,ne)),d=vr;break r}while(0);var tr=i<<24>>24,fr=Se[Se[o+16>>2]>>2],_r=Dr(r,0|He.__str114284,(ne=Oe,Oe+=16,Se[ne>>2]=tr,Se[ne+4>>2]=fr,Se[ne+8>>2]=Z,Se[ne+12>>2]=J,ne)),d=_r}while(0);var d;return Oe=_,d}function jr(r){var a,e=Oe;Oe+=20;var i=e,v=r+24|0,t=Se[v>>2],a=(r+20|0)>>2,f=Se[a],_=r+44|0,s=Se[_>>2];Se[a]=t;var n=Kr(r);if(0==(0|n))var o=0;else{Cr(i);var l=Xr(r,i,0,60,62);if(0==(0|l))var b=n;else var k=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=n,Se[ne+4>>2]=l,ne)),b=k;var b;Se[v>>2]=t,Se[a]=f,Se[_>>2]=s;var o=b}var o;return Oe=e,o}function Ur(r,a,e,i){var v,t=a>>2;Se[e>>2]=0,Se[t]=0;var f=0==(18&i|0);do{if(f){var _=r<<24>>24,s=1==((_-65)%2|0);if(0==(1&i|0)){if(s?Se[e>>2]=0|He.__str95265:v=14,65==(0|_)||66==(0|_)){Se[t]=0|He.__str96266,v=21;break}if(67==(0|_)||68==(0|_)){Se[t]=0|He.__str97267,v=21;break}if(69==(0|_)||70==(0|_)){Se[t]=0|He.__str98268,v=21;break}if(71==(0|_)||72==(0|_)){Se[t]=0|He.__str99269,v=21;break}if(73==(0|_)||74==(0|_)){Se[t]=0|He.__str100270,v=21;break}if(75==(0|_)||76==(0|_)){v=21;break}if(77==(0|_)){Se[t]=0|He.__str101271,v=21;break}var n=0;v=22;break}if(s?Se[e>>2]=0|He.__str88258:v=5,65==(0|_)||66==(0|_)){Se[t]=0|He.__str89259,v=21;break}if(67==(0|_)||68==(0|_)){Se[t]=0|He.__str90260,v=21;break}if(69==(0|_)||70==(0|_)){Se[t]=0|He.__str91261,v=21;break}if(71==(0|_)||72==(0|_)){Se[t]=0|He.__str92262,v=21;break}if(73==(0|_)||74==(0|_)){Se[t]=0|He.__str93263,v=21;break}if(75==(0|_)||76==(0|_)){v=21;break}if(77==(0|_)){Se[t]=0|He.__str94264,v=21;break}var n=0;v=22;break}v=21}while(0);if(21==v)var n=1;var n;return n}function xr(r,a,e){var i;Se[e>>2]=0;var i=(r+12|0)>>2,v=Se[i];if(Ae[v]<<24>>24==69){Se[e>>2]=0|He.__str102272;var t=Se[i]+1|0;Se[i]=t;var f=t}else var f=v;var f;Se[i]=f+1|0;var _=Ae[f]<<24>>24;if(65==(0|_)){Se[a>>2]=0;var s=1}else if(66==(0|_)){Se[a>>2]=0|He.__str103273;var s=1}else if(67==(0|_)){Se[a>>2]=0|He.__str104274;var s=1}else if(68==(0|_)){Se[a>>2]=0|He.__str105275;var s=1}else var s=0;var s;return s}function zr(r){var a,e,a=(r+12|0)>>2,i=r+40|0,v=r+20|0,t=0|i,f=r+44|0,_=r+48|0,s=r+52|0,n=r+56|0,o=r+20|0,l=r+24|0,b=r+16|0,k=0;r:for(;;){var k,u=Se[a],c=Ae[u];if(c<<24>>24==64){var h=u+1|0;Se[a]=h;var d=1;break}var w=c<<24>>24;do{if(0==(0|w)){var d=0;break r}if(48==(0|w)||49==(0|w)||50==(0|w)||51==(0|w)||52==(0|w)||53==(0|w)||54==(0|w)||55==(0|w)||56==(0|w)||57==(0|w)){var p=u+1|0;Se[a]=p;var E=(Ae[u]<<24>>24)-48|0,A=Yr(v,E),g=A;e=14;break}if(63==(0|w)){var y=u+1|0;Se[a]=y;var m=Ae[y]<<24>>24;if(36==(0|m)){var S=u+2|0;Se[a]=S;var M=jr(r);if(0==(0|M)){var d=0;break r}var C=Fr(r,M,-1,v);if(0==(0|C)){var d=0;break r}var R=M;e=15;break}if(63==(0|m)){var T=Se[t>>2],O=Se[f>>2],N=Se[_>>2],I=Se[s>>2],P=Se[n>>2],D=Se[o>>2],L=Se[l>>2];Cr(i);var F=Ir(r);if(0==(0|F))var X=k;else var j=Se[b>>2],U=Dr(r,0|He.__str109279,(ne=Oe,Oe+=4,Se[ne>>2]=j,ne)),X=U;var X;Se[o>>2]=D,Se[l>>2]=L,Se[t>>2]=T,Se[f>>2]=O,Se[_>>2]=N,Se[s>>2]=I,Se[n>>2]=P;var g=X;e=14;break}var x=Lr(r);if(0==(0|x)){var d=0;break r}var z=Dr(r,0|He.__str109279,(ne=Oe,Oe+=4,Se[ne>>2]=x,ne)),g=z;e=14;break}var V=Kr(r),g=V;e=14;break}while(0);if(14==e){var g;if(0==(0|g)){var d=0;break}var R=g}var R,B=Fr(r,R,-1,i);if(0==(0|B)){var d=0;break}var k=R}var d;return d}function Vr(r){var a,e,i,v=Oe;Oe+=36;var t,f=v,i=f>>2,_=v+4,s=v+8,e=s>>2,n=v+16;Se[i]=0;var o=0|r,l=Se[o>>2],b=0==(128&l|0),k=r+12|0;do if(b){var u=Ae[Se[k>>2]]<<24>>24;if(48==(0|u))var c=0|He.__str76246,h=k,a=h>>2;else if(49==(0|u))var c=0|He.__str77247,h=k,a=h>>2;else{if(50!=(0|u)){var c=0,h=k,a=h>>2;break}var c=0|He.__str78248,h=k,a=h>>2}}else var c=0,h=k,a=h>>2;while(0);var h,c,d=0==(512&l|0);do if(d){if((Ae[Se[a]]-48&255&255)>=3){var w=0;break}var w=0|He.__str79249}else var w=0;while(0);var w,p=Gr(r,0),E=Se[a],A=E+1|0;Se[a]=A;var g=Ae[E]<<24>>24;do{if(48==(0|g)||49==(0|g)||50==(0|g)||51==(0|g)||52==(0|g)||53==(0|g)){var y=r+44|0,m=Se[y>>2];Cr(n);var S=Pr(r,s,n,0);if(0==(0|S)){var M=0;t=28;break}var C=xr(r,f,_);if(0==(0|C)){var M=0;t=28;break}var R=Se[i],T=0==(0|R),O=Se[_>>2];do if(T)Se[i]=O;else{if(0==(0|O))break;var N=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=R,Se[ne+4>>2]=O,ne));Se[i]=N}while(0);Se[y>>2]=m,t=22;break}if(54==(0|g)||55==(0|g)){var I=s+4|0;Se[I>>2]=0,Se[e]=0;var P=xr(r,f,_);if(0==(0|P)){var M=0;t=28;break}if(Ae[Se[a]]<<24>>24==64){t=22;break}var D=qr(r);if(0==(0|D)){var M=0;t=28;break}var L=Dr(r,0|He.__str107277,(ne=Oe,Oe+=4,Se[ne>>2]=D,ne));Se[I>>2]=L,t=22;break}if(56==(0|g)||57==(0|g)){Se[e+1]=0,Se[e]=0,Se[i]=0,t=22;break}var M=0;t=28}while(0);if(22==t){var F=0==(4096&Se[o>>2]|0);do{if(F){var X=Se[e],j=Se[i];if(0==(0|j)){var U=X;t=26;break}var x=0!=(0|X)?0|He.__str87257:0,z=0|He.__str87257,V=j,B=x,H=X;t=27;break}Se[i]=0,Se[e+1]=0,Se[e]=0;var U=0;t=26;break}while(0);if(26==t)var U,K=0!=(0|U)?0|He.__str87257:0,z=K,V=0,B=0,H=U;var H,B,V,z,Y=Se[e+1],G=Dr(r,0|He.__str108278,(ne=Oe,Oe+=32,Se[ne>>2]=c,Se[ne+4>>2]=w,Se[ne+8>>2]=H,Se[ne+12>>2]=B,Se[ne+16>>2]=V,Se[ne+20>>2]=z,Se[ne+24>>2]=p,Se[ne+28>>2]=Y,ne));Se[r+16>>2]=G;var M=1}var M;return Oe=v,M}function Br(r,a){var e,i,v,t,f=Oe;Oe+=44;var _,s=f,t=s>>2,n=f+8,o=f+12,v=o>>2,l=f+16,b=f+20,k=f+40;Se[v]=0;var i=(r+12|0)>>2,u=Se[i],c=u+1|0;Se[i]=c;var h=ge[u],d=h<<24>>24,w=(h-65&255&255)>25;r:do if(w)var p=0;else{var e=(0|r)>>2,E=Me[e],A=0==(128&E|0),g=d-65|0;do if(A){var y=g/8|0;if(0==(0|y))var m=0|He.__str76246,S=g;else if(1==(0|y))var m=0|He.__str77247,S=g;else{if(2!=(0|y)){var m=0,S=g;break}var m=0|He.__str78248,S=g}}else var m=0,S=g;while(0);var S,m,M=0==(512&E|0)&h<<24>>24<89,C=(0|S)%8;do if(M)if(2==(0|C)||3==(0|C))var R=m,T=0|He.__str79249;else if(4==(0|C)||5==(0|C))var R=m,T=0|He.__str80250;else{if(6!=(0|C)&&7!=(0|C)){var R=m,T=0;break}var O=Dr(r,0|He.__str81251,(ne=Oe,Oe+=4,Se[ne>>2]=m,ne)),R=O,T=0|He.__str80250}else var R=m,T=0;while(0);var T,R,N=Gr(r,0),I=6==(0|C);do{if(!I){if(7==((d-56)%8|0)){_=14;break}var P=N;_=15;break}_=14}while(0);if(14==_)var D=Lr(r),L=Dr(r,0|He.__str82252,(ne=Oe,Oe+=8,Se[ne>>2]=N,Se[ne+4>>2]=D,ne)),P=L;var P,F=h<<24>>24>88;do if(F)var X=0;else{if((C-2|0)>>>0<2){var X=0;break}var j=xr(r,o,k);if(0==(0|j)){var p=0;break r}var U=Me[v],x=Se[k>>2];if(0==(0|U)&0==(0|x)){var X=0;break}var z=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=U,Se[ne+4>>2]=x,ne));Se[v]=z;var X=z}while(0);var X,V=Se[i],B=V+1|0;Se[i]=B;var H=Ae[V],K=Se[e],Y=Ur(H,n,l,K);if(0==(0|Y)){var p=0;break}Cr(b);var G=Se[i];if(Ae[G]<<24>>24==64){Se[t]=0|He.__str84254,Se[t+1]=0;var W=G+1|0;Se[i]=W}else{var Z=Pr(r,s,b,0);if(0==(0|Z)){var p=0;break}}if(0!=(4&Se[e]|0)&&(Se[t+1]=0,Se[t]=0),0==(0|a))var Q=P;else{var q=0|s,$=Se[q>>2],J=s+4|0,rr=Se[J>>2],ar=Dr(r,0|He.__str85255,(ne=Oe,Oe+=12,Se[ne>>2]=P,Se[ne+4>>2]=$,Se[ne+8>>2]=rr,ne));Se[J>>2]=0,Se[q>>2]=0;var Q=ar}var Q,er=r+44|0,ir=Se[er>>2],vr=Xr(r,b,1,40,41);if(0==(0|vr)){var p=0;break}if(0==(4096&Se[e]|0))var tr=vr,fr=X;else{Se[v]=0;var tr=0,fr=0}var fr,tr;Se[er>>2]=ir;var _r=Se[t],sr=Se[t+1];if(0==(0|_r))var nr=0;else var or=0!=(0|sr)?0:0|He.__str87257,nr=or;var nr,lr=Se[n>>2],br=0!=(0|lr)?0|He.__str87257:0,kr=Se[l>>2],ur=Dr(r,0|He.__str86256,(ne=Oe,Oe+=44,Se[ne>>2]=R,Se[ne+4>>2]=T,Se[ne+8>>2]=_r,Se[ne+12>>2]=nr,Se[ne+16>>2]=lr,Se[ne+20>>2]=br,Se[ne+24>>2]=kr,Se[ne+28>>2]=Q,Se[ne+32>>2]=tr,Se[ne+36>>2]=fr,Se[ne+40>>2]=sr,ne));Se[r+16>>2]=ur;var p=1}while(0);var p;return Oe=f,p}function Hr(r){var a,a=(r+12|0)>>2,e=Se[a];if(Ae[e]<<24>>24==36)var i=e;else{Xa(0|He.__str72242,1252,0|He.___func___handle_template,0|He.__str74244);var i=Se[a]}var i;Se[a]=i+1|0;var v=Kr(r),t=0==(0|v);do if(t)var f=0;else{var _=Xr(r,0,0,60,62);if(0==(0|_)){var f=0;break}var s=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=v,Se[ne+4>>2]=_,ne));Se[r+16>>2]=s;var f=1}while(0);var f;return f}function Kr(r){for(var a,a=(r+12|0)>>2,e=Me[a],i=e,v=Ae[e];;){var v,i;if(!((v-65&255&255)<26|(v-97&255&255)<26|(v-48&255&255)<10)&&v<<24>>24!=95&&v<<24>>24!=36){var t=0;break}var f=i+1|0;Se[a]=f;var _=ge[f];if(_<<24>>24==64){Se[a]=i+2|0;var s=f-e|0,n=r+20|0,o=Fr(r,e,s,n);if(0==(0|o)){var t=0;break}var l=Se[r+24>>2]-1-Se[n>>2]|0,b=Yr(n,l),t=b;break}var i=f,v=_}var t;return t}function Yr(r,a){0==(0|r)&&Xa(0|He.__str72242,263,0|He.___func___str_array_get_ref,0|He.__str75245);var e=Se[r>>2]+a|0;if(e>>>0<Me[r+8>>2]>>>0)var i=Se[Se[r+16>>2]+(e<<2)>>2];else var i=0;var i;return i}function Gr(r,a){var e,e=(r+44|0)>>2,i=Me[e];if(i>>>0>a>>>0){for(var v=r+56|0,t=a,f=0,_=Se[v>>2],s=i;;){var s,_,f,t,n=Me[_+(t<<2)>>2];if(0==(0|n)){Xa(0|He.__str72242,680,0|He.___func___get_class_string,0|He.__str106276);var o=Se[v>>2],l=o,b=Se[o+(t<<2)>>2],k=Se[e]}else var l=_,b=n,k=s;var k,b,l,u=Ca(b),c=u+(f+2)|0,h=t+1|0;if(h>>>0>=k>>>0)break;var t=h,f=c,_=l,s=k}var d=c-1|0}else var d=-1;var d,w=Wr(r,d);if(0==(0|w))var p=0;else{var E=Se[e]-1|0,A=(0|E)<(0|a);r:do if(A)var g=0;else for(var y=r+56|0,m=0,S=E;;){var S,m,M=Se[Se[y>>2]+(S<<2)>>2],C=Ca(M),R=w+m|0;Pa(R,M,C,1);var T=C+m|0;if((0|S)>(0|a)){var O=T+1|0;Ae[w+T|0]=58;var N=T+2|0;Ae[w+O|0]=58;var I=N}else var I=T;var I,P=S-1|0;if((0|P)<(0|a)){var g=I;break r}var m=I,S=P}while(0);var g;Ae[w+g|0]=0;var p=w}var p;return p}function Wr(r,a){var e,i=a>>>0>1020;do if(i){var v=Se[r+4>>2],t=a+4|0,f=pe[v](t);if(0==(0|f)){var _=0;break}var s=r+60|0,n=Se[s>>2],o=f;Se[o>>2]=n,Se[s>>2]=f,Se[r+64>>2]=0;var _=f+4|0}else{var e=(r+64|0)>>2,l=Me[e];if(l>>>0<a>>>0){var b=Se[r+4>>2],k=pe[b](1024);if(0==(0|k)){var _=0;break}var u=r+60|0,c=Se[u>>2],h=k;Se[h>>2]=c,Se[u>>2]=k,Se[e]=1020;var d=1020,w=k}else var d=l,w=Se[r+60>>2];var w,d;Se[e]=d-a|0;var _=w+(1024-d)|0}while(0);var _;return _}function Zr(r){var a=r<<24>>24;if(68==(0|a))var e=0|He.__str157327;else if(69==(0|a))var e=0|He.__str158328;else if(70==(0|a))var e=0|He.__str159329;else if(71==(0|a))var e=0|He.__str160330;else if(72==(0|a))var e=0|He.__str161331;else if(73==(0|a))var e=0|He.__str162332;else if(74==(0|a))var e=0|He.__str163333;else if(75==(0|a))var e=0|He.__str164334;else if(76==(0|a))var e=0|He.__str165335;else if(77==(0|a))var e=0|He.__str166336;else if(78==(0|a))var e=0|He.__str167337;else if(87==(0|a))var e=0|He.__str168338;else var e=0;var e;return e}function Qr(r){var a=r<<24>>24;if(67==(0|a))var e=0|He.__str145315;else if(68==(0|a))var e=0|He.__str146316;else if(69==(0|a))var e=0|He.__str147317;else if(70==(0|a))var e=0|He.__str148318;else if(71==(0|a))var e=0|He.__str149319;else if(72==(0|a))var e=0|He.__str150320;else if(73==(0|a))var e=0|He.__str151321;else if(74==(0|a))var e=0|He.__str152322;else if(75==(0|a))var e=0|He.__str153323;else if(77==(0|a))var e=0|He.__str154324;else if(78==(0|a))var e=0|He.__str155325;else if(79==(0|a))var e=0|He.__str156326;else if(88==(0|a))var e=0|He.__str84254;else if(90==(0|a))var e=0|He.__str110280;else var e=0;var e;return e}function qr(r){var a=r+44|0,e=Se[a>>2],i=zr(r);if(0==(0|i))var v=0;else var t=Gr(r,e),v=t;var v;return Se[a>>2]=e,v}function $r(r,a,e,i,v){var t,f,_,s=Oe;Oe+=16;var n,o=s,_=o>>2,l=s+4,b=s+8,f=b>>2;Se[l>>2]=0|ii;var t=(a+12|0)>>2,k=Se[t];if(Ae[k]<<24>>24==69){Se[l>>2]=0|He.__str134304;var u=k+1|0;Se[t]=u;var c=0|He.__str134304}else var c=0|ii;var c,h=i<<24>>24;do{if(65==(0|h)){var d=Dr(a,0|He.__str135305,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=d;n=10;break}if(66==(0|h)){var p=Dr(a,0|He.__str136306,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=p;n=10;break}if(80==(0|h)){var E=Dr(a,0|He.__str137307,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=E;n=10;break}if(81==(0|h)){var A=Dr(a,0|He.__str138308,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=A;n=10;break}if(82==(0|h)){var g=Dr(a,0|He.__str139309,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=g;n=10;break}if(83==(0|h)){var y=Dr(a,0|He.__str140310,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=y;n=10;break}if(63==(0|h)){var w=0|ii;n=10}else n=31}while(0);r:do if(10==n){var w,m=xr(a,o,l);if(0==(0|m))break;var S=a+44|0,M=Se[S>>2],C=Se[t],R=Ae[C]<<24>>24==89;a:do if(R){var T=C+1|0;Se[t]=T;var O=Lr(a);if(0==(0|O))break r;var N=Ha(O),I=Ae[w]<<24>>24==32,P=Se[_],D=0==(0|P);do{if(I){if(!D){n=17;break}var L=w+1|0;n=18;break}if(D){var L=w;n=18;break}n=17;break}while(0);if(17==n){var F=Dr(a,0|He.__str141311,(ne=Oe,Oe+=8,Se[ne>>2]=P,Se[ne+4>>2]=w,ne));Se[_]=0;var X=F}else if(18==n)var L,j=Dr(a,0|He.__str142312,(ne=Oe,Oe+=4,Se[ne>>2]=L,ne)),X=j;var X;if(0==(0|N)){var U=X;break}for(var x=X,z=N;;){var z,x,V=z-1|0,B=Lr(a),H=Dr(a,0|He.__str143313,(ne=Oe,Oe+=8,Se[ne>>2]=x,Se[ne+4>>2]=B,ne));if(0==(0|V)){var U=H;break a}var x=H,z=V}}else var U=w;while(0);var U,K=Pr(a,b,e,0);if(0==(0|K))break;var Y=Se[_];if(0==(0|Y)){var G=0==(0|v);do if(G){if(Ae[U]<<24>>24==0){var W=U;break}var Z=U+1|0;if(Ae[Z]<<24>>24!=42){var W=U;break}var Q=Se[f],q=Ca(Q);if(Ae[Q+(q-1)|0]<<24>>24!=42){var W=U;break}var W=Z}else var W=U;while(0);var W,$=Se[f],J=Dr(a,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=$,Se[ne+4>>2]=W,ne));Se[r>>2]=J}else{var rr=Se[f],ar=Dr(a,0|He.__str144314,(ne=Oe,Oe+=12,Se[ne>>2]=rr,Se[ne+4>>2]=Y,Se[ne+8>>2]=U,ne));Se[r>>2]=ar}var er=Se[f+1];Se[r+4>>2]=er,Se[S>>2]=M}while(0);Oe=s}function Jr(r){var a,e=r>>>0<245;do{if(e){if(r>>>0<11)var i=16;else var i=r+11&-8;var i,v=i>>>3,t=Me[vi>>2],f=t>>>(v>>>0);if(0!=(3&f|0)){var _=(1&f^1)+v|0,s=_<<1,n=(s<<2)+vi+40|0,o=(s+2<<2)+vi+40|0,l=Me[o>>2],b=l+8|0,k=Me[b>>2];if((0|n)==(0|k))Se[vi>>2]=t&(1<<_^-1);else{if(k>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[o>>2]=k,Se[k+12>>2]=n}var u=_<<3;Se[l+4>>2]=3|u;var c=l+(4|u)|0,h=1|Se[c>>2];Se[c>>2]=h;var d=b;a=38;break}if(i>>>0<=Me[vi+8>>2]>>>0){var w=i;a=30;break}if(0!=(0|f)){var p=2<<v,E=f<<v&(p|-p),A=(E&-E)-1|0,g=A>>>12&16,y=A>>>(g>>>0),m=y>>>5&8,S=y>>>(m>>>0),M=S>>>2&4,C=S>>>(M>>>0),R=C>>>1&2,T=C>>>(R>>>0),O=T>>>1&1,N=(m|g|M|R|O)+(T>>>(O>>>0))|0,I=N<<1,P=(I<<2)+vi+40|0,D=(I+2<<2)+vi+40|0,L=Me[D>>2],F=L+8|0,X=Me[F>>2];if((0|P)==(0|X))Se[vi>>2]=t&(1<<N^-1);else{if(X>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[D>>2]=X,Se[X+12>>2]=P}var j=N<<3,U=j-i|0;Se[L+4>>2]=3|i;var x=L,z=x+i|0;Se[x+(4|i)>>2]=1|U,Se[x+j>>2]=U;var V=Me[vi+8>>2];if(0!=(0|V)){var B=Se[vi+20>>2],H=V>>>2&1073741822,K=(H<<2)+vi+40|0,Y=Me[vi>>2],G=1<<(V>>>3),W=0==(Y&G|0);do{if(!W){var Z=(H+2<<2)+vi+40|0,Q=Me[Z>>2];if(Q>>>0>=Me[vi+16>>2]>>>0){var q=Q,$=Z;break}throw Ka(),\"Reached an unreachable!\"}Se[vi>>2]=Y|G;var q=K,$=(H+2<<2)+vi+40|0}while(0);var $,q;Se[$>>2]=B,Se[q+12>>2]=B;var J=B+8|0;Se[J>>2]=q;var rr=B+12|0;Se[rr>>2]=K}Se[vi+8>>2]=U,Se[vi+20>>2]=z;var d=F;a=38;break}if(0==(0|Se[vi+4>>2])){var w=i;a=30;break}var ar=ra(i);if(0==(0|ar)){var w=i;a=30;break}var d=ar;a=38;break}if(r>>>0>4294967231){var w=-1;a=30;break}var er=r+11&-8;if(0==(0|Se[vi+4>>2])){var w=er;a=30;break}var ir=ea(er);if(0==(0|ir)){var w=er;a=30;break}var d=ir;a=38;break}while(0);if(30==a){var w,vr=Me[vi+8>>2];if(w>>>0>vr>>>0){var tr=Me[vi+12>>2];if(w>>>0<tr>>>0){var fr=tr-w|0;Se[vi+12>>2]=fr;var _r=Me[vi+24>>2],sr=_r;Se[vi+24>>2]=sr+w|0,Se[w+(sr+4)>>2]=1|fr,Se[_r+4>>2]=3|w;var d=_r+8|0}else var nr=aa(w),d=nr}else{var or=vr-w|0,lr=Me[vi+20>>2];if(or>>>0>15){var br=lr;Se[vi+20>>2]=br+w|0,Se[vi+8>>2]=or,Se[w+(br+4)>>2]=1|or,Se[br+vr>>2]=or,Se[lr+4>>2]=3|w}else{Se[vi+8>>2]=0,Se[vi+20>>2]=0,Se[lr+4>>2]=3|vr;var kr=vr+(lr+4)|0,ur=1|Se[kr>>2];Se[kr>>2]=ur}var d=lr+8|0}}var d;return d}function ra(r){var a,e,i,v=Se[vi+4>>2],t=(v&-v)-1|0,f=t>>>12&16,_=t>>>(f>>>0),s=_>>>5&8,n=_>>>(s>>>0),o=n>>>2&4,l=n>>>(o>>>0),b=l>>>1&2,k=l>>>(b>>>0),u=k>>>1&1,c=Me[vi+((s|f|o|b|u)+(k>>>(u>>>0))<<2)+304>>2],h=c,e=h>>2,d=(Se[c+4>>2]&-8)-r|0;r:for(;;)for(var d,h,w=h;;){var w,p=Se[w+16>>2];if(0==(0|p)){var E=Se[w+20>>2];if(0==(0|E))break r;var A=E}else var A=p;var A,g=(Se[A+4>>2]&-8)-r|0;if(g>>>0<d>>>0){var h=A,e=h>>2,d=g;continue r}var w=A}var y=h,m=Me[vi+16>>2],S=y>>>0<m>>>0;do if(!S){var M=y+r|0,C=M;if(y>>>0>=M>>>0)break;var R=Me[e+6],T=Me[e+3],O=(0|T)==(0|h);do if(O){var N=h+20|0,I=Se[N>>2];if(0==(0|I)){var P=h+16|0,D=Se[P>>2];if(0==(0|D)){var L=0,a=L>>2;break}var F=P,X=D}else{var F=N,X=I;i=14}for(;;){var X,F,j=X+20|0,U=Se[j>>2];if(0==(0|U)){var x=X+16|0,z=Me[x>>2];if(0==(0|z))break;var F=x,X=z}else var F=j,X=U}if(F>>>0<m>>>0)throw Ka(),\"Reached an unreachable!\";Se[F>>2]=0;var L=X,a=L>>2}else{var V=Me[e+2];if(V>>>0<m>>>0)throw Ka(),\"Reached an unreachable!\";Se[V+12>>2]=T,Se[T+8>>2]=V;var L=T,a=L>>2}while(0);var L,B=0==(0|R);r:do if(!B){var H=h+28|0,K=(Se[H>>2]<<2)+vi+304|0,Y=(0|h)==(0|Se[K>>2]);do{if(Y){if(Se[K>>2]=L,0!=(0|L))break;var G=Se[vi+4>>2]&(1<<Se[H>>2]^-1);Se[vi+4>>2]=G;break r}if(R>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";var W=R+16|0;if((0|Se[W>>2])==(0|h)?Se[W>>2]=L:Se[R+20>>2]=L,0==(0|L))break r}while(0);if(L>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+6]=R;var Z=Me[e+4];if(0!=(0|Z)){if(Z>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+4]=Z,Se[Z+24>>2]=L}var Q=Me[e+5];if(0==(0|Q))break;if(Q>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+5]=Q,Se[Q+24>>2]=L}while(0);if(d>>>0<16){var q=d+r|0;Se[e+1]=3|q;var $=q+(y+4)|0,J=1|Se[$>>2];Se[$>>2]=J}else{Se[e+1]=3|r,Se[r+(y+4)>>2]=1|d,Se[y+d+r>>2]=d;var rr=Me[vi+8>>2];if(0!=(0|rr)){var ar=Me[vi+20>>2],er=rr>>>2&1073741822,ir=(er<<2)+vi+40|0,vr=Me[vi>>2],tr=1<<(rr>>>3),fr=0==(vr&tr|0);do{if(!fr){var _r=(er+2<<2)+vi+40|0,sr=Me[_r>>2];if(sr>>>0>=Me[vi+16>>2]>>>0){var nr=sr,or=_r;break}throw Ka(),\"Reached an unreachable!\"}Se[vi>>2]=vr|tr;var nr=ir,or=(er+2<<2)+vi+40|0}while(0);var or,nr;Se[or>>2]=ar,Se[nr+12>>2]=ar,Se[ar+8>>2]=nr,Se[ar+12>>2]=ir}Se[vi+8>>2]=d,Se[vi+20>>2]=C}return h+8|0}while(0);throw Ka(),\"Reached an unreachable!\"}function aa(r){var a,e;0==(0|Se[ti>>2])&&ba();var i=0==(4&Se[vi+440>>2]|0);do{if(i){var v=Se[vi+24>>2],t=0==(0|v);do{if(!t){var f=v,_=ua(f);if(0==(0|_)){e=6;break}var s=Se[ti+8>>2],n=r+47-Se[vi+12>>2]+s&-s;if(n>>>0>=2147483647){e=14;break}var o=re(n);if((0|o)==(Se[_>>2]+Se[_+4>>2]|0)){var l=o,b=n,k=o;e=13;break}var u=o,c=n;e=15;break}e=6}while(0);do if(6==e){var h=re(0);if((0|h)==-1){e=14;break}var d=Se[ti+8>>2],w=d+(r+47)&-d,p=h,E=Se[ti+4>>2],A=E-1|0;if(0==(A&p|0))var g=w;else var g=w-p+(A+p&-E)|0;var g;if(g>>>0>=2147483647){e=14;break}var y=re(g);if((0|y)==(0|h)){var l=h,b=g,k=y;e=13;break}var u=y,c=g;e=15;break}while(0);if(13==e){var k,b,l;if((0|l)!=-1){var m=b,S=l;e=26;break}var u=k,c=b}else if(14==e){var M=4|Se[vi+440>>2];Se[vi+440>>2]=M,e=23;break}var c,u,C=0|-c,R=(0|u)!=-1&c>>>0<2147483647;do{if(R){if(c>>>0>=(r+48|0)>>>0){var T=c;e=21;break}var O=Se[ti+8>>2],N=r+47-c+O&-O;if(N>>>0>=2147483647){var T=c;e=21;break}var I=re(N);if((0|I)==-1){re(C);e=22;break}var T=N+c|0;e=21;break}var T=c;e=21}while(0);if(21==e){var T;if((0|u)!=-1){var m=T,S=u;e=26;break}}var P=4|Se[vi+440>>2];Se[vi+440>>2]=P,e=23;break}e=23}while(0);do if(23==e){var D=Se[ti+8>>2],L=D+(r+47)&-D;if(L>>>0>=2147483647){e=49;break}var F=re(L),X=re(0);if(!((0|X)!=-1&(0|F)!=-1&F>>>0<X>>>0)){e=49;break}var j=X-F|0;if(j>>>0<=(r+40|0)>>>0|(0|F)==-1){e=49;break}var m=j,S=F;e=26;break}while(0);r:do if(26==e){var S,m,U=Se[vi+432>>2]+m|0;Se[vi+432>>2]=U,U>>>0>Me[vi+436>>2]>>>0&&(Se[vi+436>>2]=U);var x=Me[vi+24>>2],z=0==(0|x);a:do if(z){var V=Me[vi+16>>2];0==(0|V)|S>>>0<V>>>0&&(Se[vi+16>>2]=S),Se[vi+444>>2]=S,Se[vi+448>>2]=m,Se[vi+456>>2]=0;var B=Se[ti>>2];Se[vi+36>>2]=B,Se[vi+32>>2]=-1,ha(),ca(S,m-40|0)}else{for(var H=vi+444|0,a=H>>2;;){var H;if(0==(0|H))break;var K=Me[a],Y=H+4|0,G=Me[Y>>2],W=K+G|0;if((0|S)==(0|W)){if(0!=(8&Se[a+3]|0))break;var Z=x;if(!(Z>>>0>=K>>>0&Z>>>0<W>>>0))break;Se[Y>>2]=G+m|0;var Q=Se[vi+24>>2],q=Se[vi+12>>2]+m|0;ca(Q,q);break a}var H=Se[a+2],a=H>>2}S>>>0<Me[vi+16>>2]>>>0&&(Se[vi+16>>2]=S);for(var $=S+m|0,J=vi+444|0;;){var J;if(0==(0|J))break;var rr=0|J,ar=Me[rr>>2];if((0|ar)==(0|$)){if(0!=(8&Se[J+12>>2]|0))break;Se[rr>>2]=S;var er=J+4|0,ir=Se[er>>2]+m|0;Se[er>>2]=ir;var vr=da(S,ar,r),tr=vr;e=50;break r}var J=Se[J+8>>2]}Ma(S,m)}while(0);var fr=Me[vi+12>>2];if(fr>>>0<=r>>>0){e=49;break}var _r=fr-r|0;Se[vi+12>>2]=_r;var sr=Me[vi+24>>2],nr=sr;Se[vi+24>>2]=nr+r|0,Se[r+(nr+4)>>2]=1|_r,Se[sr+4>>2]=3|r;var tr=sr+8|0;e=50;break}while(0);if(49==e){var or=Je();Se[or>>2]=12;var tr=0}var tr;return tr}function ea(r){var a,e,i,v,t,f,_=r>>2,s=0|-r,n=r>>>8,o=0==(0|n);do if(o)var l=0;else{if(r>>>0>16777215){var l=31;break}var b=(n+1048320|0)>>>16&8,k=n<<b,u=(k+520192|0)>>>16&4,c=k<<u,h=(c+245760|0)>>>16&2,d=14-(u|b|h)+(c<<h>>>15)|0,l=r>>>((d+7|0)>>>0)&1|d<<1}while(0);var l,w=Me[vi+(l<<2)+304>>2],p=0==(0|w);r:do if(p)var E=0,A=s,g=0;else{if(31==(0|l))var y=0;else var y=25-(l>>>1)|0;for(var y,m=0,S=s,M=w,t=M>>2,C=r<<y,R=0;;){var R,C,M,S,m,T=Se[t+1]&-8,O=T-r|0;if(O>>>0<S>>>0){if((0|T)==(0|r)){var E=M,A=O,g=M;break r}var N=M,I=O}else var N=m,I=S;var I,N,P=Me[t+5],D=Me[((C>>>31<<2)+16>>2)+t],L=0==(0|P)|(0|P)==(0|D)?R:P;if(0==(0|D)){var E=N,A=I,g=L;break r}var m=N,S=I,M=D,t=M>>2,C=C<<1,R=L}}while(0);var g,A,E,F=0==(0|g)&0==(0|E);do if(F){var X=2<<l,j=Se[vi+4>>2]&(X|-X);if(0==(0|j)){var U=g;break}var x=(j&-j)-1|0,z=x>>>12&16,V=x>>>(z>>>0),B=V>>>5&8,H=V>>>(B>>>0),K=H>>>2&4,Y=H>>>(K>>>0),G=Y>>>1&2,W=Y>>>(G>>>0),Z=W>>>1&1,U=Se[vi+((B|z|K|G|Z)+(W>>>(Z>>>0))<<2)+304>>2]}else var U=g;while(0);var U,Q=0==(0|U);r:do if(Q)var q=A,$=E,v=$>>2;else for(var J=U,i=J>>2,rr=A,ar=E;;){var ar,rr,J,er=(Se[i+1]&-8)-r|0,ir=er>>>0<rr>>>0,vr=ir?er:rr,tr=ir?J:ar,fr=Me[i+4];if(0==(0|fr)){var _r=Me[i+5];if(0==(0|_r)){var q=vr,$=tr,v=$>>2;break r}var J=_r,i=J>>2,rr=vr,ar=tr}else var J=fr,i=J>>2,rr=vr,ar=tr}while(0);var $,q,sr=0==(0|$);r:do{if(!sr){if(q>>>0>=(Se[vi+8>>2]-r|0)>>>0){var nr=0;break}var or=$,e=or>>2,lr=Me[vi+16>>2],br=or>>>0<lr>>>0;do if(!br){var kr=or+r|0,ur=kr;if(or>>>0>=kr>>>0)break;var cr=Me[v+6],hr=Me[v+3],dr=(0|hr)==(0|$);do if(dr){var wr=$+20|0,pr=Se[wr>>2];if(0==(0|pr)){var Er=$+16|0,Ar=Se[Er>>2];if(0==(0|Ar)){var gr=0,a=gr>>2;break}var yr=Er,mr=Ar}else{var yr=wr,mr=pr;f=28}for(;;){var mr,yr,Sr=mr+20|0,Mr=Se[Sr>>2];if(0==(0|Mr)){var Cr=mr+16|0,Rr=Me[Cr>>2];if(0==(0|Rr))break;var yr=Cr,mr=Rr}else var yr=Sr,mr=Mr}if(yr>>>0<lr>>>0)throw Ka(),\"Reached an unreachable!\";Se[yr>>2]=0;var gr=mr,a=gr>>2}else{var Tr=Me[v+2];if(Tr>>>0<lr>>>0)throw Ka(),\"Reached an unreachable!\";Se[Tr+12>>2]=hr,Se[hr+8>>2]=Tr;var gr=hr,a=gr>>2}while(0);var gr,Or=0==(0|cr);a:do if(!Or){var Nr=$+28|0,Ir=(Se[Nr>>2]<<2)+vi+304|0,Pr=(0|$)==(0|Se[Ir>>2]);do{if(Pr){if(Se[Ir>>2]=gr,0!=(0|gr))break;var Dr=Se[vi+4>>2]&(1<<Se[Nr>>2]^-1);Se[vi+4>>2]=Dr;break a}if(cr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";var Lr=cr+16|0;if((0|Se[Lr>>2])==(0|$)?Se[Lr>>2]=gr:Se[cr+20>>2]=gr,0==(0|gr))break a}while(0);if(gr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+6]=cr;var Fr=Me[v+4];if(0!=(0|Fr)){if(Fr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+4]=Fr,Se[Fr+24>>2]=gr}var Xr=Me[v+5];if(0==(0|Xr))break;if(Xr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+5]=Xr,Se[Xr+24>>2]=gr}while(0);var jr=q>>>0<16;a:do if(jr){var Ur=q+r|0;Se[v+1]=3|Ur;var xr=Ur+(or+4)|0,zr=1|Se[xr>>2];Se[xr>>2]=zr}else if(Se[v+1]=3|r,Se[_+(e+1)]=1|q,Se[(q>>2)+e+_]=q,q>>>0<256){var Vr=q>>>2&1073741822,Br=(Vr<<2)+vi+40|0,Hr=Me[vi>>2],Kr=1<<(q>>>3),Yr=0==(Hr&Kr|0);do{if(!Yr){var Gr=(Vr+2<<2)+vi+40|0,Wr=Me[Gr>>2];if(Wr>>>0>=Me[vi+16>>2]>>>0){var Zr=Wr,Qr=Gr;break}throw Ka(),\"Reached an unreachable!\"}Se[vi>>2]=Hr|Kr;var Zr=Br,Qr=(Vr+2<<2)+vi+40|0}while(0);var Qr,Zr;Se[Qr>>2]=ur,Se[Zr+12>>2]=ur,Se[_+(e+2)]=Zr,Se[_+(e+3)]=Br}else{var qr=kr,$r=q>>>8,Jr=0==(0|$r);do if(Jr)var ra=0;else{if(q>>>0>16777215){var ra=31;break}var aa=($r+1048320|0)>>>16&8,ea=$r<<aa,ia=(ea+520192|0)>>>16&4,va=ea<<ia,ta=(va+245760|0)>>>16&2,fa=14-(ia|aa|ta)+(va<<ta>>>15)|0,ra=q>>>((fa+7|0)>>>0)&1|fa<<1}while(0);var ra,_a=(ra<<2)+vi+304|0;Se[_+(e+7)]=ra;var sa=r+(or+16)|0;Se[_+(e+5)]=0,Se[sa>>2]=0;var na=Se[vi+4>>2],oa=1<<ra;if(0==(na&oa|0)){var la=na|oa;Se[vi+4>>2]=la,Se[_a>>2]=qr,Se[_+(e+6)]=_a,Se[_+(e+3)]=qr,Se[_+(e+2)]=qr}else{if(31==(0|ra))var ba=0;else var ba=25-(ra>>>1)|0;for(var ba,ka=q<<ba,ua=Se[_a>>2];;){var ua,ka;if((Se[ua+4>>2]&-8|0)==(0|q)){var ca=ua+8|0,ha=Me[ca>>2],da=Me[vi+16>>2],wa=ua>>>0<da>>>0;do if(!wa){if(ha>>>0<da>>>0)break;Se[ha+12>>2]=qr,Se[ca>>2]=qr,Se[_+(e+2)]=ha,Se[_+(e+3)]=ua,Se[_+(e+6)]=0;break a}while(0);throw Ka(),\"Reached an unreachable!\"}var pa=(ka>>>31<<2)+ua+16|0,Ea=Me[pa>>2];if(0==(0|Ea)){if(pa>>>0>=Me[vi+16>>2]>>>0){Se[pa>>2]=qr,Se[_+(e+6)]=ua,Se[_+(e+3)]=qr,Se[_+(e+2)]=qr;break a}throw Ka(),\"Reached an unreachable!\"}var ka=ka<<1,ua=Ea}}}while(0);var nr=$+8|0;break r}while(0);throw Ka(),\"Reached an unreachable!\"}var nr=0}while(0);var nr;return nr}function ia(r){var a;0==(0|Se[ti>>2])&&ba();var e=r>>>0<4294967232;r:do if(e){var i=Me[vi+24>>2];if(0==(0|i)){var v=0;break}var t=Me[vi+12>>2],f=t>>>0>(r+40|0)>>>0;do if(f){var _=Me[ti+8>>2],s=-40-r-1+t+_|0,n=Math.floor((s>>>0)/(_>>>0)),o=(n-1)*_|0,l=i,b=ua(l);if(0!=(8&Se[b+12>>2]|0))break;var k=re(0),a=(b+4|0)>>2;if((0|k)!=(Se[b>>2]+Se[a]|0))break;var u=o>>>0>2147483646?-2147483648-_|0:o,c=0|-u,h=re(c),d=re(0);if(!((0|h)!=-1&d>>>0<k>>>0))break;var w=k-d|0;if((0|k)==(0|d))break;var p=Se[a]-w|0;Se[a]=p;var E=Se[vi+432>>2]-w|0;Se[vi+432>>2]=E;var A=Se[vi+24>>2],g=Se[vi+12>>2]-w|0;ca(A,g);var v=(0|k)!=(0|d);break r}while(0);if(Me[vi+12>>2]>>>0<=Me[vi+28>>2]>>>0){var v=0;break}Se[vi+28>>2]=-1;var v=0}else var v=0;while(0);var v;return 1&v}function va(r){var a,e,i,v,t,f,_,s=r>>2,n=0==(0|r);r:do if(!n){var o=r-8|0,l=o,b=Me[vi+16>>2],k=o>>>0<b>>>0;a:do if(!k){var u=Me[r-4>>2],c=3&u;if(1==(0|c))break;var h=u&-8,f=h>>2,d=r+(h-8)|0,w=d,p=0==(1&u|0);e:do if(p){var E=Me[o>>2];if(0==(0|c))break r;var A=-8-E|0,t=A>>2,g=r+A|0,y=g,m=E+h|0;if(g>>>0<b>>>0)break a;if((0|y)==(0|Se[vi+20>>2])){var v=(r+(h-4)|0)>>2;if(3!=(3&Se[v]|0)){var S=y,i=S>>2,M=m;break}Se[vi+8>>2]=m;var C=Se[v]&-2;Se[v]=C,Se[t+(s+1)]=1|m,Se[d>>2]=m;break r}if(E>>>0<256){var R=Me[t+(s+2)],T=Me[t+(s+3)];if((0|R)!=(0|T)){var O=((E>>>2&1073741822)<<2)+vi+40|0,N=(0|R)!=(0|O)&R>>>0<b>>>0;do if(!N){if(!((0|T)==(0|O)|T>>>0>=b>>>0))break;Se[R+12>>2]=T,Se[T+8>>2]=R;var S=y,i=S>>2,M=m;break e}while(0);throw Ka(),\"Reached an unreachable!\"}var I=Se[vi>>2]&(1<<(E>>>3)^-1);Se[vi>>2]=I;var S=y,i=S>>2,M=m}else{var P=g,D=Me[t+(s+6)],L=Me[t+(s+3)],F=(0|L)==(0|P);do if(F){var X=A+(r+20)|0,j=Se[X>>2];if(0==(0|j)){var U=A+(r+16)|0,x=Se[U>>2];if(0==(0|x)){var z=0,e=z>>2;break}var V=U,B=x}else{var V=X,B=j;_=21}for(;;){var B,V,H=B+20|0,K=Se[H>>2];if(0==(0|K)){var Y=B+16|0,G=Me[Y>>2];if(0==(0|G))break;var V=Y,B=G}else var V=H,B=K}if(V>>>0<b>>>0)throw Ka(),\"Reached an unreachable!\";Se[V>>2]=0;var z=B,e=z>>2}else{var W=Me[t+(s+2)];if(W>>>0<b>>>0)throw Ka(),\"Reached an unreachable!\";Se[W+12>>2]=L,Se[L+8>>2]=W;var z=L,e=z>>2}while(0);var z;if(0==(0|D)){var S=y,i=S>>2,M=m;break}var Z=A+(r+28)|0,Q=(Se[Z>>2]<<2)+vi+304|0,q=(0|P)==(0|Se[Q>>2]);do{if(q){if(Se[Q>>2]=z,0!=(0|z))break;var $=Se[vi+4>>2]&(1<<Se[Z>>2]^-1);Se[vi+4>>2]=$;var S=y,i=S>>2,M=m;break e}if(D>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";var J=D+16|0;if((0|Se[J>>2])==(0|P)?Se[J>>2]=z:Se[D+20>>2]=z,0==(0|z)){var S=y,i=S>>2,M=m;break e}}while(0);if(z>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[e+6]=D;var rr=Me[t+(s+4)];if(0!=(0|rr)){if(rr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[e+4]=rr,Se[rr+24>>2]=z}var ar=Me[t+(s+5)];if(0==(0|ar)){var S=y,i=S>>2,M=m;break}if(ar>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[e+5]=ar,Se[ar+24>>2]=z;var S=y,i=S>>2,M=m}}else var S=l,i=S>>2,M=h;while(0);var M,S,er=S;if(er>>>0>=d>>>0)break;var ir=r+(h-4)|0,vr=Me[ir>>2];if(0==(1&vr|0))break;var tr=0==(2&vr|0);do{if(tr){if((0|w)==(0|Se[vi+24>>2])){var fr=Se[vi+12>>2]+M|0;Se[vi+12>>2]=fr,Se[vi+24>>2]=S;var _r=1|fr;if(Se[i+1]=_r,(0|S)==(0|Se[vi+20>>2])&&(Se[vi+20>>2]=0,Se[vi+8>>2]=0),fr>>>0<=Me[vi+28>>2]>>>0)break r;ia(0);break r}if((0|w)==(0|Se[vi+20>>2])){var sr=Se[vi+8>>2]+M|0;Se[vi+8>>2]=sr,Se[vi+20>>2]=S;var nr=1|sr;Se[i+1]=nr;var or=er+sr|0;Se[or>>2]=sr;break r}var lr=(vr&-8)+M|0,br=vr>>>3,kr=vr>>>0<256;e:do if(kr){var ur=Me[s+f],cr=Me[((4|h)>>2)+s];if((0|ur)!=(0|cr)){var hr=((vr>>>2&1073741822)<<2)+vi+40|0,dr=(0|ur)==(0|hr);do{if(!dr){if(ur>>>0<Me[vi+16>>2]>>>0){_=66;break}_=63;break}_=63}while(0);do if(63==_){if((0|cr)!=(0|hr)&&cr>>>0<Me[vi+16>>2]>>>0)break;Se[ur+12>>2]=cr,Se[cr+8>>2]=ur;break e}while(0);throw Ka(),\"Reached an unreachable!\"}var wr=Se[vi>>2]&(1<<br^-1);Se[vi>>2]=wr}else{var pr=d,Er=Me[f+(s+4)],Ar=Me[((4|h)>>2)+s],gr=(0|Ar)==(0|pr);do if(gr){var yr=h+(r+12)|0,mr=Se[yr>>2];if(0==(0|mr)){var Sr=h+(r+8)|0,Mr=Se[Sr>>2];if(0==(0|Mr)){var Cr=0,a=Cr>>2;break}var Rr=Sr,Tr=Mr}else{var Rr=yr,Tr=mr;_=73}for(;;){var Tr,Rr,Or=Tr+20|0,Nr=Se[Or>>2];if(0==(0|Nr)){var Ir=Tr+16|0,Pr=Me[Ir>>2];if(0==(0|Pr))break;var Rr=Ir,Tr=Pr}else var Rr=Or,Tr=Nr}if(Rr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[Rr>>2]=0;var Cr=Tr,a=Cr>>2}else{var Dr=Me[s+f];if(Dr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[Dr+12>>2]=Ar,\nSe[Ar+8>>2]=Dr;var Cr=Ar,a=Cr>>2}while(0);var Cr;if(0==(0|Er))break;var Lr=h+(r+20)|0,Fr=(Se[Lr>>2]<<2)+vi+304|0,Xr=(0|pr)==(0|Se[Fr>>2]);do{if(Xr){if(Se[Fr>>2]=Cr,0!=(0|Cr))break;var jr=Se[vi+4>>2]&(1<<Se[Lr>>2]^-1);Se[vi+4>>2]=jr;break e}if(Er>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";var Ur=Er+16|0;if((0|Se[Ur>>2])==(0|pr)?Se[Ur>>2]=Cr:Se[Er+20>>2]=Cr,0==(0|Cr))break e}while(0);if(Cr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+6]=Er;var xr=Me[f+(s+2)];if(0!=(0|xr)){if(xr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+4]=xr,Se[xr+24>>2]=Cr}var zr=Me[f+(s+3)];if(0==(0|zr))break;if(zr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[a+5]=zr,Se[zr+24>>2]=Cr}while(0);if(Se[i+1]=1|lr,Se[er+lr>>2]=lr,(0|S)!=(0|Se[vi+20>>2])){var Vr=lr;break}Se[vi+8>>2]=lr;break r}Se[ir>>2]=vr&-2,Se[i+1]=1|M,Se[er+M>>2]=M;var Vr=M}while(0);var Vr;if(Vr>>>0<256){var Br=Vr>>>2&1073741822,Hr=(Br<<2)+vi+40|0,Kr=Me[vi>>2],Yr=1<<(Vr>>>3),Gr=0==(Kr&Yr|0);do{if(!Gr){var Wr=(Br+2<<2)+vi+40|0,Zr=Me[Wr>>2];if(Zr>>>0>=Me[vi+16>>2]>>>0){var Qr=Zr,qr=Wr;break}throw Ka(),\"Reached an unreachable!\"}Se[vi>>2]=Kr|Yr;var Qr=Hr,qr=(Br+2<<2)+vi+40|0}while(0);var qr,Qr;Se[qr>>2]=S,Se[Qr+12>>2]=S,Se[i+2]=Qr,Se[i+3]=Hr;break r}var $r=S,Jr=Vr>>>8,ra=0==(0|Jr);do if(ra)var aa=0;else{if(Vr>>>0>16777215){var aa=31;break}var ea=(Jr+1048320|0)>>>16&8,va=Jr<<ea,fa=(va+520192|0)>>>16&4,_a=va<<fa,sa=(_a+245760|0)>>>16&2,na=14-(fa|ea|sa)+(_a<<sa>>>15)|0,aa=Vr>>>((na+7|0)>>>0)&1|na<<1}while(0);var aa,oa=(aa<<2)+vi+304|0;Se[i+7]=aa,Se[i+5]=0,Se[i+4]=0;var la=Se[vi+4>>2],ba=1<<aa,ka=0==(la&ba|0);e:do if(ka){var ua=la|ba;Se[vi+4>>2]=ua,Se[oa>>2]=$r,Se[i+6]=oa,Se[i+3]=S,Se[i+2]=S}else{if(31==(0|aa))var ca=0;else var ca=25-(aa>>>1)|0;for(var ca,ha=Vr<<ca,da=Se[oa>>2];;){var da,ha;if((Se[da+4>>2]&-8|0)==(0|Vr)){var wa=da+8|0,pa=Me[wa>>2],Ea=Me[vi+16>>2],Aa=da>>>0<Ea>>>0;do if(!Aa){if(pa>>>0<Ea>>>0)break;Se[pa+12>>2]=$r,Se[wa>>2]=$r,Se[i+2]=pa,Se[i+3]=da,Se[i+6]=0;break e}while(0);throw Ka(),\"Reached an unreachable!\"}var ga=(ha>>>31<<2)+da+16|0,ya=Me[ga>>2];if(0==(0|ya)){if(ga>>>0>=Me[vi+16>>2]>>>0){Se[ga>>2]=$r,Se[i+6]=da,Se[i+3]=S,Se[i+2]=S;break e}throw Ka(),\"Reached an unreachable!\"}var ha=ha<<1,da=ya}}while(0);var ma=Se[vi+32>>2]-1|0;if(Se[vi+32>>2]=ma,0!=(0|ma))break r;ta();break r}while(0);throw Ka(),\"Reached an unreachable!\"}while(0)}function ta(){var r=Se[vi+452>>2],a=0==(0|r);r:do if(!a)for(var e=r;;){var e,i=Se[e+8>>2];if(0==(0|i))break r;var e=i}while(0);Se[vi+32>>2]=-1}function fa(r,a){if(0==(0|r))var e=Jr(a),i=e;else var v=la(r,a),i=v;var i;return i}function _a(r,a){var e,i=r>>>0<9;do if(i)var v=Jr(a),t=v;else{var f=r>>>0<16?16:r,_=0==(f-1&f|0);r:do if(_)var s=f;else{if(f>>>0<=16){var s=16;break}for(var n=16;;){var n,o=n<<1;if(o>>>0>=f>>>0){var s=o;break r}var n=o}}while(0);var s;if((-64-s|0)>>>0>a>>>0){if(a>>>0<11)var l=16;else var l=a+11&-8;var l,b=Jr(l+(s+12)|0);if(0==(0|b)){var t=0;break}var k=b-8|0;if(0==((b>>>0)%(s>>>0)|0))var u=k,c=0;else{var h=b+(s-1)&-s,d=h-8|0,w=k;if((d-w|0)>>>0>15)var p=d;else var p=h+(s-8)|0;var p,E=p-w|0,e=(b-4|0)>>2,A=Se[e],g=(A&-8)-E|0;if(0==(3&A|0)){var y=Se[k>>2]+E|0;Se[p>>2]=y,Se[p+4>>2]=g;var u=p,c=0}else{var m=p+4|0,S=g|1&Se[m>>2]|2;Se[m>>2]=S;var M=g+(p+4)|0,C=1|Se[M>>2];Se[M>>2]=C;var R=E|1&Se[e]|2;Se[e]=R;var T=b+(E-4)|0,O=1|Se[T>>2];Se[T>>2]=O;var u=p,c=b}}var c,u,N=u+4|0,I=Me[N>>2],P=0==(3&I|0);do if(P)var D=0;else{var L=I&-8;if(L>>>0<=(l+16|0)>>>0){var D=0;break}var F=L-l|0;Se[N>>2]=l|1&I|2,Se[u+(4|l)>>2]=3|F;var X=u+(4|L)|0,j=1|Se[X>>2];Se[X>>2]=j;var D=l+(u+8)|0}while(0);var D;0!=(0|c)&&va(c),0!=(0|D)&&va(D);var t=u+8|0}else{var U=Je();Se[U>>2]=12;var t=0}}while(0);var t;return t}function sa(r,a,e,i){var v,t;0==(0|Se[ti>>2])&&ba();var f=0==(0|i),_=0==(0|r);do{if(f){if(_){var s=Jr(0),n=s;t=30;break}var o=r<<2;if(o>>>0<11){var l=0,b=16;t=9;break}var l=0,b=o+11&-8;t=9;break}if(_){var n=i;t=30;break}var l=i,b=0;t=9;break}while(0);do if(9==t){var b,l,k=0==(1&e|0);r:do if(k){if(_){var u=0,c=0;break}for(var h=0,d=0;;){var d,h,w=Me[a+(d<<2)>>2];if(w>>>0<11)var p=16;else var p=w+11&-8;var p,E=p+h|0,A=d+1|0;if((0|A)==(0|r)){var u=0,c=E;break r}var h=E,d=A}}else{var g=Me[a>>2];if(g>>>0<11)var y=16;else var y=g+11&-8;var y,u=y,c=y*r|0}while(0);var c,u,m=Jr(b-4+c|0);if(0==(0|m)){var n=0;break}var S=m-8|0,M=Se[m-4>>2]&-8;if(0!=(2&e|0)){var C=-4-b+M|0;Fa(m,0,C,1)}if(0==(0|l)){var R=m+c|0,T=M-c|3;Se[m+(c-4)>>2]=T;var O=R,v=O>>2,N=c}else var O=l,v=O>>2,N=M;var N,O;Se[v]=m;var I=r-1|0,P=0==(0|I);r:do if(P)var D=S,L=N;else if(0==(0|u))for(var F=S,X=N,j=0;;){var j,X,F,U=Me[a+(j<<2)>>2];if(U>>>0<11)var x=16;else var x=U+11&-8;var x,z=X-x|0;Se[F+4>>2]=3|x;var V=F+x|0,B=j+1|0;if(Se[(B<<2>>2)+v]=x+(F+8)|0,(0|B)==(0|I)){var D=V,L=z;break r}var F=V,X=z,j=B}else for(var H=3|u,K=u+8|0,Y=S,G=N,W=0;;){var W,G,Y,Z=G-u|0;Se[Y+4>>2]=H;var Q=Y+u|0,q=W+1|0;if(Se[(q<<2>>2)+v]=Y+K|0,(0|q)==(0|I)){var D=Q,L=Z;break r}var Y=Q,G=Z,W=q}while(0);var L,D;Se[D+4>>2]=3|L;var n=O}while(0);var n;return n}function na(r){var a=r>>2;0==(0|Se[ti>>2])&&ba();var e=Me[vi+24>>2];if(0==(0|e))var i=0,v=0,t=0,f=0,_=0,s=0,n=0;else{for(var o=Me[vi+12>>2],l=o+40|0,b=vi+444|0,k=l,u=l,c=1;;){var c,u,k,b,h=Me[b>>2],d=h+8|0;if(0==(7&d|0))var w=0;else var w=7&-d;for(var w,p=b+4|0,E=h+w|0,A=c,g=u,y=k;;){var y,g,A,E;if(E>>>0<h>>>0)break;if(E>>>0>=(h+Se[p>>2]|0)>>>0|(0|E)==(0|e))break;var m=Se[E+4>>2];if(7==(0|m))break;var S=m&-8,M=S+y|0;if(1==(3&m|0))var C=A+1|0,R=S+g|0;else var C=A,R=g;var R,C,E=E+S|0,A=C,g=R,y=M}var T=Me[b+8>>2];if(0==(0|T))break;var b=T,k=y,u=g,c=A}var O=Se[vi+432>>2],i=y,v=A,t=o,f=g,_=O-y|0,s=Se[vi+436>>2],n=O-g|0}var n,s,_,f,t,v,i;Se[a]=i,Se[a+1]=v,Se[a+2]=0,Se[a+3]=0,Se[a+4]=_,Se[a+5]=s,Se[a+6]=0,Se[a+7]=n,Se[a+8]=f,Se[a+9]=t}function oa(){0==(0|Se[ti>>2])&&ba();var r=Me[vi+24>>2],a=0==(0|r);r:do if(a)var e=0,i=0,v=0;else for(var t=Se[vi+436>>2],f=Me[vi+432>>2],_=vi+444|0,s=f-40-Se[vi+12>>2]|0;;){var s,_,n=Me[_>>2],o=n+8|0;if(0==(7&o|0))var l=0;else var l=7&-o;for(var l,b=_+4|0,k=n+l|0,u=s;;){var u,k;if(k>>>0<n>>>0)break;if(k>>>0>=(n+Se[b>>2]|0)>>>0|(0|k)==(0|r))break;var c=Se[k+4>>2];if(7==(0|c))break;var h=c&-8,d=1==(3&c|0)?h:0,w=u-d|0,k=k+h|0,u=w}var p=Me[_+8>>2];if(0==(0|p)){var e=t,i=f,v=u;break r}var _=p,s=u}while(0);var v,i,e,E=Se[Se[qe>>2]+12>>2],A=(Qa(E,0|He.__str339,(ne=Oe,Oe+=4,Se[ne>>2]=e,ne)),Se[Se[qe>>2]+12>>2]),g=(Qa(A,0|He.__str1340,(ne=Oe,Oe+=4,Se[ne>>2]=i,ne)),Se[Se[qe>>2]+12>>2]);Qa(g,0|He.__str2341,(ne=Oe,Oe+=4,Se[ne>>2]=v,ne))}function la(r,a){var e,i,v,t=a>>>0>4294967231;r:do{if(!t){var f=r-8|0,_=f,i=(r-4|0)>>2,s=Me[i],n=s&-8,o=n-8|0,l=r+o|0,b=f>>>0<Me[vi+16>>2]>>>0;do if(!b){var k=3&s;if(!(1!=(0|k)&(0|o)>-8))break;var e=(r+(n-4)|0)>>2;if(0==(1&Se[e]|0))break;if(a>>>0<11)var u=16;else var u=a+11&-8;var u,c=0==(0|k);do{if(c){var h=ka(_,u),d=0,w=h;v=17;break}if(n>>>0<u>>>0){if((0|l)!=(0|Se[vi+24>>2])){v=21;break}var p=Se[vi+12>>2]+n|0;if(p>>>0<=u>>>0){v=21;break}var E=p-u|0,A=r+(u-8)|0;Se[i]=u|1&s|2;var g=1|E;Se[r+(u-4)>>2]=g,Se[vi+24>>2]=A,Se[vi+12>>2]=E;var d=0,w=_;v=17;break}var y=n-u|0;if(y>>>0<=15){var d=0,w=_;v=17;break}Se[i]=u|1&s|2,Se[r+(u-4)>>2]=3|y;var m=1|Se[e];Se[e]=m;var d=r+u|0,w=_;v=17;break}while(0);do if(17==v){var w,d;if(0==(0|w))break;0!=(0|d)&&va(d);var S=w+8|0;break r}while(0);var M=Jr(a);if(0==(0|M)){var S=0;break r}var C=0==(3&Se[i]|0)?8:4,R=n-C|0,T=R>>>0<a>>>0?R:a;Pa(M,r,T,1),va(r);var S=M;break r}while(0);throw Ka(),\"Reached an unreachable!\"}var O=Je();Se[O>>2]=12;var S=0}while(0);var S;return S}function ba(){if(0==(0|Se[ti>>2])){var r=qa(8);if(0!=(r-1&r|0))throw Ka(),\"Reached an unreachable!\";Se[ti+8>>2]=r,Se[ti+4>>2]=r,Se[ti+12>>2]=-1,Se[ti+16>>2]=2097152,Se[ti+20>>2]=0,Se[vi+440>>2]=0;var a=$a(0);Se[ti>>2]=a&-16^1431655768}}function ka(r,a){var e=Se[r+4>>2]&-8,i=a>>>0<256;do if(i)var v=0;else{if(e>>>0>=(a+4|0)>>>0&&(e-a|0)>>>0<=Se[ti+8>>2]<<1>>>0){var v=r;break}var v=0}while(0);var v;return v}function ua(r){for(var a,e=vi+444|0,a=e>>2;;){var e,i=Me[a];if(i>>>0<=r>>>0&&(i+Se[a+1]|0)>>>0>r>>>0){var v=e;break}var t=Me[a+2];if(0==(0|t)){var v=0;break}var e=t,a=e>>2}var v;return v}function ca(r,a){var e=r,i=r+8|0;if(0==(7&i|0))var v=0;else var v=7&-i;var v,t=a-v|0;Se[vi+24>>2]=e+v|0,Se[vi+12>>2]=t,Se[v+(e+4)>>2]=1|t,Se[a+(e+4)>>2]=40;var f=Se[ti+16>>2];Se[vi+28>>2]=f}function ha(){for(var r=0;;){var r,a=r<<1,e=(a<<2)+vi+40|0;Se[vi+(a+3<<2)+40>>2]=e,Se[vi+(a+2<<2)+40>>2]=e;var i=r+1|0;if(32==(0|i))break;var r=i}}function da(r,a,e){var i,v,t,f,_=a>>2,s=r>>2,n=r+8|0;if(0==(7&n|0))var o=0;else var o=7&-n;var o,l=a+8|0;if(0==(7&l|0))var b=0,t=b>>2;else var b=7&-l,t=b>>2;var b,k=a+b|0,u=k,c=o+e|0,v=c>>2,h=r+c|0,d=h,w=k-(r+o)-e|0;Se[(o+4>>2)+s]=3|e;var p=(0|u)==(0|Se[vi+24>>2]);r:do if(p){var E=Se[vi+12>>2]+w|0;Se[vi+12>>2]=E,Se[vi+24>>2]=d;var A=1|E;Se[v+(s+1)]=A}else if((0|u)==(0|Se[vi+20>>2])){var g=Se[vi+8>>2]+w|0;Se[vi+8>>2]=g,Se[vi+20>>2]=d;var y=1|g;Se[v+(s+1)]=y;var m=r+g+c|0;Se[m>>2]=g}else{var S=Me[t+(_+1)];if(1==(3&S|0)){var M=S&-8,C=S>>>3,R=S>>>0<256;a:do if(R){var T=Me[((8|b)>>2)+_],O=Me[t+(_+3)];if((0|T)!=(0|O)){var N=((S>>>2&1073741822)<<2)+vi+40|0,I=(0|T)==(0|N);do{if(!I){if(T>>>0<Me[vi+16>>2]>>>0){f=18;break}f=15;break}f=15}while(0);do if(15==f){if((0|O)!=(0|N)&&O>>>0<Me[vi+16>>2]>>>0)break;Se[T+12>>2]=O,Se[O+8>>2]=T;break a}while(0);throw Ka(),\"Reached an unreachable!\"}var P=Se[vi>>2]&(1<<C^-1);Se[vi>>2]=P}else{var D=k,L=Me[((24|b)>>2)+_],F=Me[t+(_+3)],X=(0|F)==(0|D);do if(X){var j=16|b,U=j+(a+4)|0,x=Se[U>>2];if(0==(0|x)){var z=a+j|0,V=Se[z>>2];if(0==(0|V)){var B=0,i=B>>2;break}var H=z,K=V}else{var H=U,K=x;f=25}for(;;){var K,H,Y=K+20|0,G=Se[Y>>2];if(0==(0|G)){var W=K+16|0,Z=Me[W>>2];if(0==(0|Z))break;var H=W,K=Z}else var H=Y,K=G}if(H>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[H>>2]=0;var B=K,i=B>>2}else{var Q=Me[((8|b)>>2)+_];if(Q>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[Q+12>>2]=F,Se[F+8>>2]=Q;var B=F,i=B>>2}while(0);var B;if(0==(0|L))break;var q=b+(a+28)|0,$=(Se[q>>2]<<2)+vi+304|0,J=(0|D)==(0|Se[$>>2]);do{if(J){if(Se[$>>2]=B,0!=(0|B))break;var rr=Se[vi+4>>2]&(1<<Se[q>>2]^-1);Se[vi+4>>2]=rr;break a}if(L>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";var ar=L+16|0;if((0|Se[ar>>2])==(0|D)?Se[ar>>2]=B:Se[L+20>>2]=B,0==(0|B))break a}while(0);if(B>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[i+6]=L;var er=16|b,ir=Me[(er>>2)+_];if(0!=(0|ir)){if(ir>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[i+4]=ir,Se[ir+24>>2]=B}var vr=Me[(er+4>>2)+_];if(0==(0|vr))break;if(vr>>>0<Me[vi+16>>2]>>>0)throw Ka(),\"Reached an unreachable!\";Se[i+5]=vr,Se[vr+24>>2]=B}while(0);var tr=a+(M|b)|0,fr=M+w|0}else var tr=u,fr=w;var fr,tr,_r=tr+4|0,sr=Se[_r>>2]&-2;if(Se[_r>>2]=sr,Se[v+(s+1)]=1|fr,Se[(fr>>2)+s+v]=fr,fr>>>0<256){var nr=fr>>>2&1073741822,or=(nr<<2)+vi+40|0,lr=Me[vi>>2],br=1<<(fr>>>3),kr=0==(lr&br|0);do{if(!kr){var ur=(nr+2<<2)+vi+40|0,cr=Me[ur>>2];if(cr>>>0>=Me[vi+16>>2]>>>0){var hr=cr,dr=ur;break}throw Ka(),\"Reached an unreachable!\"}Se[vi>>2]=lr|br;var hr=or,dr=(nr+2<<2)+vi+40|0}while(0);var dr,hr;Se[dr>>2]=d,Se[hr+12>>2]=d,Se[v+(s+2)]=hr,Se[v+(s+3)]=or}else{var wr=h,pr=fr>>>8,Er=0==(0|pr);do if(Er)var Ar=0;else{if(fr>>>0>16777215){var Ar=31;break}var gr=(pr+1048320|0)>>>16&8,yr=pr<<gr,mr=(yr+520192|0)>>>16&4,Sr=yr<<mr,Mr=(Sr+245760|0)>>>16&2,Cr=14-(mr|gr|Mr)+(Sr<<Mr>>>15)|0,Ar=fr>>>((Cr+7|0)>>>0)&1|Cr<<1}while(0);var Ar,Rr=(Ar<<2)+vi+304|0;Se[v+(s+7)]=Ar;var Tr=c+(r+16)|0;Se[v+(s+5)]=0,Se[Tr>>2]=0;var Or=Se[vi+4>>2],Nr=1<<Ar;if(0==(Or&Nr|0)){var Ir=Or|Nr;Se[vi+4>>2]=Ir,Se[Rr>>2]=wr,Se[v+(s+6)]=Rr,Se[v+(s+3)]=wr,Se[v+(s+2)]=wr}else{if(31==(0|Ar))var Pr=0;else var Pr=25-(Ar>>>1)|0;for(var Pr,Dr=fr<<Pr,Lr=Se[Rr>>2];;){var Lr,Dr;if((Se[Lr+4>>2]&-8|0)==(0|fr)){var Fr=Lr+8|0,Xr=Me[Fr>>2],jr=Me[vi+16>>2],Ur=Lr>>>0<jr>>>0;do if(!Ur){if(Xr>>>0<jr>>>0)break;Se[Xr+12>>2]=wr,Se[Fr>>2]=wr,Se[v+(s+2)]=Xr,Se[v+(s+3)]=Lr,Se[v+(s+6)]=0;break r}while(0);throw Ka(),\"Reached an unreachable!\"}var xr=(Dr>>>31<<2)+Lr+16|0,zr=Me[xr>>2];if(0==(0|zr)){if(xr>>>0>=Me[vi+16>>2]>>>0){Se[xr>>2]=wr,Se[v+(s+6)]=Lr,Se[v+(s+3)]=wr,Se[v+(s+2)]=wr;break r}throw Ka(),\"Reached an unreachable!\"}var Dr=Dr<<1,Lr=zr}}}}while(0);return r+(8|o)|0}function wa(r){return 0|He.__str3342}function pa(r){return 0|He.__str14343}function Ea(r){Se[r>>2]=si+8|0}function Aa(r){0!=(0|r)&&va(r)}function ga(r){ya(r);var a=r;Aa(a)}function ya(r){var a=0|r;Ye(a)}function ma(r){var a=0|r;Ea(a),Se[r>>2]=ni+8|0}function Sa(r){var a=0|r;ya(a);var e=r;Aa(e)}function Ma(r,a){var e,i,v=Me[vi+24>>2],i=v>>2,t=v,f=ua(t),_=Se[f>>2],s=Se[f+4>>2],n=_+s|0,o=_+(s-39)|0;if(0==(7&o|0))var l=0;else var l=7&-o;var l,b=_+(s-47)+l|0,k=b>>>0<(v+16|0)>>>0?t:b,u=k+8|0,e=u>>2,c=u,h=r,d=a-40|0;ca(h,d);var w=k+4|0;Se[w>>2]=27,Se[e]=Se[vi+444>>2],Se[e+1]=Se[vi+448>>2],Se[e+2]=Se[vi+452>>2],Se[e+3]=Se[vi+456>>2],Se[vi+444>>2]=r,Se[vi+448>>2]=a,Se[vi+456>>2]=0,Se[vi+452>>2]=c;var p=k+28|0;Se[p>>2]=7;var E=(k+32|0)>>>0<n>>>0;r:do if(E)for(var A=p;;){var A,g=A+4|0;if(Se[g>>2]=7,(A+8|0)>>>0>=n>>>0)break r;var A=g}while(0);var y=(0|k)==(0|t);r:do if(!y){var m=k-v|0,S=t+m|0,M=m+(t+4)|0,C=Se[M>>2]&-2;Se[M>>2]=C;var R=1|m;Se[i+1]=R;var T=S;if(Se[T>>2]=m,m>>>0<256){var O=m>>>2&1073741822,N=(O<<2)+vi+40|0,I=Me[vi>>2],P=1<<(m>>>3),D=0==(I&P|0);do{if(!D){var L=(O+2<<2)+vi+40|0,F=Me[L>>2];if(F>>>0>=Me[vi+16>>2]>>>0){var X=F,j=L;break}throw Ka(),\"Reached an unreachable!\"}var U=I|P;Se[vi>>2]=U;var X=N,j=(O+2<<2)+vi+40|0}while(0);var j,X;Se[j>>2]=v,Se[X+12>>2]=v,Se[i+2]=X,Se[i+3]=N}else{var x=v,z=m>>>8,V=0==(0|z);do if(V)var B=0;else{if(m>>>0>16777215){var B=31;break}var H=(z+1048320|0)>>>16&8,K=z<<H,Y=(K+520192|0)>>>16&4,G=K<<Y,W=(G+245760|0)>>>16&2,Z=14-(Y|H|W)+(G<<W>>>15)|0,B=m>>>((Z+7|0)>>>0)&1|Z<<1}while(0);var B,Q=(B<<2)+vi+304|0;Se[i+7]=B,Se[i+5]=0,Se[i+4]=0;var q=Se[vi+4>>2],$=1<<B;if(0==(q&$|0)){var J=q|$;Se[vi+4>>2]=J,Se[Q>>2]=x,Se[i+6]=Q,Se[i+3]=v,Se[i+2]=v}else{if(31==(0|B))var rr=0;else var rr=25-(B>>>1)|0;for(var rr,ar=m<<rr,er=Se[Q>>2];;){var er,ar;if((Se[er+4>>2]&-8|0)==(0|m)){var ir=er+8|0,vr=Me[ir>>2],tr=Me[vi+16>>2],fr=er>>>0<tr>>>0;do if(!fr){if(vr>>>0<tr>>>0)break;Se[vr+12>>2]=x,Se[ir>>2]=x,Se[i+2]=vr,Se[i+3]=er,Se[i+6]=0;break r}while(0);throw Ka(),\"Reached an unreachable!\"}var _r=(ar>>>31<<2)+er+16|0,sr=Me[_r>>2];if(0==(0|sr)){if(_r>>>0>=Me[vi+16>>2]>>>0){Se[_r>>2]=x,Se[i+6]=er,Se[i+3]=v,Se[i+2]=v;break r}throw Ka(),\"Reached an unreachable!\"}var ar=ar<<1,er=sr}}}}while(0)}function Ca(r){return d(r)}function Ra(r,a){var e=0;do Ae[r+e]=Ae[a+e],e++;while(0!=Ae[a+e-1]);return r}function Ta(){var r=Ta;return r.LLVM_SAVEDSTACKS||(r.LLVM_SAVEDSTACKS=[]),r.LLVM_SAVEDSTACKS.push(le.stackSave()),r.LLVM_SAVEDSTACKS.length-1}function Oa(r){var a=Ta,e=a.LLVM_SAVEDSTACKS[r];a.LLVM_SAVEDSTACKS.splice(r,1),le.stackRestore(e)}function Na(r,a,e){for(var i=0;i<e;){var v=Ae[r+i],t=Ae[a+i];if(v==t&&0==v)return 0;if(0==v)return-1;if(0==t)return 1;if(v!=t)return v>t?1:-1;i++}return 0}function Ia(r,a){var e=Ca(r),i=0;do Ae[r+e+i]=Ae[a+i],i++;while(0!=Ae[a+i-1]);return r}function Pa(r,a,e,i){if(e>=20&&a%2==r%2)if(a%4==r%4){for(var v=a+e;a%4;)Ae[r++]=Ae[a++];for(var t=a>>2,f=r>>2,_=v>>2;t<_;)Se[f++]=Se[t++];for(a=t<<2,r=f<<2;a<v;)Ae[r++]=Ae[a++]}else{var v=a+e;a%2&&(Ae[r++]=Ae[a++]);for(var s=a>>1,n=r>>1,o=v>>1;s<o;)ye[n++]=ye[s++];a=s<<1,r=n<<1,a<v&&(Ae[r++]=Ae[a++])}else for(;e--;)Ae[r++]=Ae[a++]}function Da(r,a){return Na(r,a,Le)}function La(r,a,e){for(var i=0;i<e;i++){var v=Ae[r+i],t=Ae[a+i];if(v!=t)return v>t?1:-1}return 0}function Fa(r,a,e,i){if(e>=20){for(var v=r+e;r%4;)Ae[r++]=a;a<0&&(a+=256);for(var t=r>>2,f=v>>2,_=a|a<<8|a<<16|a<<24;t<f;)Se[t++]=_;for(r=t<<2;r<v;)Ae[r++]=a}else for(;e--;)Ae[r++]=a}function Xa(r,a,e,i){throw\"Assertion failed: \"+s(i)+\", at: \"+[s(r),a,s(e)]}function ja(r){var a=d(r),e=Jr(a+1);return Pa(e,r,a,1),Ae[e+a]=0,e}function Ua(r,a){function e(r){var e;return\"double\"===r?(xe[0]=Se[a+_>>2],xe[1]=Se[a+_+4>>2],e=ze[0]):\"i64\"==r?e=[Se[a+_>>2],Se[a+_+4>>2]]:(r=\"i32\",e=Se[a+_>>2]),_+=le.getNativeFieldSize(r),e}for(var i,v,t,f=r,_=0,s=[];;){var n=f;if(i=Ae[f],0===i)break;if(v=Ae[f+1],i==\"%\".charCodeAt(0)){var o=!1,l=!1,b=!1,k=!1;r:for(;;){switch(v){case\"+\".charCodeAt(0):o=!0;break;case\"-\".charCodeAt(0):l=!0;break;case\"#\".charCodeAt(0):b=!0;break;case\"0\".charCodeAt(0):if(k)break r;k=!0;break;default:break r}f++,v=Ae[f+1]}var u=0;if(v==\"*\".charCodeAt(0))u=e(\"i32\"),f++,v=Ae[f+1];else for(;v>=\"0\".charCodeAt(0)&&v<=\"9\".charCodeAt(0);)u=10*u+(v-\"0\".charCodeAt(0)),f++,v=Ae[f+1];var c=!1;if(v==\".\".charCodeAt(0)){var h=0;if(c=!0,f++,v=Ae[f+1],v==\"*\".charCodeAt(0))h=e(\"i32\"),f++;else for(;;){var d=Ae[f+1];if(d<\"0\".charCodeAt(0)||d>\"9\".charCodeAt(0))break;h=10*h+(d-\"0\".charCodeAt(0)),f++}v=Ae[f+1]}else var h=6;var E;switch(String.fromCharCode(v)){case\"h\":var A=Ae[f+2];A==\"h\".charCodeAt(0)?(f++,E=1):E=2;break;case\"l\":var A=Ae[f+2];A==\"l\".charCodeAt(0)?(f++,E=8):E=4;break;case\"L\":case\"q\":case\"j\":E=8;break;case\"z\":case\"t\":case\"I\":E=4;break;default:E=null}if(E&&f++,v=Ae[f+1],[\"d\",\"i\",\"u\",\"o\",\"x\",\"X\",\"p\"].indexOf(String.fromCharCode(v))!=-1){var m=v==\"d\".charCodeAt(0)||v==\"i\".charCodeAt(0);E=E||4;var t=e(\"i\"+8*E);if(8==E&&(t=le.makeBigInt(t[0],t[1],v==\"u\".charCodeAt(0))),E<=4){var S=Math.pow(256,E)-1;t=(m?y:g)(t&S,8*E)}var M,C=Math.abs(t),R=\"\";if(v==\"d\".charCodeAt(0)||v==\"i\".charCodeAt(0))M=y(t,8*E,1).toString(10);else if(v==\"u\".charCodeAt(0))M=g(t,8*E,1).toString(10),t=Math.abs(t);else if(v==\"o\".charCodeAt(0))M=(b?\"0\":\"\")+C.toString(8);else if(v==\"x\".charCodeAt(0)||v==\"X\".charCodeAt(0)){if(R=b?\"0x\":\"\",t<0){t=-t,M=(C-1).toString(16);for(var T=[],O=0;O<M.length;O++)T.push((15-parseInt(M[O],16)).toString(16));for(M=T.join(\"\");M.length<2*E;)M=\"f\"+M}else M=C.toString(16);v==\"X\".charCodeAt(0)&&(R=R.toUpperCase(),M=M.toUpperCase())}else v==\"p\".charCodeAt(0)&&(0===C?M=\"(nil)\":(R=\"0x\",M=C.toString(16)));if(c)for(;M.length<h;)M=\"0\"+M;for(o&&(R=t<0?\"-\"+R:\"+\"+R);R.length+M.length<u;)l?M+=\" \":k?M=\"0\"+M:R=\" \"+R;M=R+M,M.split(\"\").forEach(function(r){s.push(r.charCodeAt(0))})}else if([\"f\",\"F\",\"e\",\"E\",\"g\",\"G\"].indexOf(String.fromCharCode(v))!=-1){var M,t=e(\"double\");if(isNaN(t))M=\"nan\",k=!1;else if(isFinite(t)){var N=!1,I=Math.min(h,20);if(v==\"g\".charCodeAt(0)||v==\"G\".charCodeAt(0)){N=!0,h=h||1;var P=parseInt(t.toExponential(I).split(\"e\")[1],10);h>P&&P>=-4?(v=(v==\"g\".charCodeAt(0)?\"f\":\"F\").charCodeAt(0),h-=P+1):(v=(v==\"g\".charCodeAt(0)?\"e\":\"E\").charCodeAt(0),h--),I=Math.min(h,20)}v==\"e\".charCodeAt(0)||v==\"E\".charCodeAt(0)?(M=t.toExponential(I),/[eE][-+]\\\\d$/.test(M)&&(M=M.slice(0,-1)+\"0\"+M.slice(-1))):v!=\"f\".charCodeAt(0)&&v!=\"F\".charCodeAt(0)||(M=t.toFixed(I));var D=M.split(\"e\");if(N&&!b)for(;D[0].length>1&&D[0].indexOf(\".\")!=-1&&(\"0\"==D[0].slice(-1)||\".\"==D[0].slice(-1));)D[0]=D[0].slice(0,-1);else for(b&&M.indexOf(\".\")==-1&&(D[0]+=\".\");h>I++;)D[0]+=\"0\";M=D[0]+(D.length>1?\"e\"+D[1]:\"\"),v==\"E\".charCodeAt(0)&&(M=M.toUpperCase()),o&&t>=0&&(M=\"+\"+M)}else M=(t<0?\"-\":\"\")+\"inf\",k=!1;for(;M.length<u;)l?M+=\" \":M=!k||\"-\"!=M[0]&&\"+\"!=M[0]?(k?\"0\":\" \")+M:M[0]+\"0\"+M.slice(1);v<\"a\".charCodeAt(0)&&(M=M.toUpperCase()),M.split(\"\").forEach(function(r){s.push(r.charCodeAt(0))})}else if(v==\"s\".charCodeAt(0)){var L,F=e(\"i8*\");if(F?(L=w(F),c&&L.length>h&&(L=L.slice(0,h))):L=p(\"(null)\",!0),!l)for(;L.length<u--;)s.push(\" \".charCodeAt(0));if(s=s.concat(L),l)for(;L.length<u--;)s.push(\" \".charCodeAt(0))}else if(v==\"c\".charCodeAt(0)){for(l&&s.push(e(\"i8\"));--u>0;)s.push(\" \".charCodeAt(0));l||s.push(e(\"i8\"))}else if(v==\"n\".charCodeAt(0)){var X=e(\"i32*\");Se[X>>2]=s.length}else if(v==\"%\".charCodeAt(0))s.push(i);else for(var O=n;O<f+2;O++)s.push(Ae[O]);f+=2}else s.push(i),f+=1}return s}function xa(r,a,e,i){for(var v=Ua(e,i),t=void 0===a?v.length:Math.min(v.length,a-1),f=0;f<t;f++)Ae[r+f]=v[f];return Ae[r+f]=0,v.length}function za(r,a,e){return xa(r,void 0,a,e)}function Va(r){return r in{32:0,9:0,10:0,11:0,12:0,13:0}}function Ba(r){return r>=\"0\".charCodeAt(0)&&r<=\"9\".charCodeAt(0)}function Ha(r){for(var a;(a=Ae[r])&&Va(a);)r++;if(!a||!Ba(a))return 0;for(var e=r;(a=Ae[e])&&Ba(a);)e++;return Math.floor(Number(s(r).substr(0,e-r)))}function Ka(r){throw ke=!0,\"ABORT: \"+r+\", at \"+(new Error).stack}function Ya(r){return Ya.ret||(Ya.ret=_([0],\"i32\",we)),Se[Ya.ret>>2]=r,r}function Ga(r,a,e,i){var v=$e.streams[r];if(!v||v.object.isDevice)return Ya(Ge.EBADF),-1;if(v.isWrite){if(v.object.isFolder)return Ya(Ge.EISDIR),-1;if(e<0||i<0)return Ya(Ge.EINVAL),-1;for(var t=v.object.contents;t.length<i;)t.push(0);for(var f=0;f<e;f++)t[i+f]=ge[a+f];return v.object.timestamp=Date.now(),f}return Ya(Ge.EACCES),-1}function Wa(r,a,e){var i=$e.streams[r];if(i){if(i.isWrite){if(e<0)return Ya(Ge.EINVAL),-1;if(i.object.isDevice){if(i.object.output){for(var v=0;v<e;v++)try{i.object.output(Ae[a+v])}catch(r){return Ya(Ge.EIO),-1}return i.object.timestamp=Date.now(),v}return Ya(Ge.ENXIO),-1}var t=Ga(r,a,e,i.position);return t!=-1&&(i.position+=t),t}return Ya(Ge.EACCES),-1}return Ya(Ge.EBADF),-1}function Za(r,a,e,i){var v=e*a;if(0==v)return 0;var t=Wa(i,r,v);return t==-1?($e.streams[i]&&($e.streams[i].error=!0),-1):Math.floor(t/a)}function Qa(r,a,e){var i=Ua(a,e),v=le.stackSave(),t=Za(_(i,\"i8\",de),1,i.length,r);return le.stackRestore(v),t}function qa(r){switch(r){case 8:return Pe;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1e3;case 106:return 700;case 52:return 256;case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4}return Ya(Ge.EINVAL),-1}function $a(r){var a=Math.floor(Date.now()/1e3);return r&&(Se[r>>2]=a),a}function Ja(){return Ya.ret}function re(r){var a=re;a.called||(Ie=o(Ie),a.called=!0);var e=Ie;return 0!=r&&le.staticAlloc(r),e}function ae(){return Se[ae.buf>>2]}function ee(r){r=r||Module.arguments,k();var a=null;return Module._main&&(a=Module.callMain(r),Module.noExitRuntime||u()),a}var ie=[],ve=\"object\"==typeof process,te=\"object\"==typeof window,fe=\"function\"==typeof importScripts,_e=!te&&!ve&&!fe;if(ve){print=function(r){process.stdout.write(r+\"\\\\n\")},printErr=function(r){process.stderr.write(r+\"\\\\n\")};var se=require(\"fs\");read=function(r){var a=se.readFileSync(r).toString();return a||\"/\"==r[0]||(r=__dirname.split(\"/\").slice(0,-1).join(\"/\")+\"/src/\"+r,a=se.readFileSync(r).toString()),a},load=function(a){r(read(a))},ie=process.argv.slice(2)}else if(_e)this.read||(this.read=function(r){snarf(r)}),\"undefined\"!=typeof scriptArgs?ie=scriptArgs:\"undefined\"!=typeof arguments&&(ie=arguments);else if(te)this.print=printErr=function(r){console.log(r)},this.read=function(r){var a=new XMLHttpRequest;return a.open(\"GET\",r,!1),a.send(null),a.responseText},this.arguments&&(ie=arguments);else{if(!fe)throw\"Unknown runtime environment. Where are we?\";this.load=importScripts}\"undefined\"==typeof load&&\"undefined\"!=typeof read&&(this.load=function(a){r(read(a))}),\"undefined\"==typeof printErr&&(this.printErr=function(){}),\"undefined\"==typeof print&&(this.print=printErr);try{this.Module=Module}catch(r){this.Module=Module={}}Module.arguments||(Module.arguments=ie),Module.print&&(print=Module.print);var ne,oe,le={stackSave:function(){return Oe},stackRestore:function(r){Oe=r},forceAlign:function(r,a){if(a=a||4,1==a)return r;if(isNumber(r)&&isNumber(a))return Math.ceil(r/a)*a;if(isNumber(a)&&isPowerOfTwo(a)){var e=log2(a);return\"((((\"+r+\")+\"+(a-1)+\")>>\"+e+\")<<\"+e+\")\"}return\"Math.ceil((\"+r+\")/\"+a+\")*\"+a},isNumberType:function(r){return r in le.INT_TYPES||r in le.FLOAT_TYPES},isPointerType:function(r){return\"*\"==r[r.length-1]},isStructType:function(r){return!isPointerType(r)&&(!!/^\\\\[\\\\d+\\\\ x\\\\ (.*)\\\\]/.test(r)||(!!/<?{ [^}]* }>?/.test(r)||\"%\"==r[0]))},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{float:0,double:0},bitshift64:function(r,e,i,v){var t=Math.pow(2,v)-1;if(v<32)switch(i){case\"shl\":return[r<<v,e<<v|(r&t<<32-v)>>>32-v];case\"ashr\":return[(r>>>v|(e&t)<<32-v)>>0>>>0,e>>v>>>0];case\"lshr\":return[(r>>>v|(e&t)<<32-v)>>>0,e>>>v]}else if(32==v)switch(i){case\"shl\":return[0,r];case\"ashr\":return[e,(0|e)<0?t:0];case\"lshr\":return[e,0]}else switch(i){case\"shl\":return[0,r<<v-32];case\"ashr\":return[e>>v-32>>>0,(0|e)<0?t:0];case\"lshr\":return[e>>>v-32,0]}a(\"unknown bitshift64 op: \"+[value,i,v])},or64:function(r,a){var e=0|r|(0|a),i=4294967296*(Math.round(r/4294967296)|Math.round(a/4294967296));return e+i},and64:function(r,a){var e=(0|r)&(0|a),i=4294967296*(Math.round(r/4294967296)&Math.round(a/4294967296));return e+i},xor64:function(r,a){var e=(0|r)^(0|a),i=4294967296*(Math.round(r/4294967296)^Math.round(a/4294967296));return e+i},getNativeTypeSize:function(r,a){if(1==le.QUANTUM_SIZE)return 1;var i={\"%i1\":1,\"%i8\":1,\"%i16\":2,\"%i32\":4,\"%i64\":8,\"%float\":4,\"%double\":8}[\"%\"+r];if(!i)if(\"*\"==r[r.length-1])i=le.QUANTUM_SIZE;else if(\"i\"==r[0]){var v=parseInt(r.substr(1));e(v%8==0),i=v/8}return i},getNativeFieldSize:function(r){return Math.max(le.getNativeTypeSize(r),le.QUANTUM_SIZE)},dedup:function(r,a){var e={};return a?r.filter(function(r){return!e[r[a]]&&(e[r[a]]=!0,!0)}):r.filter(function(r){return!e[r]&&(e[r]=!0,!0)})},set:function(){for(var r=\"object\"==typeof arguments[0]?arguments[0]:arguments,a={},e=0;e<r.length;e++)a[r[e]]=0;return a},calculateStructAlignment:function(r){r.flatSize=0,r.alignSize=0;var a=[],e=-1;return r.flatIndexes=r.fields.map(function(i){var v,t;if(le.isNumberType(i)||le.isPointerType(i))v=le.getNativeTypeSize(i),t=v;else{if(!le.isStructType(i))throw\"Unclear type in struct: \"+i+\", in \"+r.name_+\" :: \"+dump(Types.types[r.name_]);v=Types.types[i].flatSize,t=Types.types[i].alignSize}t=r.packed?1:Math.min(t,le.QUANTUM_SIZE),r.alignSize=Math.max(r.alignSize,t);var f=le.alignMemory(r.flatSize,t);return r.flatSize=f+v,e>=0&&a.push(f-e),e=f,f}),r.flatSize=le.alignMemory(r.flatSize,r.alignSize),0==a.length?r.flatFactor=r.flatSize:1==le.dedup(a).length&&(r.flatFactor=a[0]),r.needsFlattening=1!=r.flatFactor,r.flatIndexes},generateStructInfo:function(r,a,i){var v,t;if(a){if(i=i||0,v=(\"undefined\"==typeof Types?le.typeInfo:Types.types)[a],!v)return null;e(v.fields.length===r.length,\"Number of named fields must match the type for \"+a),t=v.flatIndexes}else{var v={fields:r.map(function(r){return r[0]})};t=le.calculateStructAlignment(v)}var f={__size__:v.flatSize};return a?r.forEach(function(r,a){if(\"string\"==typeof r)f[r]=t[a]+i;else{var e;for(var _ in r)e=_;f[e]=le.generateStructInfo(r[e],v.fields[a],t[a])}}):r.forEach(function(r,a){f[r[1]]=t[a]}),f},stackAlloc:function(r){var a=Oe;return Oe+=r,Oe=Oe+3>>2<<2,a},staticAlloc:function(r){var a=Ie;return Ie+=r,Ie=Ie+3>>2<<2,Ie>=Le&&l(),a},alignMemory:function(r,a){var e=r=Math.ceil(r/(a?a:4))*(a?a:4);return e},makeBigInt:function(r,a,e){var i=e?(r>>>0)+4294967296*(a>>>0):(r>>>0)+4294967296*(0|a);return i},QUANTUM_SIZE:4,__dummy__:0},be={MAX_ALLOWED:0,corrections:0,sigs:{},note:function(r,e,i){e||(this.corrections++,this.corrections>=this.MAX_ALLOWED&&a(\"\\\\n\\\\nToo many corrections!\"))},print:function(){}},ke=!1,ue=0,ce=this;Module.ccall=i,Module.setValue=t,Module.getValue=f;var he=0,de=1,we=2;Module.ALLOC_NORMAL=he,Module.ALLOC_STACK=de,Module.ALLOC_STATIC=we,Module.allocate=_,Module.Pointer_stringify=s,Module.Array_stringify=n;var pe,Ee,Ae,ge,ye,me,Se,Me,Ce,Re,Te,Oe,Ne,Ie,Pe=4096,De=Module.TOTAL_STACK||5242880,Le=Module.TOTAL_MEMORY||10485760;Module.FAST_MEMORY||2097152;e(!!(Int32Array&&Float64Array&&new Int32Array(1).subarray&&new Int32Array(1).set),\"Cannot fallback to non-typed array case: Code is too specialized\");var Fe=new ArrayBuffer(Le);Ae=new Int8Array(Fe),ye=new Int16Array(Fe),Se=new Int32Array(Fe),ge=new Uint8Array(Fe),me=new Uint16Array(Fe),Me=new Uint32Array(Fe),Ce=new Float32Array(Fe),Re=new Float64Array(Fe),Se[0]=255,e(255===ge[0]&&0===ge[3],\"Typed arrays 2 must be run on a little-endian system\");var Xe=p(\"(null)\");Ie=Xe.length;for(var je=0;je<Xe.length;je++)Ae[je]=Xe[je];Module.HEAP=Ee,Module.HEAP8=Ae,Module.HEAP16=ye,Module.HEAP32=Se,Module.HEAPU8=ge,Module.HEAPU16=me,Module.HEAPU32=Me,Module.HEAPF32=Ce,Module.HEAPF64=Re,Te=Oe=le.alignMemory(Ie),Ne=Te+De;var Ue=le.alignMemory(Ne,8),xe=(Ae.subarray(Ue),Se.subarray(Ue>>2)),ze=(Ce.subarray(Ue>>2),Re.subarray(Ue>>3));Ne=Ue+8,Ie=o(Ne);var Ve=[],Be=[];Module.Array_copy=c,Module.TypedArray_copy=h,Module.String_len=d,Module.String_copy=w,Module.intArrayFromString=p,Module.intArrayToString=E,Module.writeStringToMemory=A;var He=[],Ke=0;O.X=1,N.X=1,V.X=1,H.X=1,G.X=1,W.X=1,q.X=1,$.X=1,rr.X=1,ar.X=1,er.X=1,vr.X=1,nr.X=1,or.X=1,kr.X=1,hr.X=1,Ar.X=1,Sr.X=1,Tr.X=1,Ir.X=1,Pr.X=1,Dr.X=1,Lr.X=1,Fr.X=1,Xr.X=1,zr.X=1,Vr.X=1,Br.X=1,Gr.X=1,$r.X=1,Module._malloc=Jr,Jr.X=1,ra.X=1,aa.X=1,ea.X=1,ia.X=1,Module._free=va,va.X=1,_a.X=1,sa.X=1,na.X=1,oa.X=1,la.X=1,da.X=1,Ma.X=1;var Ye,Ge={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18},We=0,Ze=0,Qe=0,qe=0,$e={currentPath:\"/\",nextInode:2,streams:[null],ignorePermissions:!0,absolutePath:function(r,a){if(\"string\"!=typeof r)return null;void 0===a&&(a=$e.currentPath),r&&\"/\"==r[0]&&(a=\"\");for(var e=a+\"/\"+r,i=e.split(\"/\").reverse(),v=[\"\"];i.length;){var t=i.pop();\"\"==t||\".\"==t||(\"..\"==t?v.length>1&&v.pop():v.push(t))}return 1==v.length?\"/\":v.join(\"/\")},analyzePath:function(r,a,e){var i={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};if(r=$e.absolutePath(r),\"/\"==r)i.isRoot=!0,i.exists=i.parentExists=!0,i.name=\"/\",i.path=i.parentPath=\"/\",i.object=i.parentObject=$e.root;else if(null!==r){e=e||0,r=r.slice(1).split(\"/\");for(var v=$e.root,t=[\"\"];r.length;){1==r.length&&v.isFolder&&(i.parentExists=!0,i.parentPath=1==t.length?\"/\":t.join(\"/\"),i.parentObject=v,i.name=r[0]);var f=r.shift();if(!v.isFolder){i.error=Ge.ENOTDIR;break}if(!v.read){i.error=Ge.EACCES;break}if(!v.contents.hasOwnProperty(f)){i.error=Ge.ENOENT;break}if(v=v.contents[f],v.link&&(!a||0!=r.length)){if(e>40){i.error=Ge.ELOOP;break}var _=$e.absolutePath(v.link,t.join(\"/\"));return $e.analyzePath([_].concat(r).join(\"/\"),a,e+1)}t.push(f),0==r.length&&(i.exists=!0,i.path=t.join(\"/\"),i.object=v)}return i}return i},findObject:function(r,a){$e.ensureRoot();var e=$e.analyzePath(r,a);return e.exists?e.object:(Ya(e.error),null)},createObject:function(r,a,e,i,v){if(r||(r=\"/\"),\"string\"==typeof r&&(r=$e.findObject(r)),!r)throw Ya(Ge.EACCES),new Error(\"Parent path must exist.\");if(!r.isFolder)throw Ya(Ge.ENOTDIR),\nnew Error(\"Parent must be a folder.\");if(!r.write&&!$e.ignorePermissions)throw Ya(Ge.EACCES),new Error(\"Parent folder must be writeable.\");if(!a||\".\"==a||\"..\"==a)throw Ya(Ge.ENOENT),new Error(\"Name must not be empty.\");if(r.contents.hasOwnProperty(a))throw Ya(Ge.EEXIST),new Error(\"Can't overwrite object.\");r.contents[a]={read:void 0===i||i,write:void 0!==v&&v,timestamp:Date.now(),inodeNumber:$e.nextInode++};for(var t in e)e.hasOwnProperty(t)&&(r.contents[a][t]=e[t]);return r.contents[a]},createFolder:function(r,a,e,i){var v={isFolder:!0,isDevice:!1,contents:{}};return $e.createObject(r,a,v,e,i)},createPath:function(r,a,e,i){var v=$e.findObject(r);if(null===v)throw new Error(\"Invalid parent.\");for(a=a.split(\"/\").reverse();a.length;){var t=a.pop();t&&(v.contents.hasOwnProperty(t)||$e.createFolder(v,t,e,i),v=v.contents[t])}return v},createFile:function(r,a,e,i,v){return e.isFolder=!1,$e.createObject(r,a,e,i,v)},createDataFile:function(r,a,e,i,v){if(\"string\"==typeof e){for(var t=new Array(e.length),f=0,_=e.length;f<_;++f)t[f]=e.charCodeAt(f);e=t}var s={isDevice:!1,contents:e};return $e.createFile(r,a,s,i,v)},createLazyFile:function(r,a,e,i,v){var t={isDevice:!1,url:e};return $e.createFile(r,a,t,i,v)},createLink:function(r,a,e,i,v){var t={isDevice:!1,link:e};return $e.createFile(r,a,t,i,v)},createDevice:function(r,a,e,i){if(!e&&!i)throw new Error(\"A device must have at least one callback defined.\");var v={isDevice:!0,input:e,output:i};return $e.createFile(r,a,v,Boolean(e),Boolean(i))},forceLoadFile:function(r){if(r.isDevice||r.isFolder||r.link||r.contents)return!0;var a=!0;if(\"undefined\"!=typeof XMLHttpRequest)e(\"Cannot do synchronous binary XHRs in modern browsers. Use --embed-file or --preload-file in emcc\");else{if(\"undefined\"==typeof read)throw new Error(\"Cannot load without read() or XMLHttpRequest.\");try{r.contents=p(read(r.url),!0)}catch(r){a=!1}}return a||Ya(Ge.EIO),a},ensureRoot:function(){$e.root||($e.root={read:!0,write:!0,isFolder:!0,isDevice:!1,timestamp:Date.now(),inodeNumber:1,contents:{}})},init:function(r,a,i){function v(r){null===r||r===\"\\\\n\".charCodeAt(0)?(a.printer(a.buffer.join(\"\")),a.buffer=[]):a.buffer.push(String.fromCharCode(r))}e(!$e.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\"),$e.init.initialized=!0,$e.ensureRoot(),r=r||Module.stdin,a=a||Module.stdout,i=i||Module.stderr;var t=!0,f=!0,s=!0;r||(t=!1,r=function(){if(!r.cache||!r.cache.length){var a;\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?a=window.prompt(\"Input: \"):\"function\"==typeof readline&&(a=readline()),a||(a=\"\"),r.cache=p(a+\"\\\\n\",!0)}return r.cache.shift()}),a||(f=!1,a=v),a.printer||(a.printer=print),a.buffer||(a.buffer=[]),i||(s=!1,i=v),i.printer||(i.printer=print),i.buffer||(i.buffer=[]),$e.createFolder(\"/\",\"tmp\",!0,!0);var n=$e.createFolder(\"/\",\"dev\",!0,!0),o=$e.createDevice(n,\"stdin\",r),l=$e.createDevice(n,\"stdout\",null,a),b=$e.createDevice(n,\"stderr\",null,i);$e.createDevice(n,\"tty\",r,a),$e.streams[1]={path:\"/dev/stdin\",object:o,position:0,isRead:!0,isWrite:!1,isAppend:!1,isTerminal:!t,error:!1,eof:!1,ungotten:[]},$e.streams[2]={path:\"/dev/stdout\",object:l,position:0,isRead:!1,isWrite:!0,isAppend:!1,isTerminal:!f,error:!1,eof:!1,ungotten:[]},$e.streams[3]={path:\"/dev/stderr\",object:b,position:0,isRead:!1,isWrite:!0,isAppend:!1,isTerminal:!s,error:!1,eof:!1,ungotten:[]},We=_([1],\"void*\",we),Ze=_([2],\"void*\",we),Qe=_([3],\"void*\",we),$e.createPath(\"/\",\"dev/shm/tmp\",!0,!0),$e.streams[We]=$e.streams[1],$e.streams[Ze]=$e.streams[2],$e.streams[Qe]=$e.streams[3],qe=_([_([0,0,0,0,We,0,0,0,Ze,0,0,0,Qe,0,0,0],\"void*\",we)],\"void*\",we)},quit:function(){$e.init.initialized&&($e.streams[2]&&$e.streams[2].object.output.buffer.length>0&&$e.streams[2].object.output(\"\\\\n\".charCodeAt(0)),$e.streams[3]&&$e.streams[3].object.output.buffer.length>0&&$e.streams[3].object.output(\"\\\\n\".charCodeAt(0)))}},Je=Ja;Ve.unshift({func:function(){$e.ignorePermissions=!1,$e.init.initialized||$e.init()}}),Be.push({func:function(){$e.quit()}}),Ya(0),ae.buf=_(12,\"void*\",we),Module.callMain=function(r){function a(){for(var r=0;r<3;r++)i.push(0)}var e=r.length+1,i=[_(p(\"/bin/this.program\"),\"i8\",we)];a();for(var v=0;v<e-1;v+=1)i.push(_(p(r[v]),\"i8\",we)),a();return i.push(0),i=_(i,\"i32\",we),_main(e,i,0)};var ri,ai,ei,ii,vi,ti,qe,fi,_i,si,ni,oi,li,bi,ki,ui,ci,hi,di,wi;if(He.__str=_([97,78,0],\"i8\",we),He.__str1=_([38,61,0],\"i8\",we),He.__str2=_([97,83,0],\"i8\",we),He.__str3=_([61,0],\"i8\",we),He.__str4=_([97,97,0],\"i8\",we),He.__str5=_([38,38,0],\"i8\",we),He.__str6=_([97,100,0],\"i8\",we),He.__str7=_([38,0],\"i8\",we),He.__str8=_([97,110,0],\"i8\",we),He.__str9=_([99,108,0],\"i8\",we),He.__str10=_([40,41,0],\"i8\",we),He.__str11=_([99,109,0],\"i8\",we),He.__str12=_([44,0],\"i8\",we),He.__str13=_([99,111,0],\"i8\",we),He.__str14=_([126,0],\"i8\",we),He.__str15=_([100,86,0],\"i8\",we),He.__str16=_([47,61,0],\"i8\",we),He.__str17=_([100,97,0],\"i8\",we),He.__str18=_([100,101,108,101,116,101,91,93,0],\"i8\",we),He.__str19=_([100,101,0],\"i8\",we),He.__str20=_([42,0],\"i8\",we),He.__str21=_([100,108,0],\"i8\",we),He.__str22=_([100,101,108,101,116,101,0],\"i8\",we),He.__str23=_([100,118,0],\"i8\",we),He.__str24=_([47,0],\"i8\",we),He.__str25=_([101,79,0],\"i8\",we),He.__str26=_([94,61,0],\"i8\",we),He.__str27=_([101,111,0],\"i8\",we),He.__str28=_([94,0],\"i8\",we),He.__str29=_([101,113,0],\"i8\",we),He.__str30=_([61,61,0],\"i8\",we),He.__str31=_([103,101,0],\"i8\",we),He.__str32=_([62,61,0],\"i8\",we),He.__str33=_([103,116,0],\"i8\",we),He.__str34=_([62,0],\"i8\",we),He.__str35=_([105,120,0],\"i8\",we),He.__str36=_([91,93,0],\"i8\",we),He.__str37=_([108,83,0],\"i8\",we),He.__str38=_([60,60,61,0],\"i8\",we),He.__str39=_([108,101,0],\"i8\",we),He.__str40=_([60,61,0],\"i8\",we),He.__str41=_([108,115,0],\"i8\",we),He.__str42=_([60,60,0],\"i8\",we),He.__str43=_([108,116,0],\"i8\",we),He.__str44=_([60,0],\"i8\",we),He.__str45=_([109,73,0],\"i8\",we),He.__str46=_([45,61,0],\"i8\",we),He.__str47=_([109,76,0],\"i8\",we),He.__str48=_([42,61,0],\"i8\",we),He.__str49=_([109,105,0],\"i8\",we),He.__str51=_([109,108,0],\"i8\",we),He.__str52=_([109,109,0],\"i8\",we),He.__str53=_([45,45,0],\"i8\",we),He.__str54=_([110,97,0],\"i8\",we),He.__str55=_([110,101,119,91,93,0],\"i8\",we),He.__str56=_([110,101,0],\"i8\",we),He.__str57=_([33,61,0],\"i8\",we),He.__str58=_([110,103,0],\"i8\",we),He.__str59=_([110,116,0],\"i8\",we),He.__str60=_([33,0],\"i8\",we),He.__str61=_([110,119,0],\"i8\",we),He.__str62=_([110,101,119,0],\"i8\",we),He.__str63=_([111,82,0],\"i8\",we),He.__str64=_([124,61,0],\"i8\",we),He.__str65=_([111,111,0],\"i8\",we),He.__str66=_([124,124,0],\"i8\",we),He.__str67=_([111,114,0],\"i8\",we),He.__str68=_([124,0],\"i8\",we),He.__str69=_([112,76,0],\"i8\",we),He.__str70=_([43,61,0],\"i8\",we),He.__str71=_([112,108,0],\"i8\",we),He.__str72=_([43,0],\"i8\",we),He.__str73=_([112,109,0],\"i8\",we),He.__str74=_([45,62,42,0],\"i8\",we),He.__str75=_([112,112,0],\"i8\",we),He.__str76=_([43,43,0],\"i8\",we),He.__str77=_([112,115,0],\"i8\",we),He.__str78=_([112,116,0],\"i8\",we),He.__str79=_([45,62,0],\"i8\",we),He.__str80=_([113,117,0],\"i8\",we),He.__str81=_([63,0],\"i8\",we),He.__str82=_([114,77,0],\"i8\",we),He.__str83=_([37,61,0],\"i8\",we),He.__str84=_([114,83,0],\"i8\",we),He.__str85=_([62,62,61,0],\"i8\",we),He.__str86=_([114,109,0],\"i8\",we),He.__str87=_([37,0],\"i8\",we),He.__str88=_([114,115,0],\"i8\",we),He.__str89=_([62,62,0],\"i8\",we),He.__str90=_([115,116,0],\"i8\",we),He.__str91=_([115,105,122,101,111,102,32,0],\"i8\",we),He.__str92=_([115,122,0],\"i8\",we),ri=_([0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0],we),He.__str95=_([98,111,111,108,101,97,110,0],\"i8\",we),He.__str97=_([98,121,116,101,0],\"i8\",we),He.__str101=_([95,95,102,108,111,97,116,49,50,56,0],\"i8\",we),He.__str105=_([117,110,115,105,103,110,101,100,0],\"i8\",we),He.__str114=_([108,111,110,103,32,108,111,110,103,0],\"i8\",we),He.__str115=_([117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0],\"i8\",we),ai=_([0,0,0,0,11,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,11,0,0,0,8,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,8,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,13,0,0,0,4,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,9,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,18,0,0,0,6,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0],[\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0],we),He.__str117=_([95,71,76,79,66,65,76,95,0],\"i8\",we),He.__str118=_([103,108,111,98,97,108,32,99,111,110,115,116,114,117,99,116,111,114,115,32,107,101,121,101,100,32,116,111,32,0],\"i8\",we),He.__str119=_([103,108,111,98,97,108,32,100,101,115,116,114,117,99,116,111,114,115,32,107,101,121,101,100,32,116,111,32,0],\"i8\",we),He.__str120=_([58,58,0],\"i8\",we),He.__str121=_([118,116,97,98,108,101,32,102,111,114,32,0],\"i8\",we),He.__str122=_([86,84,84,32,102,111,114,32,0],\"i8\",we),He.__str123=_([99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0],\"i8\",we),He.__str124=_([45,105,110,45,0],\"i8\",we),He.__str125=_([116,121,112,101,105,110,102,111,32,102,111,114,32,0],\"i8\",we),He.__str126=_([116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0],\"i8\",we),He.__str127=_([116,121,112,101,105,110,102,111,32,102,110,32,102,111,114,32,0],\"i8\",we),He.__str128=_([110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0],\"i8\",we),He.__str129=_([118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0],\"i8\",we),He.__str130=_([99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0],\"i8\",we),He.__str131=_([106,97,118,97,32,67,108,97,115,115,32,102,111,114,32,0],\"i8\",we),He.__str132=_([103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0],\"i8\",we),He.__str133=_([114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0],\"i8\",we),He.__str134=_([104,105,100,100,101,110,32,97,108,105,97,115,32,102,111,114,32,0],\"i8\",we),He.__str135=_([58,58,42,0],\"i8\",we),He.__str136=_([44,32,0],\"i8\",we),He.__str137=_([111,112,101,114,97,116,111,114,0],\"i8\",we),He.__str139=_([41,32,0],\"i8\",we),He.__str140=_([32,40,0],\"i8\",we),He.__str141=_([41,32,58,32,40,0],\"i8\",we),He.__str142=_([117,108,0],\"i8\",we),He.__str143=_([108,108,0],\"i8\",we),He.__str144=_([117,108,108,0],\"i8\",we),He.__str145=_([102,97,108,115,101,0],\"i8\",we),He.__str146=_([116,114,117,101,0],\"i8\",we),He.__str147=_([32,114,101,115,116,114,105,99,116,0],\"i8\",we),He.__str148=_([32,118,111,108,97,116,105,108,101,0],\"i8\",we),He.__str149=_([32,99,111,110,115,116,0],\"i8\",we),He.__str150=_([99,111,109,112,108,101,120,32,0],\"i8\",we),He.__str151=_([105,109,97,103,105,110,97,114,121,32,0],\"i8\",we),ei=_([116,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,9,0,0,0,98,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,12,0,0,0,115,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,12,0,0,0,105,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,13,0,0,0,111,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,13,0,0,0,100,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,14,0,0,0],[\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i8\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0],we),He.__str152=_([115,116,100,0],\"i8\",we),He.__str153=_([115,116,100,58,58,97,108,108,111,99,97,116,111,114,0],\"i8\",we),He.__str154=_([97,108,108,111,99,97,116,111,114,0],\"i8\",we),He.__str155=_([115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0],\"i8\",we),He.__str156=_([98,97,115,105,99,95,115,116,114,105,110,103,0],\"i8\",we),He.__str157=_([115,116,100,58,58,115,116,114,105,110,103,0],\"i8\",we),He.__str158=_([115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0],\"i8\",we),He.__str159=_([115,116,100,58,58,105,115,116,114,101,97,109,0],\"i8\",we),He.__str160=_([115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],\"i8\",we),He.__str161=_([98,97,115,105,99,95,105,115,116,114,101,97,109,0],\"i8\",we),He.__str162=_([115,116,100,58,58,111,115,116,114,101,97,109,0],\"i8\",we),He.__str163=_([115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],\"i8\",we),He.__str164=_([98,97,115,105,99,95,111,115,116,114,101,97,109,0],\"i8\",we),He.__str165=_([115,116,100,58,58,105,111,115,116,114,101,97,109,0],\"i8\",we),He.__str166=_([115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],\"i8\",we),He.__str167=_([98,97,115,105,99,95,105,111,115,116,114,101,97,109,0],\"i8\",we),He.__str168=_([115,116,114,105,110,103,32,108,105,116,101,114,97,108,0],\"i8\",we),He.__str169=_([40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0],\"i8\",we),He._symbol_demangle_dashed_null=_([45,45,110,117,108,108,45,45,0],\"i8\",we),He.__str170=_([37,115,37,115,0],\"i8\",we),He.__str1171=_([111,112,101,114,97,116,111,114,32,110,101,119,0],\"i8\",we),He.__str2172=_([111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0],\"i8\",we),He.__str3173=_([111,112,101,114,97,116,111,114,61,0],\"i8\",we),He.__str4174=_([111,112,101,114,97,116,111,114,62,62,0],\"i8\",we),He.__str5175=_([111,112,101,114,97,116,111,114,60,60,0],\"i8\",we),He.__str6176=_([111,112,101,114,97,116,111,114,33,0],\"i8\",we),He.__str7177=_([111,112,101,114,97,116,111,114,61,61,0],\"i8\",we),He.__str8178=_([111,112,101,114,97,116,111,114,33,61,0],\"i8\",we),He.__str9179=_([111,112,101,114,97,116,111,114,91,93,0],\"i8\",we),He.__str10180=_([111,112,101,114,97,116,111,114,32,0],\"i8\",we),He.__str11181=_([111,112,101,114,97,116,111,114,45,62,0],\"i8\",we),He.__str12182=_([111,112,101,114,97,116,111,114,42,0],\"i8\",we),He.__str13183=_([111,112,101,114,97,116,111,114,43,43,0],\"i8\",we),He.__str14184=_([111,112,101,114,97,116,111,114,45,45,0],\"i8\",we),He.__str15185=_([111,112,101,114,97,116,111,114,45,0],\"i8\",we),He.__str16186=_([111,112,101,114,97,116,111,114,43,0],\"i8\",we),He.__str17187=_([111,112,101,114,97,116,111,114,38,0],\"i8\",we),He.__str18188=_([111,112,101,114,97,116,111,114,45,62,42,0],\"i8\",we),He.__str19189=_([111,112,101,114,97,116,111,114,47,0],\"i8\",we),He.__str20190=_([111,112,101,114,97,116,111,114,37,0],\"i8\",we),He.__str21191=_([111,112,101,114,97,116,111,114,60,0],\"i8\",we),He.__str22192=_([111,112,101,114,97,116,111,114,60,61,0],\"i8\",we),He.__str23193=_([111,112,101,114,97,116,111,114,62,0],\"i8\",we),He.__str24194=_([111,112,101,114,97,116,111,114,62,61,0],\"i8\",we),He.__str25195=_([111,112,101,114,97,116,111,114,44,0],\"i8\",we),He.__str26196=_([111,112,101,114,97,116,111,114,40,41,0],\"i8\",we),He.__str27197=_([111,112,101,114,97,116,111,114,126,0],\"i8\",we),He.__str28198=_([111,112,101,114,97,116,111,114,94,0],\"i8\",we),He.__str29199=_([111,112,101,114,97,116,111,114,124,0],\"i8\",we),He.__str30200=_([111,112,101,114,97,116,111,114,38,38,0],\"i8\",we),He.__str31201=_([111,112,101,114,97,116,111,114,124,124,0],\"i8\",we),He.__str32202=_([111,112,101,114,97,116,111,114,42,61,0],\"i8\",we),He.__str33203=_([111,112,101,114,97,116,111,114,43,61,0],\"i8\",we),He.__str34204=_([111,112,101,114,97,116,111,114,45,61,0],\"i8\",we),He.__str35205=_([111,112,101,114,97,116,111,114,47,61,0],\"i8\",we),He.__str36206=_([111,112,101,114,97,116,111,114,37,61,0],\"i8\",we),He.__str37207=_([111,112,101,114,97,116,111,114,62,62,61,0],\"i8\",we),He.__str38208=_([111,112,101,114,97,116,111,114,60,60,61,0],\"i8\",we),He.__str39209=_([111,112,101,114,97,116,111,114,38,61,0],\"i8\",we),He.__str40210=_([111,112,101,114,97,116,111,114,124,61,0],\"i8\",we),He.__str41211=_([111,112,101,114,97,116,111,114,94,61,0],\"i8\",we),He.__str42212=_([96,118,102,116,97,98,108,101,39,0],\"i8\",we),He.__str43213=_([96,118,98,116,97,98,108,101,39,0],\"i8\",we),He.__str44214=_([96,118,99,97,108,108,39,0],\"i8\",we),He.__str45215=_([96,116,121,112,101,111,102,39,0],\"i8\",we),He.__str46216=_([96,108,111,99,97,108,32,115,116,97,116,105,99,32,103,117,97,114,100,39,0],\"i8\",we),He.__str47217=_([96,115,116,114,105,110,103,39,0],\"i8\",we),He.__str48218=_([96,118,98,97,115,101,32,100,101,115,116,114,117,99,116,111,114,39,0],\"i8\",we),He.__str49219=_([96,118,101,99,116,111,114,32,100,101,108,101,116,105,110,103,32,100,101,115,116,114,117,99,116,111,114,39,0],\"i8\",we),He.__str50220=_([96,100,101,102,97,117,108,116,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],\"i8\",we),He.__str51221=_([96,115,99,97,108,97,114,32,100,101,108,101,116,105,110,103,32,100,101,115,116,114,117,99,116,111,114,39,0],\"i8\",we),He.__str52222=_([96,118,101,99,116,111,114,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str53223=_([96,118,101,99,116,111,114,32,100,101,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str54224=_([96,118,101,99,116,111,114,32,118,98,97,115,101,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str55225=_([96,118,105,114,116,117,97,108,32,100,105,115,112,108,97,99,101,109,101,110,116,32,109,97,112,39,0],\"i8\",we),He.__str56226=_([96,101,104,32,118,101,99,116,111,114,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str57227=_([96,101,104,32,118,101,99,116,111,114,32,100,101,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str58228=_([96,101,104,32,118,101,99,116,111,114,32,118,98,97,115,101,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],\"i8\",we),He.__str59229=_([96,99,111,112,121,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],\"i8\",we),He.__str60230=_([37,115,37,115,32,96,82,84,84,73,32,84,121,112,101,32,68,101,115,99,114,105,112,116,111,114,39,0],\"i8\",we),He.__str61231=_([96,82,84,84,73,32,66,97,115,101,32,67,108,97,115,115,32,68,101,115,99,114,105,112,116,111,114,32,97,116,32,40,37,115,44,37,115,44,37,115,44,37,115,41,39,0],\"i8\",we),He.__str62232=_([96,82,84,84,73,32,66,97,115,101,32,67,108,97,115,115,32,65,114,114,97,121,39,0],\"i8\",we),He.__str63233=_([96,82,84,84,73,32,67,108,97,115,115,32,72,105,101,114,97,114,99,104,121,32,68,101,115,99,114,105,112,116,111,114,39,0],\"i8\",we),He.__str64234=_([96,82,84,84,73,32,67,111,109,112,108,101,116,101,32,79,98,106,101,99,116,32,76,111,99,97,116,111,114,39,0],\"i8\",we),He.__str65235=_([96,108,111,99,97,108,32,118,102,116,97,98,108,101,39,0],\"i8\",we),He.__str66236=_([96,108,111,99,97,108,32,118,102,116,97,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],\"i8\",we),He.__str67237=_([111,112,101,114,97,116,111,114,32,110,101,119,91,93,0],\"i8\",we),He.__str68238=_([111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0],\"i8\",we),He.__str69239=_([96,112,108,97,99,101,109,101,110,116,32,100,101,108,101,116,101,32,99,108,111,115,117,114,101,39,0],\"i8\",we),He.__str70240=_([96,112,108,97,99,101,109,101,110,116,32,100,101,108,101,116,101,91,93,32,99,108,111,115,117,114,101,39,0],\"i8\",we),He.__str71241=_([126,37,115,0],\"i8\",we),He.__str72242=_([117,110,100,110,97,109,101,46,99,0],\"i8\",we),He.___func___symbol_demangle=_([115,121,109,98,111,108,95,100,101,109,97,110,103,108,101,0],\"i8\",we),He.__str73243=_([115,121,109,45,62,114,101,115,117,108,116,0],\"i8\",we),He.___func___handle_template=_([104,97,110,100,108,101,95,116,101,109,112,108,97,116,101,0],\"i8\",we),He.__str74244=_([42,115,121,109,45,62,99,117,114,114,101,110,116,32,61,61,32,39,36,39,0],\"i8\",we),He.___func___str_array_get_ref=_([115,116,114,95,97,114,114,97,121,95,103,101,116,95,114,101,102,0],\"i8\",we),He.__str75245=_([99,114,101,102,0],\"i8\",we),He.__str76246=_([112,114,105,118,97,116,101,58,32,0],\"i8\",we),He.__str77247=_([112,114,111,116,101,99,116,101,100,58,32,0],\"i8\",we),He.__str78248=_([112,117,98,108,105,99,58,32,0],\"i8\",we),He.__str79249=_([115,116,97,116,105,99,32,0],\"i8\",we),He.__str80250=_([118,105,114,116,117,97,108,32,0],\"i8\",we),He.__str81251=_([91,116,104,117,110,107,93,58,37,115,0],\"i8\",we),He.__str82252=_([37,115,96,97,100,106,117,115,116,111,114,123,37,115,125,39,32,0],\"i8\",we),He.__str83253=_([37,115,32,37,115,0],\"i8\",we),He.__str84254=_([118,111,105,100,0],\"i8\",we),He.__str85255=_([37,115,37,115,37,115,0],\"i8\",we),He.__str86256=_([37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,0],\"i8\",we),He.__str87257=_([32,0],\"i8\",we),He.__str88258=_([100,108,108,95,101,120,112,111,114,116,32,0],\"i8\",we),He.__str89259=_([99,100,101,99,108,0],\"i8\",we),He.__str90260=_([112,97,115,99,97,108,0],\"i8\",we),He.__str91261=_([116,104,105,115,99,97,108,108,0],\"i8\",we),He.__str92262=_([115,116,100,99,97,108,108,0],\"i8\",we),He.__str93263=_([102,97,115,116,99,97,108,108,0],\"i8\",we),He.__str94264=_([99,108,114,99,97,108,108,0],\"i8\",we),He.__str95265=_([95,95,100,108,108,95,101,120,112,111,114,116,32,0],\"i8\",we),He.__str96266=_([95,95,99,100,101,99,108,0],\"i8\",we),He.__str97267=_([95,95,112,97,115,99,97,108,0],\"i8\",we),He.__str98268=_([95,95,116,104,105,115,99,97,108,108,0],\"i8\",we),He.__str99269=_([95,95,115,116,100,99,97,108,108,0],\"i8\",we),He.__str100270=_([95,95,102,97,115,116,99,97,108,108,0],\"i8\",we),He.__str101271=_([95,95,99,108,114,99,97,108,108,0],\"i8\",we),He.__str102272=_([95,95,112,116,114,54,52,0],\"i8\",we),He.__str103273=_([99,111,110,115,116,0],\"i8\",we),He.__str104274=_([118,111,108,97,116,105,108,101,0],\"i8\",we),He.__str105275=_([99,111,110,115,116,32,118,111,108,97,116,105,108,101,0],\"i8\",we),He.___func___get_class_string=_([103,101,116,95,99,108,97,115,115,95,115,116,114,105,110,103,0],\"i8\",we),He.__str106276=_([97,45,62,101,108,116,115,91,105,93,0],\"i8\",we),He.__str107277=_([123,102,111,114,32,96,37,115,39,125,0],\"i8\",we),He.__str108278=_([37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,0],\"i8\",we),He.__str109279=_([96,37,115,39,0],\"i8\",we),He.__str110280=_([46,46,46,0],\"i8\",we),He.__str111281=_([37,99,118,111,105,100,37,99,0],\"i8\",we),He.__str112282=_([37,115,44,37,115,0],\"i8\",we),He.__str113283=_([37,99,37,115,37,115,32,37,99,0],\"i8\",we),He.__str114284=_([37,99,37,115,37,115,37,99,0],\"i8\",we),He.___func___str_array_push=_([115,116,114,95,97,114,114,97,121,95,112,117,115,104,0],\"i8\",we),He.__str115285=_([112,116,114,0],\"i8\",we),He.__str116286=_([97,0],\"i8\",we),He.__str117287=_([97,45,62,101,108,116,115,91,97,45,62,110,117,109,93,0],\"i8\",we),He.__str118288=_([37,115,37,100,0],\"i8\",we),He.__str119289=_([45,0],\"i8\",we),ii=_(1,\"i8\",we),He.___func___demangle_datatype=_([100,101,109,97,110,103,108,101,95,100,97,116,97,116,121,112,101,0],\"i8\",we),He.__str121291=_([99,116,0],\"i8\",we),He.__str122292=_([117,110,105,111,110,32,0],\"i8\",we),He.__str123293=_([115,116,114,117,99,116,32,0],\"i8\",we),He.__str124294=_([99,108,97,115,115,32,0],\"i8\",we),He.__str125295=_([99,111,105,110,116,101,114,102,97,99,101,32,0],\"i8\",we),He.__str126296=_([96,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,45,37,115,39,0],\"i8\",we),He.__str127297=_([37,115,37,115,32,40,37,115,42,0],\"i8\",we),He.__str128298=_([41,37,115,0],\"i8\",we),He.__str129299=_([101,110,117,109,32,37,115,0],\"i8\",we),He.__str130300=_([96,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,37,115,39,0],\"i8\",we),He.__str131301=_([123,37,115,44,37,115,125,0],\"i8\",we),He.__str132302=_([123,37,115,44,37,115,44,37,115,125,0],\"i8\",we),He.__str133303=_([96,110,111,110,45,116,121,112,101,45,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,37,115,39,0],\"i8\",we),He.__str134304=_([32,95,95,112,116,114,54,52,0],\"i8\",we),He.__str135305=_([32,38,37,115,0],\"i8\",we),He.__str136306=_([32,38,37,115,32,118,111,108,97,116,105,108,101,0],\"i8\",we),He.__str137307=_([32,42,37,115,0],\"i8\",we),He.__str138308=_([32,42,37,115,32,99,111,110,115,116,0],\"i8\",we),He.__str139309=_([32,42,37,115,32,118,111,108,97,116,105,108,101,0],\"i8\",we),He.__str140310=_([32,42,37,115,32,99,111,110,115,116,32,118,111,108,97,116,105,108,101,0],\"i8\",we),He.__str141311=_([32,40,37,115,37,115,41,0],\"i8\",we),He.__str142312=_([32,40,37,115,41,0],\"i8\",we),He.__str143313=_([37,115,91,37,115,93,0],\"i8\",we),He.__str144314=_([37,115,32,37,115,37,115,0],\"i8\",we),He.__str145315=_([115,105,103,110,101,100,32,99,104,97,114,0],\"i8\",we),He.__str146316=_([99,104,97,114,0],\"i8\",we),He.__str147317=_([117,110,115,105,103,110,101,100,32,99,104,97,114,0],\"i8\",we),He.__str148318=_([115,104,111,114,116,0],\"i8\",we),He.__str149319=_([117,110,115,105,103,110,101,100,32,115,104,111,114,116,0],\"i8\",we),He.__str150320=_([105,110,116,0],\"i8\",we),He.__str151321=_([117,110,115,105,103,110,101,100,32,105,110,116,0],\"i8\",we),He.__str152322=_([108,111,110,103,0],\"i8\",we),He.__str153323=_([117,110,115,105,103,110,101,100,32,108,111,110,103,0],\"i8\",we),He.__str154324=_([102,108,111,97,116,0],\"i8\",we),He.__str155325=_([100,111,117,98,108,101,0],\"i8\",we),He.__str156326=_([108,111,110,103,32,100,111,117,98,108,101,0],\"i8\",we),He.__str157327=_([95,95,105,110,116,56,0],\"i8\",we),He.__str158328=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,56,0],\"i8\",we),He.__str159329=_([95,95,105,110,116,49,54,0],\"i8\",we),He.__str160330=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,54,0],\"i8\",we),He.__str161331=_([95,95,105,110,116,51,50,0],\"i8\",we),He.__str162332=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,51,50,0],\"i8\",we),He.__str163333=_([95,95,105,110,116,54,52,0],\"i8\",we),He.__str164334=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,54,52,0],\"i8\",we),\nHe.__str165335=_([95,95,105,110,116,49,50,56,0],\"i8\",we),He.__str166336=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0],\"i8\",we),He.__str167337=_([98,111,111,108,0],\"i8\",we),He.__str168338=_([119,99,104,97,114,95,116,0],\"i8\",we),vi=_(468,[\"i32\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0,\"*\",0,0,0,\"i32\",0,0,0],we),ti=_(24,\"i32\",we),He.__str339=_([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0],\"i8\",we),He.__str1340=_([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],\"i8\",we),He.__str2341=_([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],\"i8\",we),fi=_([ue],\"i8\",we),_i=_(1,\"void ()*\",we),si=_([0,0,0,0,0,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0],[\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0],we),_(1,\"void*\",we),He.__str3342=_([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0],\"i8\",we),ni=_([0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,14,0,0,0],[\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0,\"*\",0,0,0],we),_(1,\"void*\",we),He.__str14343=_([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],\"i8\",we),He.__ZTSSt9bad_alloc=_([83,116,57,98,97,100,95,97,108,108,111,99,0],\"i8\",we),bi=_(12,\"*\",we),He.__ZTSSt20bad_array_new_length=_([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],\"i8\",we),ki=_(12,\"*\",we),Se[ri>>2]=0|He.__str,Se[ri+4>>2]=0|He.__str1,Se[ri+16>>2]=0|He.__str2,Se[ri+20>>2]=0|He.__str3,Se[ri+32>>2]=0|He.__str4,Se[ri+36>>2]=0|He.__str5,Se[ri+48>>2]=0|He.__str6,Se[ri+52>>2]=0|He.__str7,Se[ri+64>>2]=0|He.__str8,Se[ri+68>>2]=0|He.__str7,Se[ri+80>>2]=0|He.__str9,Se[ri+84>>2]=0|He.__str10,Se[ri+96>>2]=0|He.__str11,Se[ri+100>>2]=0|He.__str12,Se[ri+112>>2]=0|He.__str13,Se[ri+116>>2]=0|He.__str14,Se[ri+128>>2]=0|He.__str15,Se[ri+132>>2]=0|He.__str16,Se[ri+144>>2]=0|He.__str17,Se[ri+148>>2]=0|He.__str18,Se[ri+160>>2]=0|He.__str19,Se[ri+164>>2]=0|He.__str20,Se[ri+176>>2]=0|He.__str21,Se[ri+180>>2]=0|He.__str22,Se[ri+192>>2]=0|He.__str23,Se[ri+196>>2]=0|He.__str24,Se[ri+208>>2]=0|He.__str25,Se[ri+212>>2]=0|He.__str26,Se[ri+224>>2]=0|He.__str27,Se[ri+228>>2]=0|He.__str28,Se[ri+240>>2]=0|He.__str29,Se[ri+244>>2]=0|He.__str30,Se[ri+256>>2]=0|He.__str31,Se[ri+260>>2]=0|He.__str32,Se[ri+272>>2]=0|He.__str33,Se[ri+276>>2]=0|He.__str34,Se[ri+288>>2]=0|He.__str35,Se[ri+292>>2]=0|He.__str36,Se[ri+304>>2]=0|He.__str37,Se[ri+308>>2]=0|He.__str38,Se[ri+320>>2]=0|He.__str39,Se[ri+324>>2]=0|He.__str40,Se[ri+336>>2]=0|He.__str41,Se[ri+340>>2]=0|He.__str42,Se[ri+352>>2]=0|He.__str43,Se[ri+356>>2]=0|He.__str44,Se[ri+368>>2]=0|He.__str45,Se[ri+372>>2]=0|He.__str46,Se[ri+384>>2]=0|He.__str47,Se[ri+388>>2]=0|He.__str48,Se[ri+400>>2]=0|He.__str49,Se[ri+404>>2]=0|He.__str119289,Se[ri+416>>2]=0|He.__str51,Se[ri+420>>2]=0|He.__str20,Se[ri+432>>2]=0|He.__str52,Se[ri+436>>2]=0|He.__str53,Se[ri+448>>2]=0|He.__str54,Se[ri+452>>2]=0|He.__str55,Se[ri+464>>2]=0|He.__str56,Se[ri+468>>2]=0|He.__str57,Se[ri+480>>2]=0|He.__str58,Se[ri+484>>2]=0|He.__str119289,Se[ri+496>>2]=0|He.__str59,Se[ri+500>>2]=0|He.__str60,Se[ri+512>>2]=0|He.__str61,Se[ri+516>>2]=0|He.__str62,Se[ri+528>>2]=0|He.__str63,Se[ri+532>>2]=0|He.__str64,Se[ri+544>>2]=0|He.__str65,Se[ri+548>>2]=0|He.__str66,Se[ri+560>>2]=0|He.__str67,Se[ri+564>>2]=0|He.__str68,Se[ri+576>>2]=0|He.__str69,Se[ri+580>>2]=0|He.__str70,Se[ri+592>>2]=0|He.__str71,Se[ri+596>>2]=0|He.__str72,Se[ri+608>>2]=0|He.__str73,Se[ri+612>>2]=0|He.__str74,Se[ri+624>>2]=0|He.__str75,Se[ri+628>>2]=0|He.__str76,Se[ri+640>>2]=0|He.__str77,Se[ri+644>>2]=0|He.__str72,Se[ri+656>>2]=0|He.__str78,Se[ri+660>>2]=0|He.__str79,Se[ri+672>>2]=0|He.__str80,Se[ri+676>>2]=0|He.__str81,Se[ri+688>>2]=0|He.__str82,Se[ri+692>>2]=0|He.__str83,Se[ri+704>>2]=0|He.__str84,Se[ri+708>>2]=0|He.__str85,Se[ri+720>>2]=0|He.__str86,Se[ri+724>>2]=0|He.__str87,Se[ri+736>>2]=0|He.__str88,Se[ri+740>>2]=0|He.__str89,Se[ri+752>>2]=0|He.__str90,Se[ri+756>>2]=0|He.__str91,Se[ri+768>>2]=0|He.__str92,Se[ri+772>>2]=0|He.__str91,Se[ai>>2]=0|He.__str145315,Se[ai+8>>2]=0|He.__str145315,Se[ai+20>>2]=0|He.__str167337,Se[ai+28>>2]=0|He.__str95,Se[ai+40>>2]=0|He.__str146316,Se[ai+48>>2]=0|He.__str97,Se[ai+60>>2]=0|He.__str155325,Se[ai+68>>2]=0|He.__str155325,Se[ai+80>>2]=0|He.__str156326,Se[ai+88>>2]=0|He.__str156326,Se[ai+100>>2]=0|He.__str154324,Se[ai+108>>2]=0|He.__str154324,Se[ai+120>>2]=0|He.__str101,Se[ai+128>>2]=0|He.__str101,Se[ai+140>>2]=0|He.__str147317,Se[ai+148>>2]=0|He.__str147317,Se[ai+160>>2]=0|He.__str150320,Se[ai+168>>2]=0|He.__str150320,Se[ai+180>>2]=0|He.__str151321,Se[ai+188>>2]=0|He.__str105,Se[ai+220>>2]=0|He.__str152322,Se[ai+228>>2]=0|He.__str152322,Se[ai+240>>2]=0|He.__str153323,Se[ai+248>>2]=0|He.__str153323,Se[ai+260>>2]=0|He.__str165335,Se[ai+268>>2]=0|He.__str165335,Se[ai+280>>2]=0|He.__str166336,Se[ai+288>>2]=0|He.__str166336,Se[ai+360>>2]=0|He.__str148318,Se[ai+368>>2]=0|He.__str148318,Se[ai+380>>2]=0|He.__str149319,Se[ai+388>>2]=0|He.__str149319,Se[ai+420>>2]=0|He.__str84254,Se[ai+428>>2]=0|He.__str84254,Se[ai+440>>2]=0|He.__str168338,Se[ai+448>>2]=0|He.__str146316,Se[ai+460>>2]=0|He.__str114,Se[ai+468>>2]=0|He.__str152322,Se[ai+480>>2]=0|He.__str115,Se[ai+488>>2]=0|He.__str115,Se[ai+500>>2]=0|He.__str110280,Se[ai+508>>2]=0|He.__str110280,Se[ei+4>>2]=0|He.__str152,Se[ei+12>>2]=0|He.__str152,Se[ei+32>>2]=0|He.__str153,Se[ei+40>>2]=0|He.__str153,Se[ei+48>>2]=0|He.__str154,Se[ei+60>>2]=0|He.__str155,Se[ei+68>>2]=0|He.__str155,Se[ei+76>>2]=0|He.__str156,Se[ei+88>>2]=0|He.__str157,Se[ei+96>>2]=0|He.__str158,Se[ei+104>>2]=0|He.__str156,Se[ei+116>>2]=0|He.__str159,Se[ei+124>>2]=0|He.__str160,Se[ei+132>>2]=0|He.__str161,Se[ei+144>>2]=0|He.__str162,Se[ei+152>>2]=0|He.__str163,Se[ei+160>>2]=0|He.__str164,Se[ei+172>>2]=0|He.__str165,Se[ei+180>>2]=0|He.__str166,Se[ei+188>>2]=0|He.__str167,Se[si+4>>2]=bi,Se[ni+4>>2]=ki,oi=_([2,0,0,0,0],[\"i8*\",0,0,0,0],we),Se[bi>>2]=oi+8|0,Se[bi+4>>2]=0|He.__ZTSSt9bad_alloc,Se[bi+8>>2]=li,Se[ki>>2]=oi+8|0,Se[ki+4>>2]=0|He.__ZTSSt20bad_array_new_length,Se[ki+8>>2]=bi,ui=16,ci=6,hi=18,di=6,wi=6,pe=[0,0,Jr,0,va,0,ya,0,ga,0,wa,0,Sa,0,pa,0,Ea,0,ma,0],Module.FUNCTION_TABLE=pe,Module.run=ee,Module.preRun&&Module.preRun(),0==Ke){ee()}Module.postRun&&Module.postRun(),Module.___cxa_demangle=G;var pi=v(\"__cxa_demangle\",\"string\",[\"string\",\"string\",\"number\",\"number\"]);return function(r){return pi(r,\"\",1,0)}}();\n`\n","import {lastOf, KeyedSet} from './utils'\nimport {ValueFormatter, RawValueFormatter} from './value-formatters'\nconst demangleCppModule = import('./demangle-cpp')\n\n// Force eager loading of the module\ndemangleCppModule.then(() => {})\n\nexport interface FrameInfo {\n  key: string | number\n\n  // Name of the frame. May be a method name, e.g.\n  // \"ActiveRecord##to_hash\"\n  name: string\n\n  // File path of the code corresponding to this\n  // call stack frame.\n  file?: string\n\n  // Line in the given file where this frame occurs\n  line?: number\n\n  // Column in the file\n  col?: number\n}\n\nexport class HasWeights {\n  private selfWeight = 0\n  private totalWeight = 0\n  getSelfWeight() {\n    return this.selfWeight\n  }\n  getTotalWeight() {\n    return this.totalWeight\n  }\n  addToTotalWeight(delta: number) {\n    this.totalWeight += delta\n  }\n  addToSelfWeight(delta: number) {\n    this.selfWeight += delta\n  }\n\n  overwriteWeightWith(other: HasWeights) {\n    this.selfWeight = other.selfWeight\n    this.totalWeight = other.totalWeight\n  }\n}\n\nexport class Frame extends HasWeights {\n  key: string | number\n\n  // Name of the frame. May be a method name, e.g.\n  // \"ActiveRecord##to_hash\"\n  name: string\n\n  // File path of the code corresponding to this\n  // call stack frame.\n  file?: string\n\n  // Line in the given file where this frame occurs\n  line?: number\n\n  // Column in the file\n  col?: number\n\n  private constructor(info: FrameInfo) {\n    super()\n    this.key = info.key\n    this.name = info.name\n    this.file = info.file\n    this.line = info.line\n    this.col = info.col\n  }\n\n  static root = new Frame({\n    key: '(speedscope root)',\n    name: '(speedscope root)',\n  })\n\n  static getOrInsert(set: KeyedSet<Frame>, info: FrameInfo) {\n    return set.getOrInsert(new Frame(info))\n  }\n}\n\nexport class CallTreeNode extends HasWeights {\n  children: CallTreeNode[] = []\n\n  isRoot() {\n    return this.frame === Frame.root\n  }\n\n  constructor(readonly frame: Frame, readonly parent: CallTreeNode | null) {\n    super()\n  }\n}\n\nexport class Profile {\n  protected name: string = ''\n\n  protected totalWeight: number\n\n  protected frames = new KeyedSet<Frame>()\n  protected appendOrderCalltreeRoot = new CallTreeNode(Frame.root, null)\n  protected groupedCalltreeRoot = new CallTreeNode(Frame.root, null)\n\n  // List of references to CallTreeNodes at the top of the\n  // stack at the time of the sample.\n  protected samples: CallTreeNode[] = []\n  protected weights: number[] = []\n\n  protected valueFormatter: ValueFormatter = new RawValueFormatter()\n\n  constructor(totalWeight: number = 0) {\n    this.totalWeight = totalWeight\n  }\n\n  formatValue(v: number) {\n    return this.valueFormatter.format(v)\n  }\n  setValueFormatter(f: ValueFormatter) {\n    this.valueFormatter = f\n  }\n\n  getName() {\n    return this.name\n  }\n  setName(name: string) {\n    this.name = name\n  }\n\n  getTotalWeight() {\n    return this.totalWeight\n  }\n\n  private totalNonIdleWeight: number | null = null\n  getTotalNonIdleWeight() {\n    if (this.totalNonIdleWeight === null) {\n      this.totalNonIdleWeight = this.groupedCalltreeRoot.children.reduce(\n        (n, c) => n + c.getTotalWeight(),\n        0,\n      )\n    }\n    return this.totalNonIdleWeight\n  }\n\n  forEachCallGrouped(\n    openFrame: (node: CallTreeNode, value: number) => void,\n    closeFrame: (node: CallTreeNode, value: number) => void,\n  ) {\n    function visit(node: CallTreeNode, start: number) {\n      if (node.frame !== Frame.root) {\n        openFrame(node, start)\n      }\n\n      let childTime = 0\n\n      const children = [...node.children]\n      children.sort((a, b) => (a.getTotalWeight() > b.getTotalWeight() ? -1 : 1))\n\n      children.forEach(function(child) {\n        visit(child, start + childTime)\n        childTime += child.getTotalWeight()\n      })\n\n      if (node.frame !== Frame.root) {\n        closeFrame(node, start + node.getTotalWeight())\n      }\n    }\n    visit(this.groupedCalltreeRoot, 0)\n  }\n\n  forEachCall(\n    openFrame: (node: CallTreeNode, value: number) => void,\n    closeFrame: (node: CallTreeNode, value: number) => void,\n  ) {\n    let prevStack: CallTreeNode[] = []\n    let value = 0\n\n    let sampleIndex = 0\n    for (let stackTop of this.samples) {\n      // Find lowest common ancestor of the current stack and the previous one\n      let lca: CallTreeNode | null = null\n\n      // This is O(n^2), but n should be relatively small here (stack height),\n      // so hopefully this isn't much of a problem\n      for (\n        lca = stackTop;\n        lca && lca.frame != Frame.root && prevStack.indexOf(lca) === -1;\n        lca = lca.parent\n      ) {}\n\n      // Close frames that are no longer open\n      while (prevStack.length > 0 && lastOf(prevStack) != lca) {\n        const node = prevStack.pop()!\n        closeFrame(node, value)\n      }\n\n      // Open frames that are now becoming open\n      const toOpen: CallTreeNode[] = []\n      for (\n        let node: CallTreeNode | null = stackTop;\n        node && node.frame != Frame.root && node != lca;\n        node = node.parent\n      ) {\n        toOpen.push(node)\n      }\n      toOpen.reverse()\n\n      for (let node of toOpen) {\n        openFrame(node, value)\n      }\n\n      prevStack = prevStack.concat(toOpen)\n      value += this.weights[sampleIndex++]\n    }\n\n    // Close frames that are open at the end of the trace\n    for (let i = prevStack.length - 1; i >= 0; i--) {\n      closeFrame(prevStack[i], value)\n    }\n  }\n\n  forEachFrame(fn: (frame: Frame) => void) {\n    this.frames.forEach(fn)\n  }\n\n  getProfileWithRecursionFlattened(): Profile {\n    const builder = new CallTreeProfileBuilder()\n\n    const stack: (CallTreeNode | null)[] = []\n    const framesInStack = new Set<Frame>()\n\n    function openFrame(node: CallTreeNode, value: number) {\n      if (framesInStack.has(node.frame)) {\n        stack.push(null)\n      } else {\n        framesInStack.add(node.frame)\n        stack.push(node)\n        builder.enterFrame(node.frame, value)\n      }\n    }\n    function closeFrame(node: CallTreeNode, value: number) {\n      const stackTop = stack.pop()\n      if (stackTop) {\n        framesInStack.delete(stackTop.frame)\n        builder.leaveFrame(stackTop.frame, value)\n      }\n    }\n\n    this.forEachCall(openFrame, closeFrame)\n\n    const flattenedProfile = builder.build()\n    flattenedProfile.name = this.name\n    flattenedProfile.valueFormatter = this.valueFormatter\n\n    // When constructing a profile with recursion flattened,\n    // counter-intuitive things can happen to \"self time\" measurements\n    // for functions.\n    // For example, given the following list of stacks w/ weights:\n    //\n    // a 1\n    // a;b;a 1\n    // a;b;a;b;a 1\n    // a;b;a 1\n    //\n    // The resulting profile with recursion flattened out will look like this:\n    //\n    // a 1\n    // a;b 3\n    //\n    // Which is useful to view, but it's counter-intuitive to move self-time\n    // for frames around, since analyzing the self-time of functions is an important\n    // thing to be able to do accurately, and we don't want this to change when recursion\n    // is flattened. To work around that, we'll just copy the weights directly from the\n    // un-flattened profile.\n    this.forEachFrame(f => {\n      flattenedProfile.frames.getOrInsert(f).overwriteWeightWith(f)\n    })\n\n    return flattenedProfile\n  }\n\n  getInvertedProfileForCallersOf(focalFrameInfo: FrameInfo): Profile {\n    const focalFrame = Frame.getOrInsert(this.frames, focalFrameInfo)\n    const builder = new StackListProfileBuilder()\n\n    // TODO(jlfwong): Could construct this at profile\n    // construction time rather than on demand.\n    const nodes: CallTreeNode[] = []\n\n    function visit(node: CallTreeNode) {\n      if (node.frame === focalFrame) {\n        nodes.push(node)\n      } else {\n        for (let child of node.children) {\n          visit(child)\n        }\n      }\n    }\n\n    visit(this.appendOrderCalltreeRoot)\n\n    for (let node of nodes) {\n      const stack: FrameInfo[] = []\n      for (let n: CallTreeNode | null = node; n != null && n.frame !== Frame.root; n = n.parent) {\n        stack.push(n.frame)\n      }\n      builder.appendSample(stack, node.getTotalWeight())\n    }\n\n    const ret = builder.build()\n    ret.name = this.name\n    ret.valueFormatter = this.valueFormatter\n    return ret\n  }\n\n  getProfileForCalleesOf(focalFrameInfo: FrameInfo): Profile {\n    const focalFrame = Frame.getOrInsert(this.frames, focalFrameInfo)\n    const builder = new StackListProfileBuilder()\n\n    function recordSubtree(focalFrameNode: CallTreeNode) {\n      const stack: FrameInfo[] = []\n\n      function visit(node: CallTreeNode) {\n        stack.push(node.frame)\n        builder.appendSample(stack, node.getSelfWeight())\n        for (let child of node.children) {\n          visit(child)\n        }\n        stack.pop()\n      }\n\n      visit(focalFrameNode)\n    }\n\n    function findCalls(node: CallTreeNode) {\n      if (node.frame === focalFrame) {\n        recordSubtree(node)\n      } else {\n        for (let child of node.children) {\n          findCalls(child)\n        }\n      }\n    }\n\n    findCalls(this.appendOrderCalltreeRoot)\n\n    const ret = builder.build()\n    ret.name = this.name\n    ret.valueFormatter = this.valueFormatter\n    return ret\n  }\n\n  // Demangle symbols for readability\n  async demangle() {\n    let demangleCpp: ((name: string) => string) | null = null\n\n    for (let frame of this.frames) {\n      // This function converts a mangled C++ name such as \"__ZNK7Support6ColorFeqERKS0_\"\n      // into a human-readable symbol (in this case \"Support::ColorF::==(Support::ColorF&)\")\n      if (frame.name.startsWith('__Z')) {\n        if (!demangleCpp) {\n          demangleCpp = (await demangleCppModule).demangleCpp\n        }\n        frame.name = demangleCpp(frame.name)\n      }\n    }\n  }\n\n  remapNames(callback: (name: string) => string) {\n    for (let frame of this.frames) {\n      frame.name = callback(frame.name)\n    }\n  }\n}\n\nexport class StackListProfileBuilder extends Profile {\n  _appendSample(stack: FrameInfo[], weight: number, useAppendOrder: boolean) {\n    if (isNaN(weight)) throw new Error('invalid weight')\n    let node = useAppendOrder ? this.appendOrderCalltreeRoot : this.groupedCalltreeRoot\n\n    let framesInStack = new Set<Frame>()\n\n    for (let frameInfo of stack) {\n      const frame = Frame.getOrInsert(this.frames, frameInfo)\n      const last = useAppendOrder\n        ? lastOf(node.children)\n        : node.children.find(c => c.frame === frame)\n      if (last && last.frame == frame) {\n        node = last\n      } else {\n        const parent = node\n        node = new CallTreeNode(frame, node)\n        parent.children.push(node)\n      }\n      node.addToTotalWeight(weight)\n\n      // It's possible for the same frame to occur multiple\n      // times in the same call stack due to either direct\n      // or indirect recursion. We want to avoid counting that\n      // frame multiple times for a single sample, we so just\n      // track all of the unique frames that participated in\n      // this call stack, then add to their weight at the end.\n      framesInStack.add(node.frame)\n    }\n    node.addToSelfWeight(weight)\n\n    if (useAppendOrder) {\n      node.frame.addToSelfWeight(weight)\n\n      for (let frame of framesInStack) {\n        frame.addToTotalWeight(weight)\n      }\n\n      this.samples.push(node)\n      this.weights.push(weight)\n    }\n  }\n\n  appendSample(stack: FrameInfo[], weight: number) {\n    this._appendSample(stack, weight, true)\n    this._appendSample(stack, weight, false)\n  }\n\n  build(): Profile {\n    this.totalWeight = Math.max(this.totalWeight, this.weights.reduce((a, b) => a + b, 0))\n    return this\n  }\n}\n\n// As an alternative API for importing profiles more efficiently, provide a\n// way to open & close frames directly without needing to construct tons of\n// arrays as intermediaries.\nexport class CallTreeProfileBuilder extends Profile {\n  private appendOrderStack: CallTreeNode[] = [this.appendOrderCalltreeRoot]\n  private groupedOrderStack: CallTreeNode[] = [this.groupedCalltreeRoot]\n  private framesInStack = new Map<Frame, number>()\n  private stack: Frame[] = []\n\n  private lastValue: number | null = null\n  private addWeightsToFrames(value: number) {\n    if (this.lastValue == null) this.lastValue = value\n    const delta = value - this.lastValue!\n    for (let frame of this.framesInStack.keys()) {\n      frame.addToTotalWeight(delta)\n    }\n    const stackTop = lastOf(this.stack)\n    if (stackTop) {\n      stackTop.addToSelfWeight(delta)\n    }\n  }\n  private addWeightsToNodes(value: number, stack: CallTreeNode[]) {\n    const delta = value - this.lastValue!\n    for (let node of stack) {\n      node.addToTotalWeight(delta)\n    }\n    const stackTop = lastOf(stack)\n    if (stackTop) {\n      stackTop.addToSelfWeight(delta)\n    }\n  }\n\n  private _enterFrame(frame: Frame, value: number, useAppendOrder: boolean) {\n    let stack = useAppendOrder ? this.appendOrderStack : this.groupedOrderStack\n    this.addWeightsToNodes(value, stack)\n\n    let prevTop = lastOf(stack)\n\n    if (prevTop) {\n      if (useAppendOrder) {\n        const delta = value - this.lastValue!\n        if (delta > 0) {\n          this.samples.push(prevTop)\n          this.weights.push(value - this.lastValue!)\n        }\n      }\n\n      const last = useAppendOrder\n        ? lastOf(prevTop.children)\n        : prevTop.children.find(c => c.frame === frame)\n      let node: CallTreeNode\n      if (last && last.frame == frame) {\n        node = last\n      } else {\n        node = new CallTreeNode(frame, prevTop)\n        prevTop.children.push(node)\n      }\n      stack.push(node)\n    }\n  }\n  enterFrame(frameInfo: FrameInfo, value: number) {\n    const frame = Frame.getOrInsert(this.frames, frameInfo)\n    this.addWeightsToFrames(value)\n    this._enterFrame(frame, value, true)\n    this._enterFrame(frame, value, false)\n\n    this.stack.push(frame)\n    const frameCount = this.framesInStack.get(frame) || 0\n    this.framesInStack.set(frame, frameCount + 1)\n    this.lastValue = value\n  }\n\n  private _leaveFrame(frame: Frame, value: number, useAppendOrder: boolean) {\n    let stack = useAppendOrder ? this.appendOrderStack : this.groupedOrderStack\n    this.addWeightsToNodes(value, stack)\n\n    if (useAppendOrder) {\n      const leavingStackTop = this.appendOrderStack.pop()\n      const delta = value - this.lastValue!\n      if (delta > 0) {\n        this.samples.push(leavingStackTop!)\n        this.weights.push(value - this.lastValue!)\n      }\n    } else {\n      this.groupedOrderStack.pop()\n    }\n  }\n\n  leaveFrame(frameInfo: FrameInfo, value: number) {\n    const frame = Frame.getOrInsert(this.frames, frameInfo)\n    this.addWeightsToFrames(value)\n\n    this._leaveFrame(frame, value, true)\n    this._leaveFrame(frame, value, false)\n\n    this.stack.pop()\n    const frameCount = this.framesInStack.get(frame)\n    if (frameCount == null) return\n    if (frameCount === 1) {\n      this.framesInStack.delete(frame)\n    } else {\n      this.framesInStack.set(frame, frameCount - 1)\n    }\n    this.lastValue = value\n\n    this.totalWeight = Math.max(this.totalWeight, this.lastValue)\n  }\n\n  build(): Profile {\n    return this\n  }\n}\n","// https://github.com/brendangregg/FlameGraph#2-fold-stacks\n\nimport {Profile, FrameInfo, StackListProfileBuilder} from '../profile'\n\ninterface BGSample {\n  stack: FrameInfo[]\n  duration: number\n}\n\nfunction parseBGFoldedStacks(contents: string): BGSample[] {\n  const samples: BGSample[] = []\n  contents.replace(/^(.*) (\\d+)$/gm, (match: string, stack: string, n: string) => {\n    samples.push({\n      stack: stack.split(';').map(name => ({key: name, name: name})),\n      duration: parseInt(n, 10),\n    })\n    return match\n  })\n  return samples\n}\n\nexport function importFromBGFlameGraph(contents: string): Profile {\n  const parsed = parseBGFoldedStacks(contents)\n  const duration = parsed.reduce((prev: number, cur: BGSample) => prev + cur.duration, 0)\n  const profile = new StackListProfileBuilder(duration)\n  for (let sample of parsed) {\n    profile.appendSample(sample.stack, sample.duration)\n  }\n  return profile.build()\n}\n","// https://github.com/tmm1/stackprof\n\nimport {Profile, FrameInfo, StackListProfileBuilder} from '../profile'\nimport {TimeFormatter} from '../value-formatters'\n\ninterface StackprofFrame {\n  name: string\n  file?: string\n  line?: number\n}\n\nexport interface StackprofProfile {\n  frames: {[number: string]: StackprofFrame}\n  raw: number[]\n  raw_timestamp_deltas: number[]\n}\n\nexport function importFromStackprof(stackprofProfile: StackprofProfile): Profile {\n  const duration = stackprofProfile.raw_timestamp_deltas.reduce((a, b) => a + b, 0)\n  const profile = new StackListProfileBuilder(duration)\n\n  const {frames, raw, raw_timestamp_deltas} = stackprofProfile\n  let sampleIndex = 0\n  for (let i = 0; i < raw.length; ) {\n    const stackHeight = raw[i++]\n\n    const stack: FrameInfo[] = []\n    for (let j = 0; j < stackHeight; j++) {\n      const id = raw[i++]\n      stack.push({\n        key: id,\n        ...frames[id],\n      })\n    }\n    const nSamples = raw[i++]\n\n    let sampleDuration = 0\n    for (let j = 0; j < nSamples; j++) {\n      sampleDuration += raw_timestamp_deltas[sampleIndex++]\n    }\n\n    profile.appendSample(stack, sampleDuration)\n  }\n\n  profile.setValueFormatter(new TimeFormatter('microseconds'))\n  return profile.build()\n}\n","import {Profile, FrameInfo, CallTreeProfileBuilder} from '../profile'\nimport {getOrInsert, lastOf} from '../utils'\nimport {TimeFormatter} from '../value-formatters'\n\ninterface TimelineEvent {\n  pid: number\n  tid: number\n  ts: number\n  ph: string\n  cat: string\n  name: string\n  dur: number\n  tdur: number\n  tts: number\n  args: {[key: string]: any}\n}\n\ninterface PositionTickInfo {\n  line: number\n  ticks: number\n}\n\ninterface CPUProfileCallFrame {\n  columnNumber: number\n  functionName: string\n  lineNumber: number\n  scriptId: string\n  url: string\n}\n\ninterface CPUProfileNode {\n  callFrame: CPUProfileCallFrame\n  hitCount: number\n  id: number\n  children?: number[]\n  positionTicks?: PositionTickInfo[]\n  parent?: CPUProfileNode\n}\n\ninterface CPUProfile {\n  startTime: number\n  endTime: number\n  nodes: CPUProfileNode[]\n  samples: number[]\n  timeDeltas: number[]\n}\n\nexport function importFromChromeTimeline(events: TimelineEvent[]): Profile {\n  // It seems like sometimes Chrome timeline files contain multiple CpuProfiles?\n  // For now, choose the first one in the list.\n  for (let event of events) {\n    if (event.name == 'CpuProfile') {\n      const chromeProfile = event.args.data.cpuProfile as CPUProfile\n      return importFromChromeCPUProfile(chromeProfile)\n    }\n  }\n  throw new Error('Could not find CPU profile in Timeline')\n}\n\nconst callFrameToFrameInfo = new Map<CPUProfileCallFrame, FrameInfo>()\nfunction frameInfoForCallFrame(callFrame: CPUProfileCallFrame) {\n  return getOrInsert(callFrameToFrameInfo, callFrame, callFrame => {\n    const name = callFrame.functionName || '(anonymous)'\n    const file = callFrame.url\n    const line = callFrame.lineNumber\n    const col = callFrame.columnNumber\n    return {\n      key: `${name}:${file}:${line}:${col}`,\n      name,\n      file,\n      line,\n      col,\n    }\n  })\n}\n\nfunction shouldIgnoreFunction(functionName: string) {\n  return functionName === '(root)' || functionName === '(idle)'\n}\n\nfunction shouldPlaceOnTopOfPreviousStack(functionName: string) {\n  return functionName === '(garbage collector)' || functionName === '(program)'\n}\n\nexport function importFromChromeCPUProfile(chromeProfile: CPUProfile): Profile {\n  const profile = new CallTreeProfileBuilder(chromeProfile.endTime - chromeProfile.startTime)\n\n  const nodeById = new Map<number, CPUProfileNode>()\n  for (let node of chromeProfile.nodes) {\n    nodeById.set(node.id, node)\n  }\n  for (let node of chromeProfile.nodes) {\n    if (!node.children) continue\n    for (let childId of node.children) {\n      const child = nodeById.get(childId)\n      if (!child) continue\n      child.parent = node\n    }\n  }\n\n  const samples: number[] = []\n  const timeDeltas: number[] = []\n\n  let elapsed = 0\n  let lastNodeId = NaN\n\n  // The chrome CPU profile format doesn't collapse identical samples. We'll do that\n  // here to save a ton of work later doing mergers.\n  for (let i = 0; i < chromeProfile.samples.length; i++) {\n    const nodeId = chromeProfile.samples[i]\n    if (nodeId != lastNodeId) {\n      samples.push(nodeId)\n      timeDeltas.push(elapsed)\n      elapsed = 0\n    }\n\n    elapsed += chromeProfile.timeDeltas[i]\n    lastNodeId = nodeId\n  }\n  if (!isNaN(lastNodeId)) {\n    samples.push(lastNodeId)\n    timeDeltas.push(elapsed)\n  }\n\n  let prevStack: CPUProfileNode[] = []\n\n  let value = 0\n  for (let i = 0; i < samples.length; i++) {\n    const timeDelta = timeDeltas[i + 1] || 0\n    const nodeId = samples[i]\n    let stackTop = nodeById.get(nodeId)\n    if (!stackTop) continue\n\n    // Find lowest common ancestor of the current stack and the previous one\n    let lca: CPUProfileNode | null = null\n\n    // This is O(n^2), but n should be relatively small here (stack height),\n    // so hopefully this isn't much of a problem\n    for (\n      lca = stackTop;\n      lca && prevStack.indexOf(lca) === -1;\n      lca = shouldPlaceOnTopOfPreviousStack(lca.callFrame.functionName)\n        ? lastOf(prevStack)\n        : lca.parent || null\n    ) {}\n\n    // Close frames that are no longer open\n    while (prevStack.length > 0 && lastOf(prevStack) != lca) {\n      const closingNode = prevStack.pop()!\n      const frame = frameInfoForCallFrame(closingNode.callFrame)\n      profile.leaveFrame(frame, value)\n    }\n\n    // Open frames that are now becoming open\n    const toOpen: CPUProfileNode[] = []\n    for (\n      let node: CPUProfileNode | null = stackTop;\n      node && node != lca && !shouldIgnoreFunction(node.callFrame.functionName);\n      // Place Chrome internal functions on top of the previous call stack\n      node = shouldPlaceOnTopOfPreviousStack(node.callFrame.functionName)\n        ? lastOf(prevStack)\n        : node.parent || null\n    ) {\n      toOpen.push(node)\n    }\n    toOpen.reverse()\n\n    for (let node of toOpen) {\n      profile.enterFrame(frameInfoForCallFrame(node.callFrame), value)\n    }\n\n    prevStack = prevStack.concat(toOpen)\n    value += timeDelta\n  }\n\n  // Close frames that are open at the end of the trace\n  for (let i = prevStack.length - 1; i >= 0; i--) {\n    profile.leaveFrame(frameInfoForCallFrame(prevStack[i].callFrame), value)\n  }\n\n  profile.setValueFormatter(new TimeFormatter('microseconds'))\n  return profile.build()\n}\n","import {Profile, FrameInfo, CallTreeProfileBuilder} from '../profile'\nimport {getOrInsert, lastOf} from '../utils'\nimport {TimeFormatter} from '../value-formatters'\n\ninterface Allocations {\n  frames: any[]\n  sites: any[]\n  sizes: any[]\n  timestamps: any[]\n}\n\ninterface Configuration {\n  allocationsMaxLogLength: number\n  allocationsSampleProbability: number\n  bufferSize: number\n  sampleFrequency: number\n  withAllocations: boolean\n  withMarkers: boolean\n  withMemory: boolean\n  withTicks: boolean\n}\n\ninterface Lib {\n  arch: string\n  breakpadId: string\n  debugName: string\n  debugPath: string\n  end: any\n  name: string\n  offset: number\n  path: string\n  start: any\n}\n\ninterface Meta {\n  abi: string\n  asyncstack: number\n  debug: number\n  gcpoison: number\n  interval: number\n  misc: string\n  oscpu: string\n  platform: string\n  processType: number\n  product: string\n  shutdownTime?: any\n  stackwalk: number\n  startTime: number\n  toolkit: string\n  version: number\n}\n\ninterface PausedRange {\n  endTime: number\n  reason: string\n  startTime: number\n}\n\ntype Frame = [number] | [number, number | null, number | null, number, number]\n\ninterface FrameTable {\n  data: Frame[]\n  /*\n  schema: {\n    location: 0\n    implementation: 1\n    optimizations: 2\n    line: 3\n    category: 4\n  }\n  */\n}\n\ninterface MarkerMeta {\n  category: string\n  interval: string\n  type: string\n}\ntype Marker = [number, number] | [number, number, MarkerMeta]\n\ninterface Markers {\n  data: Marker[]\n  /*\n  schema: {\n    name: 0\n    time: 1\n    data: 2\n  }\n  */\n}\n\ntype Sample = [number, number, number] | [number, number, number, number, number]\n\ninterface Samples {\n  data: Sample[]\n  /*\n  schema: {\n    stack: 0\n    time: 1\n    responsiveness: 2\n    rss: 3\n    uss: 4\n  }\n  */\n}\n\nexport interface StackTable {\n  data: [number | null, number][]\n  /*\n  schema: {\n    prefix: 0\n    frame: 1\n  }\n  */\n}\n\nexport interface Thread {\n  frameTable: FrameTable\n  markers: Markers\n  name: string\n  pid: number\n  processType: string\n  registerTime: number\n  samples: Samples\n  stackTable: StackTable\n  stringTable: string[]\n  tid: number\n  unregisterTime?: any\n}\n\nexport interface FirefoxCPUProfile {\n  libs: Lib[]\n  meta: Meta\n  pausedRanges: PausedRange[]\n  processes: any[]\n  threads: Thread[]\n}\n\nexport interface FirefoxProfile {\n  allocations: Allocations\n  configuration: Configuration\n  duration: number\n  fileType: string\n  frames: any[]\n  label: string\n  markers: any[]\n  memory: any[]\n  profile: FirefoxCPUProfile\n  ticks: any[]\n  version: number\n}\n\nexport function importFromFirefox(firefoxProfile: FirefoxProfile): Profile {\n  const cpuProfile = firefoxProfile.profile\n\n  const thread =\n    cpuProfile.threads.length === 1\n      ? cpuProfile.threads[0]\n      : cpuProfile.threads.filter(t => t.name === 'GeckoMain')[0]\n\n  const frameIdToFrameInfo = new Map<number, FrameInfo>()\n\n  function extractStack(sample: Sample): FrameInfo[] {\n    let stackFrameId: number | null = sample[0]\n    const ret: number[] = []\n\n    while (stackFrameId != null) {\n      const nextStackFrame: [number | null, number] = thread.stackTable.data[stackFrameId]\n      const [nextStackId, frameId] = nextStackFrame\n      ret.push(frameId)\n      stackFrameId = nextStackId\n    }\n    ret.reverse()\n    return ret\n      .map(f => {\n        const frameData = thread.frameTable.data[f]\n        const location = thread.stringTable[frameData[0]]\n\n        const match = /(.*)\\s+\\((.*?):?(\\d+)?\\)$/.exec(location)\n\n        if (!match) return null\n\n        if (match[2].startsWith('resource:') || match[2] === 'self-hosted') {\n          // Ignore Firefox-internals stuff\n          return null\n        }\n\n        return getOrInsert(frameIdToFrameInfo, f, () => ({\n          key: location,\n          name: match[1]!,\n          file: match[2]!,\n          line: match[3] ? parseInt(match[3]) : undefined,\n        }))\n      })\n      .filter(f => f != null) as FrameInfo[]\n  }\n\n  const profile = new CallTreeProfileBuilder(firefoxProfile.duration)\n\n  let prevStack: FrameInfo[] = []\n  for (let sample of thread.samples.data) {\n    const stack = extractStack(sample)\n    const value = sample[1]\n\n    // Find lowest common ancestor of the current stack and the previous one\n    let lca: FrameInfo | null = null\n\n    // This is O(n^2), but n should be relatively small here (stack height),\n    // so hopefully this isn't much of a problem\n    for (let i = stack.length - 1; i >= 0 && prevStack.indexOf(stack[i]) === -1; i--) {}\n\n    // Close frames that are no longer open\n    while (prevStack.length > 0 && lastOf(prevStack) != lca) {\n      const closingFrame = prevStack.pop()!\n      profile.leaveFrame(closingFrame, value)\n    }\n\n    // Open frames that are now becoming open\n    const toOpen: FrameInfo[] = []\n    for (let i = stack.length - 1; i >= 0 && stack[i] != lca; i--) {\n      toOpen.push(stack[i])\n    }\n    toOpen.reverse()\n\n    for (let frame of toOpen) {\n      profile.enterFrame(frame, value)\n    }\n\n    prevStack = stack\n  }\n\n  profile.setValueFormatter(new TimeFormatter('milliseconds'))\n  return profile.build()\n}\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // use fallback for big arrays to avoid stack overflow\n  if (len < 65537) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","// This file contains methods to import data from OS X Instruments.app\n// https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/index.html\n\nimport {Profile, FrameInfo, CallTreeProfileBuilder, StackListProfileBuilder} from '../profile'\nimport {sortBy, getOrThrow, getOrInsert, lastOf, getOrElse, zeroPad} from '../utils'\nimport * as pako from 'pako'\nimport {ByteFormatter, TimeFormatter} from '../value-formatters'\n\nfunction parseTSV<T>(contents: string): T[] {\n  const lines = contents.split('\\n').map(l => l.split('\\t'))\n\n  const headerLine = lines.shift()\n  if (!headerLine) return []\n\n  const indexToField = new Map<number, string>()\n  for (let i = 0; i < headerLine.length; i++) {\n    indexToField.set(i, headerLine[i])\n  }\n\n  const ret: T[] = []\n  for (let line of lines) {\n    const row = {} as T\n    for (let i = 0; i < line.length; i++) {\n      ;(row as any)[indexToField.get(i)!] = line[i]\n    }\n    ret.push(row)\n  }\n  return ret\n}\n\ninterface PastedTimeProfileRow {\n  Weight?: string\n  'Source Path'?: string\n  'Symbol Name'?: string\n}\n\ninterface PastedAllocationsProfileRow {\n  'Bytes Used'?: string\n  'Source Path'?: string\n  'Symbol Name'?: string\n}\n\ninterface FrameInfoWithWeight extends FrameInfo {\n  endValue: number\n}\n\nfunction getWeight(deepCopyRow: any): number {\n  if ('Bytes Used' in deepCopyRow) {\n    const bytesUsedString = deepCopyRow['Bytes Used']\n    const parts = /\\s*(\\d+(?:[.]\\d+)?) (\\w+)\\s+(?:\\d+(?:[.]\\d+))%/.exec(bytesUsedString)\n    if (!parts) return 0\n    const value = parseInt(parts[1], 10)\n    const units = parts[2]\n\n    switch (units) {\n      case 'Bytes':\n        return value\n      case 'KB':\n        return 1024 * value\n      case 'MB':\n        return 1024 * 1024 * value\n      case 'GB':\n        return 1024 * 1024 * 1024 * value\n    }\n    throw new Error(`Unrecognized units ${units}`)\n  }\n\n  if ('Weight' in deepCopyRow || 'Running Time' in deepCopyRow) {\n    const weightString = deepCopyRow['Weight'] || deepCopyRow['Running Time']\n    const parts = /\\s*(\\d+(?:[.]\\d+)?) ?(\\w+)\\s+(?:\\d+(?:[.]\\d+))%/.exec(weightString)\n    if (!parts) return 0\n    const value = parseInt(parts[1], 10)\n    const units = parts[2]\n\n    switch (units) {\n      case 'ms':\n        return value\n      case 's':\n        return 1000 * value\n      case 'min':\n        return 1000 * value\n    }\n    throw new Error(`Unrecognized units ${units}`)\n  }\n\n  return -1\n}\n\n// Import from a deep copy made of a profile\nexport function importFromInstrumentsDeepCopy(contents: string): Profile {\n  const profile = new CallTreeProfileBuilder()\n  const rows = parseTSV<PastedTimeProfileRow | PastedAllocationsProfileRow>(contents)\n\n  const stack: FrameInfoWithWeight[] = []\n  let cumulativeValue: number = 0\n\n  for (let row of rows) {\n    const symbolName = row['Symbol Name']\n    if (!symbolName) continue\n    const trimmedSymbolName = symbolName.trim()\n    let stackDepth = symbolName.length - trimmedSymbolName.length\n\n    if (stack.length - stackDepth < 0) {\n      throw new Error('Invalid format')\n    }\n\n    let framesToLeave: FrameInfoWithWeight[] = []\n\n    while (stackDepth < stack.length) {\n      const stackTop = stack.pop()!\n      framesToLeave.push(stackTop)\n    }\n\n    for (let frameToLeave of framesToLeave) {\n      cumulativeValue = Math.max(cumulativeValue, frameToLeave.endValue)\n      profile.leaveFrame(frameToLeave, cumulativeValue)\n    }\n\n    const newFrameInfo: FrameInfoWithWeight = {\n      key: `${row['Source Path'] || ''}:${trimmedSymbolName}`,\n      name: trimmedSymbolName,\n      file: row['Source Path'],\n      endValue: cumulativeValue + getWeight(row),\n    }\n\n    profile.enterFrame(newFrameInfo, cumulativeValue)\n    stack.push(newFrameInfo)\n  }\n\n  while (stack.length > 0) {\n    const frameToLeave = stack.pop()!\n    cumulativeValue = Math.max(cumulativeValue, frameToLeave.endValue)\n    profile.leaveFrame(frameToLeave, cumulativeValue)\n  }\n\n  if ('Bytes Used' in rows[0]) {\n    profile.setValueFormatter(new ByteFormatter())\n  } else if ('Weight' in rows[0] || 'Running Time' in rows[0]) {\n    profile.setValueFormatter(new TimeFormatter('milliseconds'))\n  }\n\n  return profile.build()\n}\n\ninterface TraceDirectoryTree {\n  name: string\n  files: Map<string, File>\n  subdirectories: Map<string, TraceDirectoryTree>\n}\n\n// The bits of this API that we care about. This is implemented by WebKitEntry\n// https://wicg.github.io/entries-api/#api-entry\nexport interface FileSystemDirectoryReader {\n  readEntries(cb: (entries: FileSystemEntry[]) => void, error: (err: Error) => void): void\n}\nexport interface FileSystemEntry {\n  readonly isFile: boolean\n  readonly isDirectory: boolean\n  readonly name: string\n  readonly fullPath: string\n}\nexport interface FileSystemDirectoryEntry extends FileSystemEntry {\n  createReader(): FileSystemDirectoryReader\n}\nexport interface FileSystemFileEntry extends FileSystemEntry {\n  file(cb: (file: File) => void, errCb: (err: Error) => void): void\n}\n\nasync function extractDirectoryTree(entry: FileSystemDirectoryEntry): Promise<TraceDirectoryTree> {\n  const node: TraceDirectoryTree = {\n    name: entry.name,\n    files: new Map(),\n    subdirectories: new Map(),\n  }\n\n  const children = await new Promise<FileSystemEntry[]>((resolve, reject) => {\n    entry.createReader().readEntries((entries: any[]) => {\n      resolve(entries)\n    }, reject)\n  })\n\n  for (let child of children) {\n    if (child.isDirectory) {\n      const subtree = await extractDirectoryTree(child as FileSystemDirectoryEntry)\n      node.subdirectories.set(subtree.name, subtree)\n    } else {\n      const file = await new Promise<File>((resolve, reject) => {\n        ;(child as FileSystemFileEntry).file(resolve, reject)\n      })\n      node.files.set(file.name, file)\n    }\n  }\n\n  return node\n}\n\nclass MaybeCompressedFileReader {\n  private fileData: Promise<ArrayBuffer>\n\n  constructor(file: File) {\n    this.fileData = new Promise(resolve => {\n      const reader = new FileReader()\n      reader.addEventListener('loadend', () => {\n        resolve(reader.result)\n      })\n      reader.readAsArrayBuffer(file)\n    })\n  }\n\n  private async getUncompressed(): Promise<ArrayBuffer> {\n    const fileData = await this.fileData\n    try {\n      const result = pako.inflate(new Uint8Array(fileData)).buffer\n      return result\n    } catch (e) {\n      return fileData\n    }\n  }\n\n  async readAsArrayBuffer(): Promise<ArrayBuffer> {\n    return await this.getUncompressed()\n  }\n\n  async readAsText(): Promise<string> {\n    const buffer = await this.getUncompressed()\n    let ret: string = ''\n\n    // JavaScript strings are UTF-16 encoded, but this data is coming\n    // from a UTF-8 encoded file.\n    const array = new Uint8Array(buffer)\n    for (let i = 0; i < array.length; i++) {\n      ret += String.fromCharCode(array[i])\n    }\n    return ret\n  }\n}\n\nfunction readAsArrayBuffer(file: File): Promise<ArrayBuffer> {\n  return new MaybeCompressedFileReader(file).readAsArrayBuffer()\n}\n\nfunction readAsText(file: File): Promise<string> {\n  return new MaybeCompressedFileReader(file).readAsText()\n}\n\nfunction getCoreDirForRun(tree: TraceDirectoryTree, selectedRun: number): TraceDirectoryTree {\n  const corespace = getOrThrow(tree.subdirectories, 'corespace')\n  const corespaceRunDir = getOrThrow(corespace.subdirectories, `run${selectedRun}`)\n  return getOrThrow(corespaceRunDir.subdirectories, 'core')\n}\n\nclass BinReader {\n  private bytePos: number = 0\n  private view: DataView\n  constructor(buffer: ArrayBuffer) {\n    this.view = new DataView(buffer)\n  }\n  seek(pos: number) {\n    this.bytePos = pos\n  }\n  skip(byteCount: number) {\n    this.bytePos += byteCount\n  }\n  hasMore() {\n    return this.bytePos < this.view.byteLength\n  }\n  bytesLeft() {\n    return this.view.byteLength - this.bytePos\n  }\n  readUint8() {\n    this.bytePos++\n    if (this.bytePos > this.view.byteLength) return 0\n    return this.view.getUint8(this.bytePos - 1)\n  }\n\n  // Note: we intentionally use Math.pow here rather than bit shifts\n  // because JavaScript doesn't have true 64 bit integers.\n  readUint32() {\n    this.bytePos += 4\n    if (this.bytePos > this.view.byteLength) return 0\n    return this.view.getUint32(this.bytePos - 4, true)\n  }\n  readUint48() {\n    this.bytePos += 6\n    if (this.bytePos > this.view.byteLength) return 0\n\n    return (\n      this.view.getUint32(this.bytePos - 6, true) +\n      this.view.getUint16(this.bytePos - 2, true) * Math.pow(2, 32)\n    )\n  }\n  readUint64() {\n    this.bytePos += 8\n    if (this.bytePos > this.view.byteLength) return 0\n    return (\n      this.view.getUint32(this.bytePos - 8, true) +\n      this.view.getUint32(this.bytePos - 4, true) * Math.pow(2, 32)\n    )\n  }\n}\n\ninterface Sample {\n  timestamp: number\n  threadID: number\n  backtraceID: number\n}\n\nasync function getRawSampleList(core: TraceDirectoryTree): Promise<Sample[]> {\n  const stores = getOrThrow(core.subdirectories, 'stores')\n  for (let storedir of stores.subdirectories.values()) {\n    const schemaFile = storedir.files.get('schema.xml')\n    if (!schemaFile) continue\n    const schema = await readAsText(schemaFile)\n    if (!/name=\"time-profile\"/.exec(schema)) {\n      continue\n    }\n    const bulkstore = new BinReader(\n      await readAsArrayBuffer(getOrThrow(storedir.files, 'bulkstore')),\n    )\n    // Ignore the first 3 words\n    bulkstore.readUint32()\n    bulkstore.readUint32()\n    bulkstore.readUint32()\n    const headerSize = bulkstore.readUint32()\n    const bytesPerEntry = bulkstore.readUint32()\n\n    bulkstore.seek(headerSize)\n\n    const samples: Sample[] = []\n    while (true) {\n      // Schema as of Instruments 8.3.3 is a 6 byte timestamp, followed by a bunch\n      // of stuff we don't care about, followed by a 4 byte backtrace ID\n      const timestamp = bulkstore.readUint48()\n      if (timestamp === 0) break\n\n      const threadID = bulkstore.readUint32()\n\n      bulkstore.skip(bytesPerEntry - 6 - 4 - 4)\n      const backtraceID = bulkstore.readUint32()\n      samples.push({timestamp, threadID, backtraceID})\n    }\n    return samples\n  }\n  throw new Error('Could not find sample list')\n}\n\nasync function getIntegerArrays(samples: Sample[], core: TraceDirectoryTree): Promise<number[][]> {\n  const uniquing = getOrThrow(core.subdirectories, 'uniquing')\n  const arrayUniquer = getOrThrow(uniquing.subdirectories, 'arrayUniquer')\n  const integeruniquerindex = getOrThrow(arrayUniquer.files, 'integeruniquer.index')\n  const integeruniquerdata = getOrThrow(arrayUniquer.files, 'integeruniquer.data')\n\n  // integeruniquer.index is a binary file containing an array of [byte offset, MB offset] pairs\n  // that indicate where array data starts in the .data file\n\n  // integeruniquer.data is a binary file containing an array of arrays of 64 bit integer.\n  // The schema is a 32 byte header followed by a stream of arrays.\n  // Each array consists of a 4 byte size N followed by N 8 byte little endian integers\n\n  // This table contains the memory addresses of stack frames\n\n  const indexreader = new BinReader(await readAsArrayBuffer(integeruniquerindex))\n  const datareader = new BinReader(await readAsArrayBuffer(integeruniquerdata))\n\n  // Header we don't care about\n  indexreader.seek(32)\n\n  let arrays: number[][] = []\n\n  while (indexreader.hasMore()) {\n    const byteOffset = indexreader.readUint32() + indexreader.readUint32() * (1024 * 1024)\n\n    if (byteOffset === 0) {\n      // The first entry in the index table seems to just indicate the offset of\n      // the header into the data file\n      continue\n    }\n\n    datareader.seek(byteOffset)\n\n    let length = datareader.readUint32()\n    let array: number[] = []\n\n    while (length--) {\n      array.push(datareader.readUint64())\n    }\n    arrays.push(array)\n  }\n\n  return arrays\n}\n\ninterface SymbolInfo {\n  symbolName: string | null\n  sourcePath: string | null\n  addressToLine: Map<number, number>\n}\n\ninterface FormTemplateData {\n  selectedRun: number\n  instrument: string\n  version: number\n  addressToFrameMap: Map<number, FrameInfo>\n}\n\nasync function readFormTemplate(tree: TraceDirectoryTree): Promise<FormTemplateData> {\n  const formTemplate = getOrThrow(tree.files, 'form.template')\n  const archive = readInstrumentsKeyedArchive(await readAsArrayBuffer(formTemplate))\n\n  const version = archive['com.apple.xray.owner.template.version']\n  const selectedRun = archive['com.apple.xray.owner.template'].get('_selectedRunNumber')\n  let instrument = archive['$1']\n  if ('stubInfoByUUID' in archive) {\n    instrument = Array.from(archive['stubInfoByUUID'].keys())[0]\n  }\n  let allRunData = archive['com.apple.xray.run.data']\n  const runData = getOrThrow<number, Map<any, any>>(\n    allRunData.runData,\n    allRunData.runNumbers.pop()!,\n  )\n\n  const symbolsByPid = getOrThrow<string, Map<number, {symbols: SymbolInfo[]}>>(\n    runData,\n    'symbolsByPid',\n  )\n\n  const addressToFrameMap = new Map<number, FrameInfo>()\n\n  // TODO(jlfwong): Deal with profiles with conflicts addresses?\n  for (let [_pid, symbols] of symbolsByPid.entries()) {\n    for (let symbol of symbols.symbols) {\n      if (!symbol) continue\n      const {sourcePath, symbolName, addressToLine} = symbol\n      for (let [address, _line] of addressToLine) {\n        getOrInsert(addressToFrameMap, address, () => {\n          const name = symbolName || `0x${zeroPad(address.toString(16), 16)}`\n          const frame: FrameInfo = {\n            key: `${sourcePath}:${name}`,\n            name: name,\n          }\n          if (sourcePath) {\n            frame.file = sourcePath\n          }\n          return frame\n        })\n      }\n    }\n  }\n\n  return {\n    version,\n    instrument,\n    selectedRun,\n    addressToFrameMap,\n  }\n}\n\n// Import from a .trace file saved from Mac Instruments.app\nexport async function importFromInstrumentsTrace(\n  entry: FileSystemDirectoryEntry,\n): Promise<Profile> {\n  const tree = await extractDirectoryTree(entry)\n\n  const {version, selectedRun, instrument, addressToFrameMap} = await readFormTemplate(tree)\n  if (instrument !== 'com.apple.xray.instrument-type.coresampler2') {\n    throw new Error(\n      `The only supported instrument from .trace import is \"com.apple.xray.instrument-type.coresampler2\". Got ${instrument}`,\n    )\n  }\n  console.log('version: ', version)\n  console.log(`Importing time profile from run ${selectedRun}`)\n\n  const core = getCoreDirForRun(tree, selectedRun)\n  let samples = await getRawSampleList(core)\n  const arrays = await getIntegerArrays(samples, core)\n  const backtraceIDtoStack = new Map<number, FrameInfo[]>()\n\n  const profile = new StackListProfileBuilder(lastOf(samples)!.timestamp)\n  profile.setName(entry.name)\n\n  // For now, we can only display the flamechart for a single thread of execution,\n  // So let's choose whichever thread had the most sample hits.\n  //\n  // TODO(jlfwong): Support displaying flamecharts for multiple threads.\n  const sampleCountByThreadID = new Map<number, number>()\n  for (let sample of samples) {\n    sampleCountByThreadID.set(\n      sample.threadID,\n      getOrElse(sampleCountByThreadID, sample.threadID, () => 0) + 1,\n    )\n  }\n  const counts = Array.from(sampleCountByThreadID.entries())\n  sortBy(counts, c => c[1])\n  const mainThreadID = lastOf(counts)![0]\n  samples = samples.filter(s => s.threadID === mainThreadID)\n\n  function appendRecursive(k: number, stack: FrameInfo[]) {\n    const frame = addressToFrameMap.get(k)\n    if (frame) {\n      stack.push(frame)\n    } else if (k in arrays) {\n      for (let addr of arrays[k]) {\n        appendRecursive(addr, stack)\n      }\n    } else {\n      const rawAddressFrame: FrameInfo = {\n        key: k,\n        name: `0x${zeroPad(k.toString(16), 16)}`,\n      }\n      addressToFrameMap.set(k, rawAddressFrame)\n      stack.push(rawAddressFrame)\n    }\n  }\n\n  let lastTimestamp: null | number = null\n  for (let sample of samples) {\n    const stackForSample = getOrInsert(backtraceIDtoStack, sample.backtraceID, id => {\n      const stack: FrameInfo[] = []\n      appendRecursive(id, stack)\n      stack.reverse()\n      return stack\n    })\n\n    if (lastTimestamp === null) {\n      // The first sample is sometimes fairly late in the profile for some reason.\n      // We'll just say nothing was known to be on the stack in that time.\n      profile.appendSample([], sample.timestamp)\n      lastTimestamp = sample.timestamp\n    }\n\n    if (sample.timestamp < lastTimestamp) {\n      throw new Error('Timestamps out of order!')\n    }\n\n    profile.appendSample(stackForSample, sample.timestamp - lastTimestamp)\n    lastTimestamp = sample.timestamp\n  }\n\n  profile.setValueFormatter(new TimeFormatter('nanoseconds'))\n  return profile.build()\n}\n\nexport function readInstrumentsKeyedArchive(buffer: ArrayBuffer): any {\n  const byteArray = new Uint8Array(buffer)\n  const parsedPlist = parseBinaryPlist(byteArray)\n  const data = expandKeyedArchive(parsedPlist, ($classname, object) => {\n    switch ($classname) {\n      case 'NSTextStorage':\n      case 'NSParagraphStyle':\n      case 'NSFont':\n        // Stuff that's irrelevant for constructing a flamegraph\n        return null\n\n      case 'PFTSymbolData': {\n        const ret = Object.create(null)\n        ret.symbolName = object.$0\n        ret.sourcePath = object.$1\n        ret.addressToLine = new Map<any, any>()\n        for (let i = 3; ; i += 2) {\n          const address = object['$' + i]\n          const line = object['$' + (i + 1)]\n          if (address == null || line == null) {\n            break\n          }\n          ret.addressToLine.set(address, line)\n        }\n        return ret\n      }\n\n      case 'PFTOwnerData': {\n        const ret = Object.create(null)\n        ret.ownerName = object.$0\n        ret.ownerPath = object.$1\n        return ret\n      }\n\n      case 'PFTPersistentSymbols': {\n        const ret = Object.create(null)\n        const symbolCount = object.$4\n\n        ret.threadNames = object.$3\n        ret.symbols = []\n        for (let i = 1; i < symbolCount; i++) {\n          ret.symbols.push(object['$' + (4 + i)])\n        }\n        return ret\n      }\n\n      case 'XRRunListData': {\n        const ret = Object.create(null)\n        ret.runNumbers = object.$0\n        ret.runData = object.$1\n        return ret\n      }\n\n      case 'XRIntKeyedDictionary': {\n        const ret = new Map()\n        const size = object.$0\n        for (let i = 0; i < size; i++) {\n          const key = object['$' + (1 + 2 * i)]\n          const value = object['$' + (1 + (2 * i + 1))]\n          ret.set(key, value)\n        }\n        return ret\n      }\n\n      case 'XRCore': {\n        const ret = Object.create(null)\n        ret.number = object.$0\n        ret.name = object.$1\n        return ret\n      }\n    }\n    return object\n  })\n  return data\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport function decodeUTF8(bytes: Uint8Array): string {\n  let text = String.fromCharCode.apply(String, bytes)\n  if (text.slice(-1) === '\\0') text = text.slice(0, -1) // Remove a single trailing null character if present\n  return decodeURIComponent(escape(text))\n}\n\nfunction isArray(value: any): boolean {\n  return value instanceof Array\n}\n\nfunction isDictionary(value: any): boolean {\n  return value !== null && typeof value === 'object' && Object.getPrototypeOf(value) === null\n}\n\nfunction followUID(objects: any[], value: any): any {\n  return value instanceof UID ? objects[value.index] : value\n}\n\nfunction expandKeyedArchive(\n  root: any,\n  interpretClass: ($classname: string, obj: any) => any = x => x,\n): any {\n  // Sanity checks\n  if (\n    root.$version !== 100000 ||\n    root.$archiver !== 'NSKeyedArchiver' ||\n    !isDictionary(root.$top) ||\n    !isArray(root.$objects)\n  ) {\n    throw new Error('Invalid keyed archive')\n  }\n\n  // Substitute NSNull\n  if (root.$objects[0] === '$null') {\n    root.$objects[0] = null\n  }\n\n  // Pattern-match Objective-C constructs\n  for (let i = 0; i < root.$objects.length; i++) {\n    root.$objects[i] = paternMatchObjectiveC(root.$objects, root.$objects[i], interpretClass)\n  }\n\n  // Reconstruct the DAG from the parse tree\n  let visit = (object: any) => {\n    if (object instanceof UID) {\n      return root.$objects[object.index]\n    } else if (isArray(object)) {\n      for (let i = 0; i < object.length; i++) {\n        object[i] = visit(object[i])\n      }\n    } else if (isDictionary(object)) {\n      for (let key in object) {\n        object[key] = visit(object[key])\n      }\n    } else if (object instanceof Map) {\n      const clone = new Map(object)\n      object.clear()\n      for (let [k, v] of clone.entries()) {\n        object.set(visit(k), visit(v))\n      }\n    }\n    return object\n  }\n  for (let i = 0; i < root.$objects.length; i++) {\n    visit(root.$objects[i])\n  }\n  return visit(root.$top)\n}\n\nfunction paternMatchObjectiveC(\n  objects: any[],\n  value: any,\n  interpretClass: ($classname: string, obj: any) => any = x => x,\n): any {\n  if (isDictionary(value) && value.$class) {\n    let name = followUID(objects, value.$class).$classname\n    switch (name) {\n      case 'NSDecimalNumberPlaceholder': {\n        let length: number = value['NS.length']\n        let exponent: number = value['NS.exponent']\n        let byteOrder: number = value['NS.mantissa.bo']\n        let negative: boolean = value['NS.negative']\n        let mantissa = new Uint16Array(new Uint8Array(value['NS.mantissa']).buffer)\n        let decimal = 0\n\n        for (let i = 0; i < length; i++) {\n          let digit = mantissa[i]\n\n          if (byteOrder !== 1) {\n            // I assume this is how this works but I am unable to test it\n            digit = ((digit & 0xff00) >> 8) | ((digit & 0x00ff) << 8)\n          }\n\n          decimal += digit * Math.pow(65536, i)\n        }\n\n        decimal *= Math.pow(10, exponent)\n        return negative ? -decimal : decimal\n      }\n\n      // Replace NSData with a Uint8Array\n      case 'NSData':\n      case 'NSMutableData':\n        return value['NS.bytes'] || value['NS.data']\n\n      // Replace NSString with a string\n      case 'NSString':\n      case 'NSMutableString':\n        return decodeUTF8(value['NS.bytes'])\n\n      // Replace NSArray with an Array\n      case 'NSArray':\n      case 'NSMutableArray':\n        if ('NS.objects' in value) {\n          return value['NS.objects']\n        }\n        let array: any[] = []\n        while (true) {\n          let object = 'NS.object.' + array.length\n          if (!(object in value)) {\n            break\n          }\n          array.push(value[object])\n        }\n        return array\n\n      case '_NSKeyedCoderOldStyleArray': {\n        const count = value['NS.count']\n\n        // const size = value['NS.size']\n        // Types are encoded as single printable characters.\n        // See: https://github.com/apple/swift-corelibs-foundation/blob/76995e8d3d8c10f3f3ec344dace43426ab941d0e/Foundation/NSObjCRuntime.swift#L19\n        // const type = String.fromCharCode(value['NS.type'])\n\n        let array: any[] = []\n        for (let i = 0; i < count; i++) {\n          const element = value['$' + i]\n          array.push(element)\n        }\n        return array\n      }\n\n      case 'NSDictionary':\n      case 'NSMutableDictionary':\n        let map = new Map()\n        if ('NS.keys' in value && 'NS.objects' in value) {\n          for (let i = 0; i < value['NS.keys'].length; i++) {\n            map.set(value['NS.keys'][i], value['NS.objects'][i])\n          }\n        } else {\n          while (true) {\n            let key = 'NS.key.' + map.size\n            let object = 'NS.object.' + map.size\n            if (!(key in value) || !(object in value)) {\n              break\n            }\n            map.set(value[key], value[object])\n          }\n        }\n        return map\n\n      default:\n        const converted = interpretClass(name, value)\n        if (converted !== value) return converted\n    }\n  }\n  return value\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexport class UID {\n  constructor(public index: number) {}\n}\n\nfunction parseBinaryPlist(bytes: Uint8Array): any {\n  let text = 'bplist00'\n  for (let i = 0; i < 8; i++) {\n    if (bytes[i] !== text.charCodeAt(i)) {\n      throw new Error('File is not a binary plist')\n    }\n  }\n  return new BinaryPlistParser(\n    new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength),\n  ).parseRoot()\n}\n\ninterface LengthAndOffset {\n  length: number\n  offset: number\n}\n\n// See http://opensource.apple.com/source/CF/CF-550/CFBinaryPList.c for details\nclass BinaryPlistParser {\n  referenceSize = 0\n  objects: number[] = []\n  offsetTable: number[] = []\n\n  constructor(public view: DataView) {}\n\n  parseRoot(): any {\n    let trailer = this.view.byteLength - 32\n    let offsetSize = this.view.getUint8(trailer + 6)\n    this.referenceSize = this.view.getUint8(trailer + 7)\n\n    // Just use the last 32-bits of these 64-bit big-endian values\n    let objectCount = this.view.getUint32(trailer + 12, false)\n    let rootIndex = this.view.getUint32(trailer + 20, false)\n    let tableOffset = this.view.getUint32(trailer + 28, false)\n\n    // Parse all offsets before starting to parse objects\n    for (let i = 0; i < objectCount; i++) {\n      this.offsetTable.push(this.parseInteger(tableOffset, offsetSize))\n      tableOffset += offsetSize\n    }\n\n    // Parse the root object assuming the graph is a tree\n    return this.parseObject(this.offsetTable[rootIndex])\n  }\n\n  parseLengthAndOffset(offset: number, extra: number): LengthAndOffset {\n    if (extra !== 0x0f) return {length: extra, offset: 0}\n    let marker = this.view.getUint8(offset++)\n    if ((marker & 0xf0) !== 0x10)\n      throw new Error('Unexpected non-integer length at offset ' + offset)\n    let size = 1 << (marker & 0x0f)\n    return {length: this.parseInteger(offset, size), offset: size + 1}\n  }\n\n  parseSingleton(offset: number, extra: number): any {\n    if (extra === 0) return null\n    if (extra === 8) return false\n    if (extra === 9) return true\n    throw new Error('Unexpected extra value ' + extra + ' at offset ' + offset)\n  }\n\n  parseInteger(offset: number, size: number): number {\n    if (size === 1) return this.view.getUint8(offset)\n    if (size === 2) return this.view.getUint16(offset, false)\n    if (size === 4) return this.view.getUint32(offset, false)\n\n    if (size === 8) {\n      return (\n        Math.pow(2, 32 * 1) * this.view.getUint32(offset + 0, false) +\n        Math.pow(2, 32 * 0) * this.view.getUint32(offset + 4, false)\n      )\n    }\n\n    if (size === 16) {\n      return (\n        Math.pow(2, 32 * 3) * this.view.getUint32(offset + 0, false) +\n        Math.pow(2, 32 * 2) * this.view.getUint32(offset + 4, false) +\n        Math.pow(2, 32 * 1) * this.view.getUint32(offset + 8, false) +\n        Math.pow(2, 32 * 0) * this.view.getUint32(offset + 12, false)\n      )\n    }\n\n    throw new Error('Unexpected integer of size ' + size + ' at offset ' + offset)\n  }\n\n  parseFloat(offset: number, size: number): number {\n    if (size === 4) return this.view.getFloat32(offset, false)\n    if (size === 8) return this.view.getFloat64(offset, false)\n    throw new Error('Unexpected float of size ' + size + ' at offset ' + offset)\n  }\n\n  parseDate(offset: number, size: number): Date {\n    if (size !== 8) throw new Error('Unexpected date of size ' + size + ' at offset ' + offset)\n    let seconds = this.view.getFloat64(offset, false)\n    return new Date(978307200000 + seconds * 1000) // Starts from January 1st, 2001\n  }\n\n  parseData(offset: number, extra: number): Uint8Array {\n    let both = this.parseLengthAndOffset(offset, extra)\n    return new Uint8Array(this.view.buffer, offset + both.offset, both.length)\n  }\n\n  parseStringASCII(offset: number, extra: number): string {\n    let both = this.parseLengthAndOffset(offset, extra)\n    let text = ''\n    offset += both.offset\n    for (let i = 0; i < both.length; i++) {\n      text += String.fromCharCode(this.view.getUint8(offset++))\n    }\n    return text\n  }\n\n  parseStringUTF16(offset: number, extra: number): string {\n    let both = this.parseLengthAndOffset(offset, extra)\n    let text = ''\n    offset += both.offset\n    for (let i = 0; i < both.length; i++) {\n      text += String.fromCharCode(this.view.getUint16(offset, false))\n      offset += 2\n    }\n    return text\n  }\n\n  parseUID(offset: number, size: number): UID {\n    return new UID(this.parseInteger(offset, size))\n  }\n\n  parseArray(offset: number, extra: number): any[] {\n    let both = this.parseLengthAndOffset(offset, extra)\n    let array: any[] = []\n    let size = this.referenceSize\n    offset += both.offset\n    for (let i = 0; i < both.length; i++) {\n      array.push(this.parseObject(this.offsetTable[this.parseInteger(offset, size)]))\n      offset += size\n    }\n    return array\n  }\n\n  parseDictionary(offset: number, extra: number): Object {\n    let both = this.parseLengthAndOffset(offset, extra)\n    let dictionary = Object.create(null)\n    let size = this.referenceSize\n    let nextKey = offset + both.offset\n    let nextValue = nextKey + both.length * size\n    for (let i = 0; i < both.length; i++) {\n      let key = this.parseObject(this.offsetTable[this.parseInteger(nextKey, size)])\n      let value = this.parseObject(this.offsetTable[this.parseInteger(nextValue, size)])\n      if (typeof key !== 'string') throw new Error('Unexpected non-string key at offset ' + nextKey)\n      dictionary[key] = value\n      nextKey += size\n      nextValue += size\n    }\n    return dictionary\n  }\n\n  parseObject(offset: number): any {\n    let marker = this.view.getUint8(offset++)\n    let extra = marker & 0x0f\n    switch (marker >> 4) {\n      case 0x0:\n        return this.parseSingleton(offset, extra)\n      case 0x1:\n        return this.parseInteger(offset, 1 << extra)\n      case 0x2:\n        return this.parseFloat(offset, 1 << extra)\n      case 0x3:\n        return this.parseDate(offset, 1 << extra)\n      case 0x4:\n        return this.parseData(offset, extra)\n      case 0x5:\n        return this.parseStringASCII(offset, extra)\n      case 0x6:\n        return this.parseStringUTF16(offset, extra)\n      case 0x8:\n        return this.parseUID(offset, extra + 1)\n      case 0xa:\n        return this.parseArray(offset, extra)\n      case 0xd:\n        return this.parseDictionary(offset, extra)\n    }\n    throw new Error('Unexpected marker ' + marker + ' at offset ' + --offset)\n  }\n}\n","export function clamp(x: number, minVal: number, maxVal: number) {\n  if (x < minVal) return minVal\n  if (x > maxVal) return maxVal\n  return x\n}\n\nexport class Vec2 {\n  constructor(readonly x: number, readonly y: number) {}\n  withX(x: number) {\n    return new Vec2(x, this.y)\n  }\n  withY(y: number) {\n    return new Vec2(this.x, y)\n  }\n\n  plus(other: Vec2) {\n    return new Vec2(this.x + other.x, this.y + other.y)\n  }\n  minus(other: Vec2) {\n    return new Vec2(this.x - other.x, this.y - other.y)\n  }\n  times(scalar: number) {\n    return new Vec2(this.x * scalar, this.y * scalar)\n  }\n  timesPointwise(other: Vec2) {\n    return new Vec2(this.x * other.x, this.y * other.y)\n  }\n  dividedByPointwise(other: Vec2) {\n    return new Vec2(this.x / other.x, this.y / other.y)\n  }\n  dot(other: Vec2) {\n    return this.x * other.x + this.y * other.y\n  }\n  equals(other: Vec2) {\n    return this.x === other.x && this.y === other.y\n  }\n  approxEquals(other: Vec2, epsilon = 1e-9) {\n    return Math.abs(this.x - other.x) < epsilon && Math.abs(this.y - other.y) < epsilon\n  }\n\n  length2() {\n    return this.dot(this)\n  }\n  length() {\n    return Math.sqrt(this.length2())\n  }\n  abs() {\n    return new Vec2(Math.abs(this.x), Math.abs(this.y))\n  }\n\n  static min(a: Vec2, b: Vec2) {\n    return new Vec2(Math.min(a.x, b.x), Math.min(a.y, b.y))\n  }\n\n  static max(a: Vec2, b: Vec2) {\n    return new Vec2(Math.max(a.x, b.x), Math.max(a.y, b.y))\n  }\n\n  static zero = new Vec2(0, 0)\n  static unit = new Vec2(1, 1)\n\n  flatten(): [number, number] {\n    return [this.x, this.y]\n  }\n}\n\nexport class AffineTransform {\n  constructor(\n    readonly m00 = 1,\n    readonly m01 = 0,\n    readonly m02 = 0,\n    readonly m10 = 0,\n    readonly m11 = 1,\n    readonly m12 = 0,\n  ) {}\n\n  withScale(s: Vec2) {\n    let {m00, m01, m02, m10, m11, m12} = this\n    m00 = s.x\n    m11 = s.y\n    return new AffineTransform(m00, m01, m02, m10, m11, m12)\n  }\n  static withScale(s: Vec2) {\n    return new AffineTransform().withScale(s)\n  }\n  scaledBy(s: Vec2) {\n    return AffineTransform.withScale(s).times(this)\n  }\n  getScale() {\n    return new Vec2(this.m00, this.m11)\n  }\n\n  withTranslation(t: Vec2) {\n    let {m00, m01, m02, m10, m11, m12} = this\n    m02 = t.x\n    m12 = t.y\n    return new AffineTransform(m00, m01, m02, m10, m11, m12)\n  }\n  static withTranslation(t: Vec2) {\n    return new AffineTransform().withTranslation(t)\n  }\n  getTranslation() {\n    return new Vec2(this.m02, this.m12)\n  }\n  translatedBy(t: Vec2) {\n    return AffineTransform.withTranslation(t).times(this)\n  }\n\n  static betweenRects(from: Rect, to: Rect) {\n    return AffineTransform.withTranslation(from.origin.times(-1))\n      .scaledBy(new Vec2(to.size.x / from.size.x, to.size.y / from.size.y))\n      .translatedBy(to.origin)\n  }\n\n  times(other: AffineTransform) {\n    const m00 = this.m00 * other.m00 + this.m01 * other.m10\n    const m01 = this.m00 * other.m01 + this.m01 * other.m11\n    const m02 = this.m00 * other.m02 + this.m01 * other.m12 + this.m02\n\n    const m10 = this.m10 * other.m00 + this.m11 * other.m10\n    const m11 = this.m10 * other.m01 + this.m11 * other.m11\n    const m12 = this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n    return new AffineTransform(m00, m01, m02, m10, m11, m12)\n  }\n\n  equals(other: AffineTransform) {\n    return (\n      this.m00 == other.m00 &&\n      this.m01 == other.m01 &&\n      this.m02 == other.m02 &&\n      this.m10 == other.m10 &&\n      this.m11 == other.m11 &&\n      this.m12 == other.m12\n    )\n  }\n\n  approxEquals(other: AffineTransform, epsilon = 1e-9) {\n    return (\n      Math.abs(this.m00 - other.m00) < epsilon &&\n      Math.abs(this.m01 - other.m01) < epsilon &&\n      Math.abs(this.m02 - other.m02) < epsilon &&\n      Math.abs(this.m10 - other.m10) < epsilon &&\n      Math.abs(this.m11 - other.m11) < epsilon &&\n      Math.abs(this.m12 - other.m12) < epsilon\n    )\n  }\n\n  timesScalar(s: number) {\n    const {m00, m01, m02, m10, m11, m12} = this\n    return new AffineTransform(s * m00, s * m01, s * m02, s * m10, s * m11, s * m12)\n  }\n\n  det() {\n    const {m00, m01, m02, m10, m11, m12} = this\n    const m20 = 0\n    const m21 = 0\n    const m22 = 1\n\n    return (\n      m00 * (m11 * m22 - m12 * m21) - m01 * (m10 * m22 - m12 * m20) + m02 * (m10 * m21 - m11 * m20)\n    )\n  }\n\n  adj() {\n    const {m00, m01, m02, m10, m11, m12} = this\n    const m20 = 0\n    const m21 = 0\n    const m22 = 1\n\n    // Adjugate matrix (a) is the transpose of the\n    // cofactor matrix (c).\n    //\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n\n    const a00 = /* c00 = */ +(m11 * m22 - m12 * m21)\n    const a01 = /* c10 = */ -(m01 * m22 - m02 * m21)\n    const a02 = /* c20 = */ +(m01 * m12 - m02 * m11)\n    const a10 = /* c01 = */ -(m10 * m22 - m12 * m20)\n    const a11 = /* c11 = */ +(m00 * m22 - m02 * m20)\n    const a12 = /* c21 = */ -(m00 * m12 - m02 * m10)\n\n    return new AffineTransform(a00, a01, a02, a10, a11, a12)\n  }\n\n  inverted(): AffineTransform | null {\n    const det = this.det()\n    if (det === 0) return null\n    const adj = this.adj()\n    return adj.timesScalar(1 / det)\n  }\n\n  transformVector(v: Vec2) {\n    return new Vec2(v.x * this.m00 + v.y * this.m01, v.x * this.m10 + v.y * this.m11)\n  }\n\n  inverseTransformVector(v: Vec2): Vec2 | null {\n    const inv = this.inverted()\n    if (!inv) return null\n    return inv.transformVector(v)\n  }\n\n  transformPosition(v: Vec2) {\n    return new Vec2(\n      v.x * this.m00 + v.y * this.m01 + this.m02,\n      v.x * this.m10 + v.y * this.m11 + this.m12,\n    )\n  }\n\n  inverseTransformPosition(v: Vec2): Vec2 | null {\n    const inv = this.inverted()\n    if (!inv) return null\n    return inv.transformPosition(v)\n  }\n\n  transformRect(r: Rect) {\n    const size = this.transformVector(r.size)\n    const origin = this.transformPosition(r.origin)\n\n    if (size.x < 0 && size.y < 0) {\n      return new Rect(origin.plus(size), size.abs())\n    } else if (size.x < 0) {\n      return new Rect(origin.withX(origin.x + size.x), size.abs())\n    } else if (size.y < 0) {\n      return new Rect(origin.withY(origin.y + size.y), size.abs())\n    }\n\n    return new Rect(origin, size)\n  }\n\n  inverseTransformRect(r: Rect): Rect | null {\n    const inv = this.inverted()\n    if (!inv) return null\n    return inv.transformRect(r)\n  }\n\n  flatten(): [number, number, number, number, number, number, number, number, number] {\n    // Flatten into GLSL format\n    // prettier-ignore\n    return [\n      this.m00, this.m10, 0,\n      this.m01, this.m11, 0,\n      this.m02, this.m12, 1,\n    ]\n  }\n}\n\nexport class Rect {\n  constructor(readonly origin: Vec2, readonly size: Vec2) {}\n\n  isEmpty() {\n    return this.width() == 0 || this.height() == 0\n  }\n\n  width() {\n    return this.size.x\n  }\n  height() {\n    return this.size.y\n  }\n\n  left() {\n    return this.origin.x\n  }\n  right() {\n    return this.left() + this.width()\n  }\n  top() {\n    return this.origin.y\n  }\n  bottom() {\n    return this.top() + this.height()\n  }\n\n  topLeft() {\n    return this.origin\n  }\n  topRight() {\n    return this.origin.plus(new Vec2(this.width(), 0))\n  }\n\n  bottomRight() {\n    return this.origin.plus(this.size)\n  }\n  bottomLeft() {\n    return this.origin.plus(new Vec2(0, this.height()))\n  }\n\n  withOrigin(origin: Vec2) {\n    return new Rect(origin, this.size)\n  }\n  withSize(size: Vec2) {\n    return new Rect(this.origin, size)\n  }\n\n  closestPointTo(p: Vec2) {\n    return new Vec2(clamp(p.x, this.left(), this.right()), clamp(p.y, this.top(), this.bottom()))\n  }\n\n  distanceFrom(p: Vec2) {\n    return p.minus(this.closestPointTo(p)).length()\n  }\n\n  contains(p: Vec2) {\n    return this.distanceFrom(p) === 0\n  }\n\n  hasIntersectionWith(other: Rect) {\n    const top = Math.max(this.top(), other.top())\n    const bottom = Math.max(top, Math.min(this.bottom(), other.bottom()))\n    if (bottom - top === 0) return false\n\n    const left = Math.max(this.left(), other.left())\n    const right = Math.max(left, Math.min(this.right(), other.right()))\n    if (right - left === 0) return false\n    return true\n  }\n\n  intersectWith(other: Rect): Rect {\n    const topLeft = Vec2.max(this.topLeft(), other.topLeft())\n    const bottomRight = Vec2.max(topLeft, Vec2.min(this.bottomRight(), other.bottomRight()))\n\n    return new Rect(topLeft, bottomRight.minus(topLeft))\n  }\n\n  equals(other: Rect) {\n    return this.origin.equals(other.origin) && this.size.equals(other.size)\n  }\n\n  approxEquals(other: Rect) {\n    return this.origin.approxEquals(other.origin) && this.size.approxEquals(other.size)\n  }\n\n  area() {\n    return this.size.x * this.size.y\n  }\n\n  static empty = new Rect(Vec2.zero, Vec2.zero)\n  static unit = new Rect(Vec2.zero, Vec2.unit)\n  static NDC = new Rect(new Vec2(-1, -1), new Vec2(2, 2))\n}\n","export class Color {\n  constructor(\n    readonly r: number = 0,\n    readonly g: number = 0,\n    readonly b: number = 0,\n    readonly a: number = 1,\n  ) {}\n\n  static fromLumaChromaHue(L: number, C: number, H: number) {\n    // https://en.wikipedia.org/wiki/HSL_and_HSV#From_luma/chroma/hue\n\n    const hPrime = H / 60\n    const X = C * (1 - Math.abs(hPrime % 2 - 1))\n    const [R1, G1, B1] =\n      hPrime < 1\n        ? [C, X, 0]\n        : hPrime < 2\n          ? [X, C, 0]\n          : hPrime < 3\n            ? [0, C, X]\n            : hPrime < 4\n              ? [0, X, C]\n              : hPrime < 5\n                ? [X, 0, C]\n                : [C, 0, X]\n\n    const m = L - (0.3 * R1 + 0.59 * G1 + 0.11 * B1)\n\n    return new Color(R1 + m, G1 + m, B1 + m, 1.0)\n  }\n\n  toCSS(): string {\n    return `rgba(${(255 * this.r).toFixed()}, ${(255 * this.g).toFixed()}, ${(\n      255 * this.b\n    ).toFixed()}, ${this.a.toFixed(2)})`\n  }\n}\n","import regl from 'regl'\nimport {Flamechart} from './flamechart'\nimport {RectangleBatch} from './rectangle-batch-renderer'\nimport {CanvasContext} from './canvas-context'\nimport {Vec2, Rect, AffineTransform} from './math'\nimport {Color} from './color'\nimport {KeyedSet} from './utils'\nimport {RowAtlas} from './row-atlas'\n\nconst MAX_BATCH_SIZE = 10000\n\ninterface RangeTreeNode {\n  getBounds(): Rect\n  getRectCount(): number\n  getChildren(): RangeTreeNode[]\n  forEachLeafNodeWithinBounds(configSpaceBounds: Rect, cb: (leaf: RangeTreeLeafNode) => void): void\n}\n\nclass RangeTreeLeafNode implements RangeTreeNode {\n  private children: RangeTreeNode[] = []\n\n  constructor(\n    private batch: RectangleBatch,\n    private bounds: Rect,\n    private numPrecedingRectanglesInRow: number,\n  ) {\n    batch.uploadToGPU()\n  }\n\n  getBatch() {\n    return this.batch\n  }\n  getBounds() {\n    return this.bounds\n  }\n  getRectCount() {\n    return this.batch.getRectCount()\n  }\n  getChildren() {\n    return this.children\n  }\n  getParity() {\n    return this.numPrecedingRectanglesInRow % 2\n  }\n  forEachLeafNodeWithinBounds(configSpaceBounds: Rect, cb: (leaf: RangeTreeLeafNode) => void) {\n    if (!this.bounds.hasIntersectionWith(configSpaceBounds)) return\n    cb(this)\n  }\n}\n\nclass RangeTreeInteriorNode implements RangeTreeNode {\n  private rectCount: number = 0\n  private bounds: Rect\n  constructor(private children: RangeTreeNode[]) {\n    if (children.length === 0) {\n      throw new Error('Empty interior node')\n    }\n    let minLeft = Infinity\n    let maxRight = -Infinity\n    let minTop = Infinity\n    let maxBottom = -Infinity\n    for (let child of children) {\n      this.rectCount += child.getRectCount()\n      const bounds = child.getBounds()\n      minLeft = Math.min(minLeft, bounds.left())\n      maxRight = Math.max(maxRight, bounds.right())\n      minTop = Math.min(minTop, bounds.top())\n      maxBottom = Math.max(maxBottom, bounds.bottom())\n    }\n    this.bounds = new Rect(\n      new Vec2(minLeft, minTop),\n      new Vec2(maxRight - minLeft, maxBottom - minTop),\n    )\n  }\n\n  getBounds() {\n    return this.bounds\n  }\n  getRectCount() {\n    return this.rectCount\n  }\n  getChildren() {\n    return this.children\n  }\n\n  forEachLeafNodeWithinBounds(configSpaceBounds: Rect, cb: (leaf: RangeTreeLeafNode) => void) {\n    if (!this.bounds.hasIntersectionWith(configSpaceBounds)) return\n    for (let child of this.children) {\n      child.forEachLeafNodeWithinBounds(configSpaceBounds, cb)\n    }\n  }\n}\n\nexport interface FlamechartRendererProps {\n  configSpaceSrcRect: Rect\n  physicalSpaceDstRect: Rect\n  renderOutlines: boolean\n}\n\ninterface FlamechartRowAtlasKeyInfo {\n  stackDepth: number\n  zoomLevel: number\n  index: number\n}\n\nexport class FlamechartRowAtlasKey {\n  readonly stackDepth: number\n  readonly zoomLevel: number\n  readonly index: number\n\n  get key() {\n    return `${this.stackDepth}_${this.index}_${this.zoomLevel}`\n  }\n  private constructor(options: FlamechartRowAtlasKeyInfo) {\n    this.stackDepth = options.stackDepth\n    this.zoomLevel = options.zoomLevel\n    this.index = options.index\n  }\n  static getOrInsert(set: KeyedSet<FlamechartRowAtlasKey>, info: FlamechartRowAtlasKeyInfo) {\n    return set.getOrInsert(new FlamechartRowAtlasKey(info))\n  }\n}\n\ninterface RendererOptions {\n  inverted: boolean\n}\n\nexport class FlamechartRenderer {\n  private layers: RangeTreeNode[] = []\n  private rectInfoTexture: regl.Texture\n  private framebuffer: regl.Framebuffer\n\n  constructor(\n    private canvasContext: CanvasContext,\n    private rowAtlas: RowAtlas<FlamechartRowAtlasKey>,\n    private flamechart: Flamechart,\n    private options: RendererOptions = {inverted: false},\n  ) {\n    const nLayers = flamechart.getLayers().length\n    for (let stackDepth = 0; stackDepth < nLayers; stackDepth++) {\n      const leafNodes: RangeTreeLeafNode[] = []\n      const y = options.inverted ? nLayers - 1 - stackDepth : stackDepth\n\n      let minLeft = Infinity\n      let maxRight = -Infinity\n      let batch = canvasContext.createRectangleBatch()\n\n      let rectCount = 0\n\n      const layer = flamechart.getLayers()[stackDepth]\n\n      for (let i = 0; i < layer.length; i++) {\n        const frame = layer[i]\n        if (batch.getRectCount() >= MAX_BATCH_SIZE) {\n          leafNodes.push(\n            new RangeTreeLeafNode(\n              batch,\n              new Rect(new Vec2(minLeft, y), new Vec2(maxRight - minLeft, 1)),\n              rectCount,\n            ),\n          )\n          minLeft = Infinity\n          maxRight = -Infinity\n          batch = canvasContext.createRectangleBatch()\n        }\n        const configSpaceBounds = new Rect(\n          new Vec2(frame.start, y),\n          new Vec2(frame.end - frame.start, 1),\n        )\n        minLeft = Math.min(minLeft, configSpaceBounds.left())\n        maxRight = Math.max(maxRight, configSpaceBounds.right())\n\n        // We'll use the red channel to indicate the index to allow\n        // us to separate adjacent rectangles within a row from one another,\n        // the green channel to indicate the row,\n        // and the blue channel to indicate the color bucket to render.\n        // We add one to each so we have zero reserved for the background color.\n        const color = new Color(\n          (1 + i % 255) / 256,\n          (1 + stackDepth % 255) / 256,\n          (1 + this.flamechart.getColorBucketForFrame(frame.node.frame)) / 256,\n        )\n        batch.addRect(configSpaceBounds, color)\n        rectCount++\n      }\n\n      if (batch.getRectCount() > 0) {\n        leafNodes.push(\n          new RangeTreeLeafNode(\n            batch,\n            new Rect(new Vec2(minLeft, y), new Vec2(maxRight - minLeft, 1)),\n            rectCount,\n          ),\n        )\n      }\n\n      // TODO(jlfwong): Making this into a binary tree\n      // range than a tree of always-height-two might make this run faster\n      this.layers.push(new RangeTreeInteriorNode(leafNodes))\n    }\n    this.rectInfoTexture = this.canvasContext.gl.texture({width: 1, height: 1})\n    this.framebuffer = this.canvasContext.gl.framebuffer({\n      color: [this.rectInfoTexture],\n    })\n  }\n\n  private atlasKeys = new KeyedSet<FlamechartRowAtlasKey>()\n\n  configSpaceBoundsForKey(key: FlamechartRowAtlasKey): Rect {\n    const {stackDepth, zoomLevel, index} = key\n    const configSpaceContentWidth = this.flamechart.getTotalWeight()\n\n    const width = configSpaceContentWidth / Math.pow(2, zoomLevel)\n\n    const nLayers = this.flamechart.getLayers().length\n    const y = this.options.inverted ? nLayers - 1 - stackDepth : stackDepth\n    return new Rect(new Vec2(width * index, y), new Vec2(width, 1))\n  }\n\n  render(props: FlamechartRendererProps) {\n    const {configSpaceSrcRect, physicalSpaceDstRect} = props\n\n    const atlasKeysToRender: FlamechartRowAtlasKey[] = []\n\n    // We want to render the lowest resolution we can while still guaranteeing that the\n    // atlas line is higher resolution than its corresponding destination rectangle on\n    // the screen.\n    const configToPhysical = AffineTransform.betweenRects(configSpaceSrcRect, physicalSpaceDstRect)\n    if (configSpaceSrcRect.isEmpty()) {\n      // Prevent an infinite loop\n      return\n    }\n\n    let zoomLevel = 0\n    while (true) {\n      const key = FlamechartRowAtlasKey.getOrInsert(this.atlasKeys, {\n        stackDepth: 0,\n        zoomLevel,\n        index: 0,\n      })\n      const configSpaceBounds = this.configSpaceBoundsForKey(key)\n      const physicalBounds = configToPhysical.transformRect(configSpaceBounds)\n      if (physicalBounds.width() < this.rowAtlas.getResolution()) {\n        break\n      }\n      zoomLevel++\n    }\n\n    const top = Math.max(0, Math.floor(configSpaceSrcRect.top()))\n    const bottom = Math.min(this.layers.length, Math.ceil(configSpaceSrcRect.bottom()))\n\n    const configSpaceContentWidth = this.flamechart.getTotalWeight()\n    const numAtlasEntriesPerLayer = Math.pow(2, zoomLevel)\n    const left = Math.floor(\n      numAtlasEntriesPerLayer * configSpaceSrcRect.left() / configSpaceContentWidth,\n    )\n    const right = Math.ceil(\n      numAtlasEntriesPerLayer * configSpaceSrcRect.right() / configSpaceContentWidth,\n    )\n\n    const nLayers = this.flamechart.getLayers().length\n\n    for (let y = top; y < bottom; y++) {\n      for (let index = left; index <= right; index++) {\n        const stackDepth = this.options.inverted ? nLayers - 1 - y : y\n        const key = FlamechartRowAtlasKey.getOrInsert(this.atlasKeys, {\n          stackDepth,\n          zoomLevel,\n          index,\n        })\n        const configSpaceBounds = this.configSpaceBoundsForKey(key)\n        if (!configSpaceBounds.hasIntersectionWith(configSpaceSrcRect)) continue\n        atlasKeysToRender.push(key)\n      }\n    }\n\n    const cacheCapacity = this.rowAtlas.getCapacity()\n    const keysToRenderCached = atlasKeysToRender.slice(0, cacheCapacity)\n    const keysToRenderUncached = atlasKeysToRender.slice(cacheCapacity)\n\n    // Fill the cache\n    this.rowAtlas.writeToAtlasIfNeeded(keysToRenderCached, (textureDstRect, key) => {\n      const configSpaceBounds = this.configSpaceBoundsForKey(key)\n      this.layers[key.stackDepth].forEachLeafNodeWithinBounds(configSpaceBounds, leaf => {\n        this.canvasContext.drawRectangleBatch({\n          batch: leaf.getBatch(),\n          configSpaceSrcRect: configSpaceBounds,\n          physicalSpaceDstRect: textureDstRect,\n          parityMin: key.stackDepth % 2 == 0 ? 2 : 0,\n          parityOffset: leaf.getParity(),\n        })\n      })\n    })\n\n    this.framebuffer.resize(physicalSpaceDstRect.width(), physicalSpaceDstRect.height())\n    this.framebuffer.use(context => {\n      this.canvasContext.gl.clear({color: [0, 0, 0, 0]})\n      const viewportRect = new Rect(\n        Vec2.zero,\n        new Vec2(context.viewportWidth, context.viewportHeight),\n      )\n\n      const configToViewport = AffineTransform.betweenRects(configSpaceSrcRect, viewportRect)\n\n      // Render from the cache\n      for (let key of keysToRenderCached) {\n        const configSpaceSrcRect = this.configSpaceBoundsForKey(key)\n        this.rowAtlas.renderViaAtlas(key, configToViewport.transformRect(configSpaceSrcRect))\n      }\n\n      // Render entries that didn't make it into the cache\n      for (let key of keysToRenderUncached) {\n        const configSpaceBounds = this.configSpaceBoundsForKey(key)\n        const physicalBounds = configToViewport.transformRect(configSpaceBounds)\n        this.layers[key.stackDepth].forEachLeafNodeWithinBounds(configSpaceBounds, leaf => {\n          this.canvasContext.drawRectangleBatch({\n            batch: leaf.getBatch(),\n            configSpaceSrcRect,\n            physicalSpaceDstRect: physicalBounds,\n            parityMin: key.stackDepth % 2 == 0 ? 2 : 0,\n            parityOffset: leaf.getParity(),\n          })\n        })\n      }\n    })\n\n    this.canvasContext.drawFlamechartColorPass({\n      rectInfoTexture: this.rectInfoTexture,\n      srcRect: new Rect(\n        Vec2.zero,\n        new Vec2(this.rectInfoTexture.width, this.rectInfoTexture.height),\n      ),\n      dstRect: physicalSpaceDstRect,\n      renderOutlines: props.renderOutlines,\n    })\n\n    // Overlay the atlas on top of the canvas for debugging\n    /*\n    this.canvasContext.drawTexture({\n      texture: this.rowAtlas.texture,\n      srcRect: new Rect(Vec2.zero, new Vec2(this.rowAtlas.texture.width, this.rowAtlas.texture.height)),\n      dstRect: new Rect(Vec2.zero, new Vec2(800, 800))\n    })\n    */\n  }\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.createREGL = factory());\n}(this, (function () { 'use strict';\n\nvar isTypedArray = function (x) {\n  return (\n    x instanceof Uint8Array ||\n    x instanceof Uint16Array ||\n    x instanceof Uint32Array ||\n    x instanceof Int8Array ||\n    x instanceof Int16Array ||\n    x instanceof Int32Array ||\n    x instanceof Float32Array ||\n    x instanceof Float64Array ||\n    x instanceof Uint8ClampedArray\n  )\n};\n\nvar extend = function (base, opts) {\n  var keys = Object.keys(opts);\n  for (var i = 0; i < keys.length; ++i) {\n    base[keys[i]] = opts[keys[i]];\n  }\n  return base\n};\n\n// Error checking and parameter validation.\n//\n// Statements for the form `check.someProcedure(...)` get removed by\n// a browserify transform for optimized/minified bundles.\n//\n/* globals btoa */\n// only used for extracting shader names.  if btoa not present, then errors\n// will be slightly crappier\nfunction decodeB64 (str) {\n  if (typeof btoa !== 'undefined') {\n    return btoa(str)\n  }\n  return 'base64:' + str\n}\n\nfunction raise (message) {\n  var error = new Error('(regl) ' + message);\n  console.error(error);\n  throw error\n}\n\nfunction check (pred, message) {\n  if (!pred) {\n    raise(message);\n  }\n}\n\nfunction encolon (message) {\n  if (message) {\n    return ': ' + message\n  }\n  return ''\n}\n\nfunction checkParameter (param, possibilities, message) {\n  if (!(param in possibilities)) {\n    raise('unknown parameter (' + param + ')' + encolon(message) +\n          '. possible values: ' + Object.keys(possibilities).join());\n  }\n}\n\nfunction checkIsTypedArray (data, message) {\n  if (!isTypedArray(data)) {\n    raise(\n      'invalid parameter type' + encolon(message) +\n      '. must be a typed array');\n  }\n}\n\nfunction checkTypeOf (value, type, message) {\n  if (typeof value !== type) {\n    raise(\n      'invalid parameter type' + encolon(message) +\n      '. expected ' + type + ', got ' + (typeof value));\n  }\n}\n\nfunction checkNonNegativeInt (value, message) {\n  if (!((value >= 0) &&\n        ((value | 0) === value))) {\n    raise('invalid parameter type, (' + value + ')' + encolon(message) +\n          '. must be a nonnegative integer');\n  }\n}\n\nfunction checkOneOf (value, list, message) {\n  if (list.indexOf(value) < 0) {\n    raise('invalid value' + encolon(message) + '. must be one of: ' + list);\n  }\n}\n\nvar constructorKeys = [\n  'gl',\n  'canvas',\n  'container',\n  'attributes',\n  'pixelRatio',\n  'extensions',\n  'optionalExtensions',\n  'profile',\n  'onDone'\n];\n\nfunction checkConstructor (obj) {\n  Object.keys(obj).forEach(function (key) {\n    if (constructorKeys.indexOf(key) < 0) {\n      raise('invalid regl constructor argument \"' + key + '\". must be one of ' + constructorKeys);\n    }\n  });\n}\n\nfunction leftPad (str, n) {\n  str = str + '';\n  while (str.length < n) {\n    str = ' ' + str;\n  }\n  return str\n}\n\nfunction ShaderFile () {\n  this.name = 'unknown';\n  this.lines = [];\n  this.index = {};\n  this.hasErrors = false;\n}\n\nfunction ShaderLine (number, line) {\n  this.number = number;\n  this.line = line;\n  this.errors = [];\n}\n\nfunction ShaderError (fileNumber, lineNumber, message) {\n  this.file = fileNumber;\n  this.line = lineNumber;\n  this.message = message;\n}\n\nfunction guessCommand () {\n  var error = new Error();\n  var stack = (error.stack || error).toString();\n  var pat = /compileProcedure.*\\n\\s*at.*\\((.*)\\)/.exec(stack);\n  if (pat) {\n    return pat[1]\n  }\n  var pat2 = /compileProcedure.*\\n\\s*at\\s+(.*)(\\n|$)/.exec(stack);\n  if (pat2) {\n    return pat2[1]\n  }\n  return 'unknown'\n}\n\nfunction guessCallSite () {\n  var error = new Error();\n  var stack = (error.stack || error).toString();\n  var pat = /at REGLCommand.*\\n\\s+at.*\\((.*)\\)/.exec(stack);\n  if (pat) {\n    return pat[1]\n  }\n  var pat2 = /at REGLCommand.*\\n\\s+at\\s+(.*)\\n/.exec(stack);\n  if (pat2) {\n    return pat2[1]\n  }\n  return 'unknown'\n}\n\nfunction parseSource (source, command) {\n  var lines = source.split('\\n');\n  var lineNumber = 1;\n  var fileNumber = 0;\n  var files = {\n    unknown: new ShaderFile(),\n    0: new ShaderFile()\n  };\n  files.unknown.name = files[0].name = command || guessCommand();\n  files.unknown.lines.push(new ShaderLine(0, ''));\n  for (var i = 0; i < lines.length; ++i) {\n    var line = lines[i];\n    var parts = /^\\s*\\#\\s*(\\w+)\\s+(.+)\\s*$/.exec(line);\n    if (parts) {\n      switch (parts[1]) {\n        case 'line':\n          var lineNumberInfo = /(\\d+)(\\s+\\d+)?/.exec(parts[2]);\n          if (lineNumberInfo) {\n            lineNumber = lineNumberInfo[1] | 0;\n            if (lineNumberInfo[2]) {\n              fileNumber = lineNumberInfo[2] | 0;\n              if (!(fileNumber in files)) {\n                files[fileNumber] = new ShaderFile();\n              }\n            }\n          }\n          break\n        case 'define':\n          var nameInfo = /SHADER_NAME(_B64)?\\s+(.*)$/.exec(parts[2]);\n          if (nameInfo) {\n            files[fileNumber].name = (nameInfo[1]\n                ? decodeB64(nameInfo[2])\n                : nameInfo[2]);\n          }\n          break\n      }\n    }\n    files[fileNumber].lines.push(new ShaderLine(lineNumber++, line));\n  }\n  Object.keys(files).forEach(function (fileNumber) {\n    var file = files[fileNumber];\n    file.lines.forEach(function (line) {\n      file.index[line.number] = line;\n    });\n  });\n  return files\n}\n\nfunction parseErrorLog (errLog) {\n  var result = [];\n  errLog.split('\\n').forEach(function (errMsg) {\n    if (errMsg.length < 5) {\n      return\n    }\n    var parts = /^ERROR\\:\\s+(\\d+)\\:(\\d+)\\:\\s*(.*)$/.exec(errMsg);\n    if (parts) {\n      result.push(new ShaderError(\n        parts[1] | 0,\n        parts[2] | 0,\n        parts[3].trim()));\n    } else if (errMsg.length > 0) {\n      result.push(new ShaderError('unknown', 0, errMsg));\n    }\n  });\n  return result\n}\n\nfunction annotateFiles (files, errors) {\n  errors.forEach(function (error) {\n    var file = files[error.file];\n    if (file) {\n      var line = file.index[error.line];\n      if (line) {\n        line.errors.push(error);\n        file.hasErrors = true;\n        return\n      }\n    }\n    files.unknown.hasErrors = true;\n    files.unknown.lines[0].errors.push(error);\n  });\n}\n\nfunction checkShaderError (gl, shader, source, type, command) {\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    var errLog = gl.getShaderInfoLog(shader);\n    var typeName = type === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex';\n    checkCommandType(source, 'string', typeName + ' shader source must be a string', command);\n    var files = parseSource(source, command);\n    var errors = parseErrorLog(errLog);\n    annotateFiles(files, errors);\n\n    Object.keys(files).forEach(function (fileNumber) {\n      var file = files[fileNumber];\n      if (!file.hasErrors) {\n        return\n      }\n\n      var strings = [''];\n      var styles = [''];\n\n      function push (str, style) {\n        strings.push(str);\n        styles.push(style || '');\n      }\n\n      push('file number ' + fileNumber + ': ' + file.name + '\\n', 'color:red;text-decoration:underline;font-weight:bold');\n\n      file.lines.forEach(function (line) {\n        if (line.errors.length > 0) {\n          push(leftPad(line.number, 4) + '|  ', 'background-color:yellow; font-weight:bold');\n          push(line.line + '\\n', 'color:red; background-color:yellow; font-weight:bold');\n\n          // try to guess token\n          var offset = 0;\n          line.errors.forEach(function (error) {\n            var message = error.message;\n            var token = /^\\s*\\'(.*)\\'\\s*\\:\\s*(.*)$/.exec(message);\n            if (token) {\n              var tokenPat = token[1];\n              message = token[2];\n              switch (tokenPat) {\n                case 'assign':\n                  tokenPat = '=';\n                  break\n              }\n              offset = Math.max(line.line.indexOf(tokenPat, offset), 0);\n            } else {\n              offset = 0;\n            }\n\n            push(leftPad('| ', 6));\n            push(leftPad('^^^', offset + 3) + '\\n', 'font-weight:bold');\n            push(leftPad('| ', 6));\n            push(message + '\\n', 'font-weight:bold');\n          });\n          push(leftPad('| ', 6) + '\\n');\n        } else {\n          push(leftPad(line.number, 4) + '|  ');\n          push(line.line + '\\n', 'color:red');\n        }\n      });\n      if (typeof document !== 'undefined') {\n        styles[0] = strings.join('%c');\n        console.log.apply(console, styles);\n      } else {\n        console.log(strings.join(''));\n      }\n    });\n\n    check.raise('Error compiling ' + typeName + ' shader, ' + files[0].name);\n  }\n}\n\nfunction checkLinkError (gl, program, fragShader, vertShader, command) {\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    var errLog = gl.getProgramInfoLog(program);\n    var fragParse = parseSource(fragShader, command);\n    var vertParse = parseSource(vertShader, command);\n\n    var header = 'Error linking program with vertex shader, \"' +\n      vertParse[0].name + '\", and fragment shader \"' + fragParse[0].name + '\"';\n\n    if (typeof document !== 'undefined') {\n      console.log('%c' + header + '\\n%c' + errLog,\n        'color:red;text-decoration:underline;font-weight:bold',\n        'color:red');\n    } else {\n      console.log(header + '\\n' + errLog);\n    }\n    check.raise(header);\n  }\n}\n\nfunction saveCommandRef (object) {\n  object._commandRef = guessCommand();\n}\n\nfunction saveDrawCommandInfo (opts, uniforms, attributes, stringStore) {\n  saveCommandRef(opts);\n\n  function id (str) {\n    if (str) {\n      return stringStore.id(str)\n    }\n    return 0\n  }\n  opts._fragId = id(opts.static.frag);\n  opts._vertId = id(opts.static.vert);\n\n  function addProps (dict, set) {\n    Object.keys(set).forEach(function (u) {\n      dict[stringStore.id(u)] = true;\n    });\n  }\n\n  var uniformSet = opts._uniformSet = {};\n  addProps(uniformSet, uniforms.static);\n  addProps(uniformSet, uniforms.dynamic);\n\n  var attributeSet = opts._attributeSet = {};\n  addProps(attributeSet, attributes.static);\n  addProps(attributeSet, attributes.dynamic);\n\n  opts._hasCount = (\n    'count' in opts.static ||\n    'count' in opts.dynamic ||\n    'elements' in opts.static ||\n    'elements' in opts.dynamic);\n}\n\nfunction commandRaise (message, command) {\n  var callSite = guessCallSite();\n  raise(message +\n    ' in command ' + (command || guessCommand()) +\n    (callSite === 'unknown' ? '' : ' called from ' + callSite));\n}\n\nfunction checkCommand (pred, message, command) {\n  if (!pred) {\n    commandRaise(message, command || guessCommand());\n  }\n}\n\nfunction checkParameterCommand (param, possibilities, message, command) {\n  if (!(param in possibilities)) {\n    commandRaise(\n      'unknown parameter (' + param + ')' + encolon(message) +\n      '. possible values: ' + Object.keys(possibilities).join(),\n      command || guessCommand());\n  }\n}\n\nfunction checkCommandType (value, type, message, command) {\n  if (typeof value !== type) {\n    commandRaise(\n      'invalid parameter type' + encolon(message) +\n      '. expected ' + type + ', got ' + (typeof value),\n      command || guessCommand());\n  }\n}\n\nfunction checkOptional (block) {\n  block();\n}\n\nfunction checkFramebufferFormat (attachment, texFormats, rbFormats) {\n  if (attachment.texture) {\n    checkOneOf(\n      attachment.texture._texture.internalformat,\n      texFormats,\n      'unsupported texture format for attachment');\n  } else {\n    checkOneOf(\n      attachment.renderbuffer._renderbuffer.format,\n      rbFormats,\n      'unsupported renderbuffer format for attachment');\n  }\n}\n\nvar GL_CLAMP_TO_EDGE = 0x812F;\n\nvar GL_NEAREST = 0x2600;\nvar GL_NEAREST_MIPMAP_NEAREST = 0x2700;\nvar GL_LINEAR_MIPMAP_NEAREST = 0x2701;\nvar GL_NEAREST_MIPMAP_LINEAR = 0x2702;\nvar GL_LINEAR_MIPMAP_LINEAR = 0x2703;\n\nvar GL_BYTE = 5120;\nvar GL_UNSIGNED_BYTE = 5121;\nvar GL_SHORT = 5122;\nvar GL_UNSIGNED_SHORT = 5123;\nvar GL_INT = 5124;\nvar GL_UNSIGNED_INT = 5125;\nvar GL_FLOAT = 5126;\n\nvar GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar GL_UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA;\n\nvar GL_HALF_FLOAT_OES = 0x8D61;\n\nvar TYPE_SIZE = {};\n\nTYPE_SIZE[GL_BYTE] =\nTYPE_SIZE[GL_UNSIGNED_BYTE] = 1;\n\nTYPE_SIZE[GL_SHORT] =\nTYPE_SIZE[GL_UNSIGNED_SHORT] =\nTYPE_SIZE[GL_HALF_FLOAT_OES] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_5_6_5] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_4_4_4_4] =\nTYPE_SIZE[GL_UNSIGNED_SHORT_5_5_5_1] = 2;\n\nTYPE_SIZE[GL_INT] =\nTYPE_SIZE[GL_UNSIGNED_INT] =\nTYPE_SIZE[GL_FLOAT] =\nTYPE_SIZE[GL_UNSIGNED_INT_24_8_WEBGL] = 4;\n\nfunction pixelSize (type, channels) {\n  if (type === GL_UNSIGNED_SHORT_5_5_5_1 ||\n      type === GL_UNSIGNED_SHORT_4_4_4_4 ||\n      type === GL_UNSIGNED_SHORT_5_6_5) {\n    return 2\n  } else if (type === GL_UNSIGNED_INT_24_8_WEBGL) {\n    return 4\n  } else {\n    return TYPE_SIZE[type] * channels\n  }\n}\n\nfunction isPow2 (v) {\n  return !(v & (v - 1)) && (!!v)\n}\n\nfunction checkTexture2D (info, mipData, limits) {\n  var i;\n  var w = mipData.width;\n  var h = mipData.height;\n  var c = mipData.channels;\n\n  // Check texture shape\n  check(w > 0 && w <= limits.maxTextureSize &&\n        h > 0 && h <= limits.maxTextureSize,\n        'invalid texture shape');\n\n  // check wrap mode\n  if (info.wrapS !== GL_CLAMP_TO_EDGE || info.wrapT !== GL_CLAMP_TO_EDGE) {\n    check(isPow2(w) && isPow2(h),\n      'incompatible wrap mode for texture, both width and height must be power of 2');\n  }\n\n  if (mipData.mipmask === 1) {\n    if (w !== 1 && h !== 1) {\n      check(\n        info.minFilter !== GL_NEAREST_MIPMAP_NEAREST &&\n        info.minFilter !== GL_NEAREST_MIPMAP_LINEAR &&\n        info.minFilter !== GL_LINEAR_MIPMAP_NEAREST &&\n        info.minFilter !== GL_LINEAR_MIPMAP_LINEAR,\n        'min filter requires mipmap');\n    }\n  } else {\n    // texture must be power of 2\n    check(isPow2(w) && isPow2(h),\n      'texture must be a square power of 2 to support mipmapping');\n    check(mipData.mipmask === (w << 1) - 1,\n      'missing or incomplete mipmap data');\n  }\n\n  if (mipData.type === GL_FLOAT) {\n    if (limits.extensions.indexOf('oes_texture_float_linear') < 0) {\n      check(info.minFilter === GL_NEAREST && info.magFilter === GL_NEAREST,\n        'filter not supported, must enable oes_texture_float_linear');\n    }\n    check(!info.genMipmaps,\n      'mipmap generation not supported with float textures');\n  }\n\n  // check image complete\n  var mipimages = mipData.images;\n  for (i = 0; i < 16; ++i) {\n    if (mipimages[i]) {\n      var mw = w >> i;\n      var mh = h >> i;\n      check(mipData.mipmask & (1 << i), 'missing mipmap data');\n\n      var img = mipimages[i];\n\n      check(\n        img.width === mw &&\n        img.height === mh,\n        'invalid shape for mip images');\n\n      check(\n        img.format === mipData.format &&\n        img.internalformat === mipData.internalformat &&\n        img.type === mipData.type,\n        'incompatible type for mip image');\n\n      if (img.compressed) {\n        // TODO: check size for compressed images\n      } else if (img.data) {\n        // check(img.data.byteLength === mw * mh *\n        // Math.max(pixelSize(img.type, c), img.unpackAlignment),\n        var rowSize = Math.ceil(pixelSize(img.type, c) * mw / img.unpackAlignment) * img.unpackAlignment;\n        check(img.data.byteLength === rowSize * mh,\n          'invalid data for image, buffer size is inconsistent with image format');\n      } else if (img.element) {\n        // TODO: check element can be loaded\n      } else if (img.copy) {\n        // TODO: check compatible format and type\n      }\n    } else if (!info.genMipmaps) {\n      check((mipData.mipmask & (1 << i)) === 0, 'extra mipmap data');\n    }\n  }\n\n  if (mipData.compressed) {\n    check(!info.genMipmaps,\n      'mipmap generation for compressed images not supported');\n  }\n}\n\nfunction checkTextureCube (texture, info, faces, limits) {\n  var w = texture.width;\n  var h = texture.height;\n  var c = texture.channels;\n\n  // Check texture shape\n  check(\n    w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize,\n    'invalid texture shape');\n  check(\n    w === h,\n    'cube map must be square');\n  check(\n    info.wrapS === GL_CLAMP_TO_EDGE && info.wrapT === GL_CLAMP_TO_EDGE,\n    'wrap mode not supported by cube map');\n\n  for (var i = 0; i < faces.length; ++i) {\n    var face = faces[i];\n    check(\n      face.width === w && face.height === h,\n      'inconsistent cube map face shape');\n\n    if (info.genMipmaps) {\n      check(!face.compressed,\n        'can not generate mipmap for compressed textures');\n      check(face.mipmask === 1,\n        'can not specify mipmaps and generate mipmaps');\n    } else {\n      // TODO: check mip and filter mode\n    }\n\n    var mipmaps = face.images;\n    for (var j = 0; j < 16; ++j) {\n      var img = mipmaps[j];\n      if (img) {\n        var mw = w >> j;\n        var mh = h >> j;\n        check(face.mipmask & (1 << j), 'missing mipmap data');\n        check(\n          img.width === mw &&\n          img.height === mh,\n          'invalid shape for mip images');\n        check(\n          img.format === texture.format &&\n          img.internalformat === texture.internalformat &&\n          img.type === texture.type,\n          'incompatible type for mip image');\n\n        if (img.compressed) {\n          // TODO: check size for compressed images\n        } else if (img.data) {\n          check(img.data.byteLength === mw * mh *\n            Math.max(pixelSize(img.type, c), img.unpackAlignment),\n            'invalid data for image, buffer size is inconsistent with image format');\n        } else if (img.element) {\n          // TODO: check element can be loaded\n        } else if (img.copy) {\n          // TODO: check compatible format and type\n        }\n      }\n    }\n  }\n}\n\nvar check$1 = extend(check, {\n  optional: checkOptional,\n  raise: raise,\n  commandRaise: commandRaise,\n  command: checkCommand,\n  parameter: checkParameter,\n  commandParameter: checkParameterCommand,\n  constructor: checkConstructor,\n  type: checkTypeOf,\n  commandType: checkCommandType,\n  isTypedArray: checkIsTypedArray,\n  nni: checkNonNegativeInt,\n  oneOf: checkOneOf,\n  shaderError: checkShaderError,\n  linkError: checkLinkError,\n  callSite: guessCallSite,\n  saveCommandRef: saveCommandRef,\n  saveDrawInfo: saveDrawCommandInfo,\n  framebufferFormat: checkFramebufferFormat,\n  guessCommand: guessCommand,\n  texture2D: checkTexture2D,\n  textureCube: checkTextureCube\n});\n\nvar VARIABLE_COUNTER = 0;\n\nvar DYN_FUNC = 0;\n\nfunction DynamicVariable (type, data) {\n  this.id = (VARIABLE_COUNTER++);\n  this.type = type;\n  this.data = data;\n}\n\nfunction escapeStr (str) {\n  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n}\n\nfunction splitParts (str) {\n  if (str.length === 0) {\n    return []\n  }\n\n  var firstChar = str.charAt(0);\n  var lastChar = str.charAt(str.length - 1);\n\n  if (str.length > 1 &&\n      firstChar === lastChar &&\n      (firstChar === '\"' || firstChar === \"'\")) {\n    return ['\"' + escapeStr(str.substr(1, str.length - 2)) + '\"']\n  }\n\n  var parts = /\\[(false|true|null|\\d+|'[^']*'|\"[^\"]*\")\\]/.exec(str);\n  if (parts) {\n    return (\n      splitParts(str.substr(0, parts.index))\n      .concat(splitParts(parts[1]))\n      .concat(splitParts(str.substr(parts.index + parts[0].length)))\n    )\n  }\n\n  var subparts = str.split('.');\n  if (subparts.length === 1) {\n    return ['\"' + escapeStr(str) + '\"']\n  }\n\n  var result = [];\n  for (var i = 0; i < subparts.length; ++i) {\n    result = result.concat(splitParts(subparts[i]));\n  }\n  return result\n}\n\nfunction toAccessorString (str) {\n  return '[' + splitParts(str).join('][') + ']'\n}\n\nfunction defineDynamic (type, data) {\n  return new DynamicVariable(type, toAccessorString(data + ''))\n}\n\nfunction isDynamic (x) {\n  return (typeof x === 'function' && !x._reglType) ||\n         x instanceof DynamicVariable\n}\n\nfunction unbox (x, path) {\n  if (typeof x === 'function') {\n    return new DynamicVariable(DYN_FUNC, x)\n  }\n  return x\n}\n\nvar dynamic = {\n  DynamicVariable: DynamicVariable,\n  define: defineDynamic,\n  isDynamic: isDynamic,\n  unbox: unbox,\n  accessor: toAccessorString\n};\n\n/* globals requestAnimationFrame, cancelAnimationFrame */\nvar raf = {\n  next: typeof requestAnimationFrame === 'function'\n    ? function (cb) { return requestAnimationFrame(cb) }\n    : function (cb) { return setTimeout(cb, 16) },\n  cancel: typeof cancelAnimationFrame === 'function'\n    ? function (raf) { return cancelAnimationFrame(raf) }\n    : clearTimeout\n};\n\n/* globals performance */\nvar clock = (typeof performance !== 'undefined' && performance.now)\n  ? function () { return performance.now() }\n  : function () { return +(new Date()) };\n\nfunction createStringStore () {\n  var stringIds = {'': 0};\n  var stringValues = [''];\n  return {\n    id: function (str) {\n      var result = stringIds[str];\n      if (result) {\n        return result\n      }\n      result = stringIds[str] = stringValues.length;\n      stringValues.push(str);\n      return result\n    },\n\n    str: function (id) {\n      return stringValues[id]\n    }\n  }\n}\n\n// Context and canvas creation helper functions\nfunction createCanvas (element, onDone, pixelRatio) {\n  var canvas = document.createElement('canvas');\n  extend(canvas.style, {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    top: 0,\n    left: 0\n  });\n  element.appendChild(canvas);\n\n  if (element === document.body) {\n    canvas.style.position = 'absolute';\n    extend(element.style, {\n      margin: 0,\n      padding: 0\n    });\n  }\n\n  function resize () {\n    var w = window.innerWidth;\n    var h = window.innerHeight;\n    if (element !== document.body) {\n      var bounds = element.getBoundingClientRect();\n      w = bounds.right - bounds.left;\n      h = bounds.bottom - bounds.top;\n    }\n    canvas.width = pixelRatio * w;\n    canvas.height = pixelRatio * h;\n    extend(canvas.style, {\n      width: w + 'px',\n      height: h + 'px'\n    });\n  }\n\n  window.addEventListener('resize', resize, false);\n\n  function onDestroy () {\n    window.removeEventListener('resize', resize);\n    element.removeChild(canvas);\n  }\n\n  resize();\n\n  return {\n    canvas: canvas,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createContext (canvas, contexAttributes) {\n  function get (name) {\n    try {\n      return canvas.getContext(name, contexAttributes)\n    } catch (e) {\n      return null\n    }\n  }\n  return (\n    get('webgl') ||\n    get('experimental-webgl') ||\n    get('webgl-experimental')\n  )\n}\n\nfunction isHTMLElement (obj) {\n  return (\n    typeof obj.nodeName === 'string' &&\n    typeof obj.appendChild === 'function' &&\n    typeof obj.getBoundingClientRect === 'function'\n  )\n}\n\nfunction isWebGLContext (obj) {\n  return (\n    typeof obj.drawArrays === 'function' ||\n    typeof obj.drawElements === 'function'\n  )\n}\n\nfunction parseExtensions (input) {\n  if (typeof input === 'string') {\n    return input.split()\n  }\n  check$1(Array.isArray(input), 'invalid extension array');\n  return input\n}\n\nfunction getElement (desc) {\n  if (typeof desc === 'string') {\n    check$1(typeof document !== 'undefined', 'not supported outside of DOM');\n    return document.querySelector(desc)\n  }\n  return desc\n}\n\nfunction parseArgs (args_) {\n  var args = args_ || {};\n  var element, container, canvas, gl;\n  var contextAttributes = {};\n  var extensions = [];\n  var optionalExtensions = [];\n  var pixelRatio = (typeof window === 'undefined' ? 1 : window.devicePixelRatio);\n  var profile = false;\n  var onDone = function (err) {\n    if (err) {\n      check$1.raise(err);\n    }\n  };\n  var onDestroy = function () {};\n  if (typeof args === 'string') {\n    check$1(\n      typeof document !== 'undefined',\n      'selector queries only supported in DOM enviroments');\n    element = document.querySelector(args);\n    check$1(element, 'invalid query string for element');\n  } else if (typeof args === 'object') {\n    if (isHTMLElement(args)) {\n      element = args;\n    } else if (isWebGLContext(args)) {\n      gl = args;\n      canvas = gl.canvas;\n    } else {\n      check$1.constructor(args);\n      if ('gl' in args) {\n        gl = args.gl;\n      } else if ('canvas' in args) {\n        canvas = getElement(args.canvas);\n      } else if ('container' in args) {\n        container = getElement(args.container);\n      }\n      if ('attributes' in args) {\n        contextAttributes = args.attributes;\n        check$1.type(contextAttributes, 'object', 'invalid context attributes');\n      }\n      if ('extensions' in args) {\n        extensions = parseExtensions(args.extensions);\n      }\n      if ('optionalExtensions' in args) {\n        optionalExtensions = parseExtensions(args.optionalExtensions);\n      }\n      if ('onDone' in args) {\n        check$1.type(\n          args.onDone, 'function',\n          'invalid or missing onDone callback');\n        onDone = args.onDone;\n      }\n      if ('profile' in args) {\n        profile = !!args.profile;\n      }\n      if ('pixelRatio' in args) {\n        pixelRatio = +args.pixelRatio;\n        check$1(pixelRatio > 0, 'invalid pixel ratio');\n      }\n    }\n  } else {\n    check$1.raise('invalid arguments to regl');\n  }\n\n  if (element) {\n    if (element.nodeName.toLowerCase() === 'canvas') {\n      canvas = element;\n    } else {\n      container = element;\n    }\n  }\n\n  if (!gl) {\n    if (!canvas) {\n      check$1(\n        typeof document !== 'undefined',\n        'must manually specify webgl context outside of DOM environments');\n      var result = createCanvas(container || document.body, onDone, pixelRatio);\n      if (!result) {\n        return null\n      }\n      canvas = result.canvas;\n      onDestroy = result.onDestroy;\n    }\n    gl = createContext(canvas, contextAttributes);\n  }\n\n  if (!gl) {\n    onDestroy();\n    onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org');\n    return null\n  }\n\n  return {\n    gl: gl,\n    canvas: canvas,\n    container: container,\n    extensions: extensions,\n    optionalExtensions: optionalExtensions,\n    pixelRatio: pixelRatio,\n    profile: profile,\n    onDone: onDone,\n    onDestroy: onDestroy\n  }\n}\n\nfunction createExtensionCache (gl, config) {\n  var extensions = {};\n\n  function tryLoadExtension (name_) {\n    check$1.type(name_, 'string', 'extension name must be string');\n    var name = name_.toLowerCase();\n    var ext;\n    try {\n      ext = extensions[name] = gl.getExtension(name);\n    } catch (e) {}\n    return !!ext\n  }\n\n  for (var i = 0; i < config.extensions.length; ++i) {\n    var name = config.extensions[i];\n    if (!tryLoadExtension(name)) {\n      config.onDestroy();\n      config.onDone('\"' + name + '\" extension is not supported by the current WebGL context, try upgrading your system or a different browser');\n      return null\n    }\n  }\n\n  config.optionalExtensions.forEach(tryLoadExtension);\n\n  return {\n    extensions: extensions,\n    restore: function () {\n      Object.keys(extensions).forEach(function (name) {\n        if (!tryLoadExtension(name)) {\n          throw new Error('(regl): error restoring extension ' + name)\n        }\n      });\n    }\n  }\n}\n\nvar GL_SUBPIXEL_BITS = 0x0D50;\nvar GL_RED_BITS = 0x0D52;\nvar GL_GREEN_BITS = 0x0D53;\nvar GL_BLUE_BITS = 0x0D54;\nvar GL_ALPHA_BITS = 0x0D55;\nvar GL_DEPTH_BITS = 0x0D56;\nvar GL_STENCIL_BITS = 0x0D57;\n\nvar GL_ALIASED_POINT_SIZE_RANGE = 0x846D;\nvar GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\nvar GL_MAX_TEXTURE_SIZE = 0x0D33;\nvar GL_MAX_VIEWPORT_DIMS = 0x0D3A;\nvar GL_MAX_VERTEX_ATTRIBS = 0x8869;\nvar GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\nvar GL_MAX_VARYING_VECTORS = 0x8DFC;\nvar GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\nvar GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\nvar GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;\nvar GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\nvar GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\nvar GL_MAX_RENDERBUFFER_SIZE = 0x84E8;\n\nvar GL_VENDOR = 0x1F00;\nvar GL_RENDERER = 0x1F01;\nvar GL_VERSION = 0x1F02;\nvar GL_SHADING_LANGUAGE_VERSION = 0x8B8C;\n\nvar GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n\nvar GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\nvar GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;\n\nvar wrapLimits = function (gl, extensions) {\n  var maxAnisotropic = 1;\n  if (extensions.ext_texture_filter_anisotropic) {\n    maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n  }\n\n  var maxDrawbuffers = 1;\n  var maxColorAttachments = 1;\n  if (extensions.webgl_draw_buffers) {\n    maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL);\n    maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL);\n  }\n\n  return {\n    // drawing buffer bit depth\n    colorBits: [\n      gl.getParameter(GL_RED_BITS),\n      gl.getParameter(GL_GREEN_BITS),\n      gl.getParameter(GL_BLUE_BITS),\n      gl.getParameter(GL_ALPHA_BITS)\n    ],\n    depthBits: gl.getParameter(GL_DEPTH_BITS),\n    stencilBits: gl.getParameter(GL_STENCIL_BITS),\n    subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),\n\n    // supported extensions\n    extensions: Object.keys(extensions).filter(function (ext) {\n      return !!extensions[ext]\n    }),\n\n    // max aniso samples\n    maxAnisotropic: maxAnisotropic,\n\n    // max draw buffers\n    maxDrawbuffers: maxDrawbuffers,\n    maxColorAttachments: maxColorAttachments,\n\n    // point and line size ranges\n    pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),\n    lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),\n    maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),\n    maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),\n    maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),\n    maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),\n    maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),\n    maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),\n    maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),\n    maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),\n    maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),\n    maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),\n    maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),\n\n    // vendor info\n    glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),\n    renderer: gl.getParameter(GL_RENDERER),\n    vendor: gl.getParameter(GL_VENDOR),\n    version: gl.getParameter(GL_VERSION)\n  }\n};\n\nfunction isNDArrayLike (obj) {\n  return (\n    !!obj &&\n    typeof obj === 'object' &&\n    Array.isArray(obj.shape) &&\n    Array.isArray(obj.stride) &&\n    typeof obj.offset === 'number' &&\n    obj.shape.length === obj.stride.length &&\n    (Array.isArray(obj.data) ||\n      isTypedArray(obj.data)))\n}\n\nvar values = function (obj) {\n  return Object.keys(obj).map(function (key) { return obj[key] })\n};\n\nfunction loop (n, f) {\n  var result = Array(n);\n  for (var i = 0; i < n; ++i) {\n    result[i] = f(i);\n  }\n  return result\n}\n\nvar GL_BYTE$1 = 5120;\nvar GL_UNSIGNED_BYTE$2 = 5121;\nvar GL_SHORT$1 = 5122;\nvar GL_UNSIGNED_SHORT$1 = 5123;\nvar GL_INT$1 = 5124;\nvar GL_UNSIGNED_INT$1 = 5125;\nvar GL_FLOAT$2 = 5126;\n\nvar bufferPool = loop(8, function () {\n  return []\n});\n\nfunction nextPow16 (v) {\n  for (var i = 16; i <= (1 << 28); i *= 16) {\n    if (v <= i) {\n      return i\n    }\n  }\n  return 0\n}\n\nfunction log2 (v) {\n  var r, shift;\n  r = (v > 0xFFFF) << 4;\n  v >>>= r;\n  shift = (v > 0xFF) << 3;\n  v >>>= shift; r |= shift;\n  shift = (v > 0xF) << 2;\n  v >>>= shift; r |= shift;\n  shift = (v > 0x3) << 1;\n  v >>>= shift; r |= shift;\n  return r | (v >> 1)\n}\n\nfunction alloc (n) {\n  var sz = nextPow16(n);\n  var bin = bufferPool[log2(sz) >> 2];\n  if (bin.length > 0) {\n    return bin.pop()\n  }\n  return new ArrayBuffer(sz)\n}\n\nfunction free (buf) {\n  bufferPool[log2(buf.byteLength) >> 2].push(buf);\n}\n\nfunction allocType (type, n) {\n  var result = null;\n  switch (type) {\n    case GL_BYTE$1:\n      result = new Int8Array(alloc(n), 0, n);\n      break\n    case GL_UNSIGNED_BYTE$2:\n      result = new Uint8Array(alloc(n), 0, n);\n      break\n    case GL_SHORT$1:\n      result = new Int16Array(alloc(2 * n), 0, n);\n      break\n    case GL_UNSIGNED_SHORT$1:\n      result = new Uint16Array(alloc(2 * n), 0, n);\n      break\n    case GL_INT$1:\n      result = new Int32Array(alloc(4 * n), 0, n);\n      break\n    case GL_UNSIGNED_INT$1:\n      result = new Uint32Array(alloc(4 * n), 0, n);\n      break\n    case GL_FLOAT$2:\n      result = new Float32Array(alloc(4 * n), 0, n);\n      break\n    default:\n      return null\n  }\n  if (result.length !== n) {\n    return result.subarray(0, n)\n  }\n  return result\n}\n\nfunction freeType (array) {\n  free(array.buffer);\n}\n\nvar pool = {\n  alloc: alloc,\n  free: free,\n  allocType: allocType,\n  freeType: freeType\n};\n\nvar flattenUtils = {\n  shape: arrayShape$1,\n  flatten: flattenArray\n};\n\nfunction flatten1D (array, nx, out) {\n  for (var i = 0; i < nx; ++i) {\n    out[i] = array[i];\n  }\n}\n\nfunction flatten2D (array, nx, ny, out) {\n  var ptr = 0;\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i];\n    for (var j = 0; j < ny; ++j) {\n      out[ptr++] = row[j];\n    }\n  }\n}\n\nfunction flatten3D (array, nx, ny, nz, out, ptr_) {\n  var ptr = ptr_;\n  for (var i = 0; i < nx; ++i) {\n    var row = array[i];\n    for (var j = 0; j < ny; ++j) {\n      var col = row[j];\n      for (var k = 0; k < nz; ++k) {\n        out[ptr++] = col[k];\n      }\n    }\n  }\n}\n\nfunction flattenRec (array, shape, level, out, ptr) {\n  var stride = 1;\n  for (var i = level + 1; i < shape.length; ++i) {\n    stride *= shape[i];\n  }\n  var n = shape[level];\n  if (shape.length - level === 4) {\n    var nx = shape[level + 1];\n    var ny = shape[level + 2];\n    var nz = shape[level + 3];\n    for (i = 0; i < n; ++i) {\n      flatten3D(array[i], nx, ny, nz, out, ptr);\n      ptr += stride;\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      flattenRec(array[i], shape, level + 1, out, ptr);\n      ptr += stride;\n    }\n  }\n}\n\nfunction flattenArray (array, shape, type, out_) {\n  var sz = 1;\n  if (shape.length) {\n    for (var i = 0; i < shape.length; ++i) {\n      sz *= shape[i];\n    }\n  } else {\n    sz = 0;\n  }\n  var out = out_ || pool.allocType(type, sz);\n  switch (shape.length) {\n    case 0:\n      break\n    case 1:\n      flatten1D(array, shape[0], out);\n      break\n    case 2:\n      flatten2D(array, shape[0], shape[1], out);\n      break\n    case 3:\n      flatten3D(array, shape[0], shape[1], shape[2], out, 0);\n      break\n    default:\n      flattenRec(array, shape, 0, out, 0);\n  }\n  return out\n}\n\nfunction arrayShape$1 (array_) {\n  var shape = [];\n  for (var array = array_; array.length; array = array[0]) {\n    shape.push(array.length);\n  }\n  return shape\n}\n\nvar arrayTypes =  {\n\t\"[object Int8Array]\": 5120,\n\t\"[object Int16Array]\": 5122,\n\t\"[object Int32Array]\": 5124,\n\t\"[object Uint8Array]\": 5121,\n\t\"[object Uint8ClampedArray]\": 5121,\n\t\"[object Uint16Array]\": 5123,\n\t\"[object Uint32Array]\": 5125,\n\t\"[object Float32Array]\": 5126,\n\t\"[object Float64Array]\": 5121,\n\t\"[object ArrayBuffer]\": 5121\n};\n\nvar int8 = 5120;\nvar int16 = 5122;\nvar int32 = 5124;\nvar uint8 = 5121;\nvar uint16 = 5123;\nvar uint32 = 5125;\nvar float = 5126;\nvar float32 = 5126;\nvar glTypes = {\n\tint8: int8,\n\tint16: int16,\n\tint32: int32,\n\tuint8: uint8,\n\tuint16: uint16,\n\tuint32: uint32,\n\tfloat: float,\n\tfloat32: float32\n};\n\nvar dynamic$1 = 35048;\nvar stream = 35040;\nvar usageTypes = {\n\tdynamic: dynamic$1,\n\tstream: stream,\n\t\"static\": 35044\n};\n\nvar arrayFlatten = flattenUtils.flatten;\nvar arrayShape = flattenUtils.shape;\n\nvar GL_STATIC_DRAW = 0x88E4;\nvar GL_STREAM_DRAW = 0x88E0;\n\nvar GL_UNSIGNED_BYTE$1 = 5121;\nvar GL_FLOAT$1 = 5126;\n\nvar DTYPES_SIZES = [];\nDTYPES_SIZES[5120] = 1; // int8\nDTYPES_SIZES[5122] = 2; // int16\nDTYPES_SIZES[5124] = 4; // int32\nDTYPES_SIZES[5121] = 1; // uint8\nDTYPES_SIZES[5123] = 2; // uint16\nDTYPES_SIZES[5125] = 4; // uint32\nDTYPES_SIZES[5126] = 4; // float32\n\nfunction typedArrayCode (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction copyArray (out, inp) {\n  for (var i = 0; i < inp.length; ++i) {\n    out[i] = inp[i];\n  }\n}\n\nfunction transpose (\n  result, data, shapeX, shapeY, strideX, strideY, offset) {\n  var ptr = 0;\n  for (var i = 0; i < shapeX; ++i) {\n    for (var j = 0; j < shapeY; ++j) {\n      result[ptr++] = data[strideX * i + strideY * j + offset];\n    }\n  }\n}\n\nfunction wrapBufferState (gl, stats, config) {\n  var bufferCount = 0;\n  var bufferSet = {};\n\n  function REGLBuffer (type) {\n    this.id = bufferCount++;\n    this.buffer = gl.createBuffer();\n    this.type = type;\n    this.usage = GL_STATIC_DRAW;\n    this.byteLength = 0;\n    this.dimension = 1;\n    this.dtype = GL_UNSIGNED_BYTE$1;\n\n    this.persistentData = null;\n\n    if (config.profile) {\n      this.stats = {size: 0};\n    }\n  }\n\n  REGLBuffer.prototype.bind = function () {\n    gl.bindBuffer(this.type, this.buffer);\n  };\n\n  REGLBuffer.prototype.destroy = function () {\n    destroy(this);\n  };\n\n  var streamPool = [];\n\n  function createStream (type, data) {\n    var buffer = streamPool.pop();\n    if (!buffer) {\n      buffer = new REGLBuffer(type);\n    }\n    buffer.bind();\n    initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false);\n    return buffer\n  }\n\n  function destroyStream (stream$$1) {\n    streamPool.push(stream$$1);\n  }\n\n  function initBufferFromTypedArray (buffer, data, usage) {\n    buffer.byteLength = data.byteLength;\n    gl.bufferData(buffer.type, data, usage);\n  }\n\n  function initBufferFromData (buffer, data, usage, dtype, dimension, persist) {\n    var shape;\n    buffer.usage = usage;\n    if (Array.isArray(data)) {\n      buffer.dtype = dtype || GL_FLOAT$1;\n      if (data.length > 0) {\n        var flatData;\n        if (Array.isArray(data[0])) {\n          shape = arrayShape(data);\n          var dim = 1;\n          for (var i = 1; i < shape.length; ++i) {\n            dim *= shape[i];\n          }\n          buffer.dimension = dim;\n          flatData = arrayFlatten(data, shape, buffer.dtype);\n          initBufferFromTypedArray(buffer, flatData, usage);\n          if (persist) {\n            buffer.persistentData = flatData;\n          } else {\n            pool.freeType(flatData);\n          }\n        } else if (typeof data[0] === 'number') {\n          buffer.dimension = dimension;\n          var typedData = pool.allocType(buffer.dtype, data.length);\n          copyArray(typedData, data);\n          initBufferFromTypedArray(buffer, typedData, usage);\n          if (persist) {\n            buffer.persistentData = typedData;\n          } else {\n            pool.freeType(typedData);\n          }\n        } else if (isTypedArray(data[0])) {\n          buffer.dimension = data[0].length;\n          buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$1;\n          flatData = arrayFlatten(\n            data,\n            [data.length, data[0].length],\n            buffer.dtype);\n          initBufferFromTypedArray(buffer, flatData, usage);\n          if (persist) {\n            buffer.persistentData = flatData;\n          } else {\n            pool.freeType(flatData);\n          }\n        } else {\n          check$1.raise('invalid buffer data');\n        }\n      }\n    } else if (isTypedArray(data)) {\n      buffer.dtype = dtype || typedArrayCode(data);\n      buffer.dimension = dimension;\n      initBufferFromTypedArray(buffer, data, usage);\n      if (persist) {\n        buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer));\n      }\n    } else if (isNDArrayLike(data)) {\n      shape = data.shape;\n      var stride = data.stride;\n      var offset = data.offset;\n\n      var shapeX = 0;\n      var shapeY = 0;\n      var strideX = 0;\n      var strideY = 0;\n      if (shape.length === 1) {\n        shapeX = shape[0];\n        shapeY = 1;\n        strideX = stride[0];\n        strideY = 0;\n      } else if (shape.length === 2) {\n        shapeX = shape[0];\n        shapeY = shape[1];\n        strideX = stride[0];\n        strideY = stride[1];\n      } else {\n        check$1.raise('invalid shape');\n      }\n\n      buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$1;\n      buffer.dimension = shapeY;\n\n      var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY);\n      transpose(transposeData,\n        data.data,\n        shapeX, shapeY,\n        strideX, strideY,\n        offset);\n      initBufferFromTypedArray(buffer, transposeData, usage);\n      if (persist) {\n        buffer.persistentData = transposeData;\n      } else {\n        pool.freeType(transposeData);\n      }\n    } else {\n      check$1.raise('invalid buffer data');\n    }\n  }\n\n  function destroy (buffer) {\n    stats.bufferCount--;\n\n    var handle = buffer.buffer;\n    check$1(handle, 'buffer must not be deleted already');\n    gl.deleteBuffer(handle);\n    buffer.buffer = null;\n    delete bufferSet[buffer.id];\n  }\n\n  function createBuffer (options, type, deferInit, persistent) {\n    stats.bufferCount++;\n\n    var buffer = new REGLBuffer(type);\n    bufferSet[buffer.id] = buffer;\n\n    function reglBuffer (options) {\n      var usage = GL_STATIC_DRAW;\n      var data = null;\n      var byteLength = 0;\n      var dtype = 0;\n      var dimension = 1;\n      if (Array.isArray(options) ||\n          isTypedArray(options) ||\n          isNDArrayLike(options)) {\n        data = options;\n      } else if (typeof options === 'number') {\n        byteLength = options | 0;\n      } else if (options) {\n        check$1.type(\n          options, 'object',\n          'buffer arguments must be an object, a number or an array');\n\n        if ('data' in options) {\n          check$1(\n            data === null ||\n            Array.isArray(data) ||\n            isTypedArray(data) ||\n            isNDArrayLike(data),\n            'invalid data for buffer');\n          data = options.data;\n        }\n\n        if ('usage' in options) {\n          check$1.parameter(options.usage, usageTypes, 'invalid buffer usage');\n          usage = usageTypes[options.usage];\n        }\n\n        if ('type' in options) {\n          check$1.parameter(options.type, glTypes, 'invalid buffer type');\n          dtype = glTypes[options.type];\n        }\n\n        if ('dimension' in options) {\n          check$1.type(options.dimension, 'number', 'invalid dimension');\n          dimension = options.dimension | 0;\n        }\n\n        if ('length' in options) {\n          check$1.nni(byteLength, 'buffer length must be a nonnegative integer');\n          byteLength = options.length | 0;\n        }\n      }\n\n      buffer.bind();\n      if (!data) {\n        gl.bufferData(buffer.type, byteLength, usage);\n        buffer.dtype = dtype || GL_UNSIGNED_BYTE$1;\n        buffer.usage = usage;\n        buffer.dimension = dimension;\n        buffer.byteLength = byteLength;\n      } else {\n        initBufferFromData(buffer, data, usage, dtype, dimension, persistent);\n      }\n\n      if (config.profile) {\n        buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype];\n      }\n\n      return reglBuffer\n    }\n\n    function setSubData (data, offset) {\n      check$1(offset + data.byteLength <= buffer.byteLength,\n        'invalid buffer subdata call, buffer is too small. ' + ' Can\\'t write data of size ' + data.byteLength + ' starting from offset ' + offset + ' to a buffer of size ' + buffer.byteLength);\n\n      gl.bufferSubData(buffer.type, offset, data);\n    }\n\n    function subdata (data, offset_) {\n      var offset = (offset_ || 0) | 0;\n      var shape;\n      buffer.bind();\n      if (isTypedArray(data)) {\n        setSubData(data, offset);\n      } else if (Array.isArray(data)) {\n        if (data.length > 0) {\n          if (typeof data[0] === 'number') {\n            var converted = pool.allocType(buffer.dtype, data.length);\n            copyArray(converted, data);\n            setSubData(converted, offset);\n            pool.freeType(converted);\n          } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {\n            shape = arrayShape(data);\n            var flatData = arrayFlatten(data, shape, buffer.dtype);\n            setSubData(flatData, offset);\n            pool.freeType(flatData);\n          } else {\n            check$1.raise('invalid buffer data');\n          }\n        }\n      } else if (isNDArrayLike(data)) {\n        shape = data.shape;\n        var stride = data.stride;\n\n        var shapeX = 0;\n        var shapeY = 0;\n        var strideX = 0;\n        var strideY = 0;\n        if (shape.length === 1) {\n          shapeX = shape[0];\n          shapeY = 1;\n          strideX = stride[0];\n          strideY = 0;\n        } else if (shape.length === 2) {\n          shapeX = shape[0];\n          shapeY = shape[1];\n          strideX = stride[0];\n          strideY = stride[1];\n        } else {\n          check$1.raise('invalid shape');\n        }\n        var dtype = Array.isArray(data.data)\n          ? buffer.dtype\n          : typedArrayCode(data.data);\n\n        var transposeData = pool.allocType(dtype, shapeX * shapeY);\n        transpose(transposeData,\n          data.data,\n          shapeX, shapeY,\n          strideX, strideY,\n          data.offset);\n        setSubData(transposeData, offset);\n        pool.freeType(transposeData);\n      } else {\n        check$1.raise('invalid data for buffer subdata');\n      }\n      return reglBuffer\n    }\n\n    if (!deferInit) {\n      reglBuffer(options);\n    }\n\n    reglBuffer._reglType = 'buffer';\n    reglBuffer._buffer = buffer;\n    reglBuffer.subdata = subdata;\n    if (config.profile) {\n      reglBuffer.stats = buffer.stats;\n    }\n    reglBuffer.destroy = function () { destroy(buffer); };\n\n    return reglBuffer\n  }\n\n  function restoreBuffers () {\n    values(bufferSet).forEach(function (buffer) {\n      buffer.buffer = gl.createBuffer();\n      gl.bindBuffer(buffer.type, buffer.buffer);\n      gl.bufferData(\n        buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage);\n    });\n  }\n\n  if (config.profile) {\n    stats.getTotalBufferSize = function () {\n      var total = 0;\n      // TODO: Right now, the streams are not part of the total count.\n      Object.keys(bufferSet).forEach(function (key) {\n        total += bufferSet[key].stats.size;\n      });\n      return total\n    };\n  }\n\n  return {\n    create: createBuffer,\n\n    createStream: createStream,\n    destroyStream: destroyStream,\n\n    clear: function () {\n      values(bufferSet).forEach(destroy);\n      streamPool.forEach(destroy);\n    },\n\n    getBuffer: function (wrapper) {\n      if (wrapper && wrapper._buffer instanceof REGLBuffer) {\n        return wrapper._buffer\n      }\n      return null\n    },\n\n    restore: restoreBuffers,\n\n    _initBuffer: initBufferFromData\n  }\n}\n\nvar points = 0;\nvar point = 0;\nvar lines = 1;\nvar line = 1;\nvar triangles = 4;\nvar triangle = 4;\nvar primTypes = {\n\tpoints: points,\n\tpoint: point,\n\tlines: lines,\n\tline: line,\n\ttriangles: triangles,\n\ttriangle: triangle,\n\t\"line loop\": 2,\n\t\"line strip\": 3,\n\t\"triangle strip\": 5,\n\t\"triangle fan\": 6\n};\n\nvar GL_POINTS = 0;\nvar GL_LINES = 1;\nvar GL_TRIANGLES = 4;\n\nvar GL_BYTE$2 = 5120;\nvar GL_UNSIGNED_BYTE$3 = 5121;\nvar GL_SHORT$2 = 5122;\nvar GL_UNSIGNED_SHORT$2 = 5123;\nvar GL_INT$2 = 5124;\nvar GL_UNSIGNED_INT$2 = 5125;\n\nvar GL_ELEMENT_ARRAY_BUFFER = 34963;\n\nvar GL_STREAM_DRAW$1 = 0x88E0;\nvar GL_STATIC_DRAW$1 = 0x88E4;\n\nfunction wrapElementsState (gl, extensions, bufferState, stats) {\n  var elementSet = {};\n  var elementCount = 0;\n\n  var elementTypes = {\n    'uint8': GL_UNSIGNED_BYTE$3,\n    'uint16': GL_UNSIGNED_SHORT$2\n  };\n\n  if (extensions.oes_element_index_uint) {\n    elementTypes.uint32 = GL_UNSIGNED_INT$2;\n  }\n\n  function REGLElementBuffer (buffer) {\n    this.id = elementCount++;\n    elementSet[this.id] = this;\n    this.buffer = buffer;\n    this.primType = GL_TRIANGLES;\n    this.vertCount = 0;\n    this.type = 0;\n  }\n\n  REGLElementBuffer.prototype.bind = function () {\n    this.buffer.bind();\n  };\n\n  var bufferPool = [];\n\n  function createElementStream (data) {\n    var result = bufferPool.pop();\n    if (!result) {\n      result = new REGLElementBuffer(bufferState.create(\n        null,\n        GL_ELEMENT_ARRAY_BUFFER,\n        true,\n        false)._buffer);\n    }\n    initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0);\n    return result\n  }\n\n  function destroyElementStream (elements) {\n    bufferPool.push(elements);\n  }\n\n  function initElements (\n    elements,\n    data,\n    usage,\n    prim,\n    count,\n    byteLength,\n    type) {\n    elements.buffer.bind();\n    if (data) {\n      var predictedType = type;\n      if (!type && (\n          !isTypedArray(data) ||\n         (isNDArrayLike(data) && !isTypedArray(data.data)))) {\n        predictedType = extensions.oes_element_index_uint\n          ? GL_UNSIGNED_INT$2\n          : GL_UNSIGNED_SHORT$2;\n      }\n      bufferState._initBuffer(\n        elements.buffer,\n        data,\n        usage,\n        predictedType,\n        3);\n    } else {\n      gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage);\n      elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$3;\n      elements.buffer.usage = usage;\n      elements.buffer.dimension = 3;\n      elements.buffer.byteLength = byteLength;\n    }\n\n    var dtype = type;\n    if (!type) {\n      switch (elements.buffer.dtype) {\n        case GL_UNSIGNED_BYTE$3:\n        case GL_BYTE$2:\n          dtype = GL_UNSIGNED_BYTE$3;\n          break\n\n        case GL_UNSIGNED_SHORT$2:\n        case GL_SHORT$2:\n          dtype = GL_UNSIGNED_SHORT$2;\n          break\n\n        case GL_UNSIGNED_INT$2:\n        case GL_INT$2:\n          dtype = GL_UNSIGNED_INT$2;\n          break\n\n        default:\n          check$1.raise('unsupported type for element array');\n      }\n      elements.buffer.dtype = dtype;\n    }\n    elements.type = dtype;\n\n    // Check oes_element_index_uint extension\n    check$1(\n      dtype !== GL_UNSIGNED_INT$2 ||\n      !!extensions.oes_element_index_uint,\n      '32 bit element buffers not supported, enable oes_element_index_uint first');\n\n    // try to guess default primitive type and arguments\n    var vertCount = count;\n    if (vertCount < 0) {\n      vertCount = elements.buffer.byteLength;\n      if (dtype === GL_UNSIGNED_SHORT$2) {\n        vertCount >>= 1;\n      } else if (dtype === GL_UNSIGNED_INT$2) {\n        vertCount >>= 2;\n      }\n    }\n    elements.vertCount = vertCount;\n\n    // try to guess primitive type from cell dimension\n    var primType = prim;\n    if (prim < 0) {\n      primType = GL_TRIANGLES;\n      var dimension = elements.buffer.dimension;\n      if (dimension === 1) primType = GL_POINTS;\n      if (dimension === 2) primType = GL_LINES;\n      if (dimension === 3) primType = GL_TRIANGLES;\n    }\n    elements.primType = primType;\n  }\n\n  function destroyElements (elements) {\n    stats.elementsCount--;\n\n    check$1(elements.buffer !== null, 'must not double destroy elements');\n    delete elementSet[elements.id];\n    elements.buffer.destroy();\n    elements.buffer = null;\n  }\n\n  function createElements (options, persistent) {\n    var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true);\n    var elements = new REGLElementBuffer(buffer._buffer);\n    stats.elementsCount++;\n\n    function reglElements (options) {\n      if (!options) {\n        buffer();\n        elements.primType = GL_TRIANGLES;\n        elements.vertCount = 0;\n        elements.type = GL_UNSIGNED_BYTE$3;\n      } else if (typeof options === 'number') {\n        buffer(options);\n        elements.primType = GL_TRIANGLES;\n        elements.vertCount = options | 0;\n        elements.type = GL_UNSIGNED_BYTE$3;\n      } else {\n        var data = null;\n        var usage = GL_STATIC_DRAW$1;\n        var primType = -1;\n        var vertCount = -1;\n        var byteLength = 0;\n        var dtype = 0;\n        if (Array.isArray(options) ||\n            isTypedArray(options) ||\n            isNDArrayLike(options)) {\n          data = options;\n        } else {\n          check$1.type(options, 'object', 'invalid arguments for elements');\n          if ('data' in options) {\n            data = options.data;\n            check$1(\n                Array.isArray(data) ||\n                isTypedArray(data) ||\n                isNDArrayLike(data),\n                'invalid data for element buffer');\n          }\n          if ('usage' in options) {\n            check$1.parameter(\n              options.usage,\n              usageTypes,\n              'invalid element buffer usage');\n            usage = usageTypes[options.usage];\n          }\n          if ('primitive' in options) {\n            check$1.parameter(\n              options.primitive,\n              primTypes,\n              'invalid element buffer primitive');\n            primType = primTypes[options.primitive];\n          }\n          if ('count' in options) {\n            check$1(\n              typeof options.count === 'number' && options.count >= 0,\n              'invalid vertex count for elements');\n            vertCount = options.count | 0;\n          }\n          if ('type' in options) {\n            check$1.parameter(\n              options.type,\n              elementTypes,\n              'invalid buffer type');\n            dtype = elementTypes[options.type];\n          }\n          if ('length' in options) {\n            byteLength = options.length | 0;\n          } else {\n            byteLength = vertCount;\n            if (dtype === GL_UNSIGNED_SHORT$2 || dtype === GL_SHORT$2) {\n              byteLength *= 2;\n            } else if (dtype === GL_UNSIGNED_INT$2 || dtype === GL_INT$2) {\n              byteLength *= 4;\n            }\n          }\n        }\n        initElements(\n          elements,\n          data,\n          usage,\n          primType,\n          vertCount,\n          byteLength,\n          dtype);\n      }\n\n      return reglElements\n    }\n\n    reglElements(options);\n\n    reglElements._reglType = 'elements';\n    reglElements._elements = elements;\n    reglElements.subdata = function (data, offset) {\n      buffer.subdata(data, offset);\n      return reglElements\n    };\n    reglElements.destroy = function () {\n      destroyElements(elements);\n    };\n\n    return reglElements\n  }\n\n  return {\n    create: createElements,\n    createStream: createElementStream,\n    destroyStream: destroyElementStream,\n    getElements: function (elements) {\n      if (typeof elements === 'function' &&\n          elements._elements instanceof REGLElementBuffer) {\n        return elements._elements\n      }\n      return null\n    },\n    clear: function () {\n      values(elementSet).forEach(destroyElements);\n    }\n  }\n}\n\nvar FLOAT = new Float32Array(1);\nvar INT = new Uint32Array(FLOAT.buffer);\n\nvar GL_UNSIGNED_SHORT$4 = 5123;\n\nfunction convertToHalfFloat (array) {\n  var ushorts = pool.allocType(GL_UNSIGNED_SHORT$4, array.length);\n\n  for (var i = 0; i < array.length; ++i) {\n    if (isNaN(array[i])) {\n      ushorts[i] = 0xffff;\n    } else if (array[i] === Infinity) {\n      ushorts[i] = 0x7c00;\n    } else if (array[i] === -Infinity) {\n      ushorts[i] = 0xfc00;\n    } else {\n      FLOAT[0] = array[i];\n      var x = INT[0];\n\n      var sgn = (x >>> 31) << 15;\n      var exp = ((x << 1) >>> 24) - 127;\n      var frac = (x >> 13) & ((1 << 10) - 1);\n\n      if (exp < -24) {\n        // round non-representable denormals to 0\n        ushorts[i] = sgn;\n      } else if (exp < -14) {\n        // handle denormals\n        var s = -14 - exp;\n        ushorts[i] = sgn + ((frac + (1 << 10)) >> s);\n      } else if (exp > 15) {\n        // round overflow to +/- Infinity\n        ushorts[i] = sgn + 0x7c00;\n      } else {\n        // otherwise convert directly\n        ushorts[i] = sgn + ((exp + 15) << 10) + frac;\n      }\n    }\n  }\n\n  return ushorts\n}\n\nfunction isArrayLike (s) {\n  return Array.isArray(s) || isTypedArray(s)\n}\n\nvar GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\nvar GL_TEXTURE_2D = 0x0DE1;\nvar GL_TEXTURE_CUBE_MAP = 0x8513;\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\nvar GL_RGBA = 0x1908;\nvar GL_ALPHA = 0x1906;\nvar GL_RGB = 0x1907;\nvar GL_LUMINANCE = 0x1909;\nvar GL_LUMINANCE_ALPHA = 0x190A;\n\nvar GL_RGBA4 = 0x8056;\nvar GL_RGB5_A1 = 0x8057;\nvar GL_RGB565 = 0x8D62;\n\nvar GL_UNSIGNED_SHORT_4_4_4_4$1 = 0x8033;\nvar GL_UNSIGNED_SHORT_5_5_5_1$1 = 0x8034;\nvar GL_UNSIGNED_SHORT_5_6_5$1 = 0x8363;\nvar GL_UNSIGNED_INT_24_8_WEBGL$1 = 0x84FA;\n\nvar GL_DEPTH_COMPONENT = 0x1902;\nvar GL_DEPTH_STENCIL = 0x84F9;\n\nvar GL_SRGB_EXT = 0x8C40;\nvar GL_SRGB_ALPHA_EXT = 0x8C42;\n\nvar GL_HALF_FLOAT_OES$1 = 0x8D61;\n\nvar GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nvar GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nvar GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nvar GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\nvar GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92;\nvar GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93;\nvar GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;\n\nvar GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;\nvar GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;\nvar GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;\nvar GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;\n\nvar GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;\n\nvar GL_UNSIGNED_BYTE$4 = 0x1401;\nvar GL_UNSIGNED_SHORT$3 = 0x1403;\nvar GL_UNSIGNED_INT$3 = 0x1405;\nvar GL_FLOAT$3 = 0x1406;\n\nvar GL_TEXTURE_WRAP_S = 0x2802;\nvar GL_TEXTURE_WRAP_T = 0x2803;\n\nvar GL_REPEAT = 0x2901;\nvar GL_CLAMP_TO_EDGE$1 = 0x812F;\nvar GL_MIRRORED_REPEAT = 0x8370;\n\nvar GL_TEXTURE_MAG_FILTER = 0x2800;\nvar GL_TEXTURE_MIN_FILTER = 0x2801;\n\nvar GL_NEAREST$1 = 0x2600;\nvar GL_LINEAR = 0x2601;\nvar GL_NEAREST_MIPMAP_NEAREST$1 = 0x2700;\nvar GL_LINEAR_MIPMAP_NEAREST$1 = 0x2701;\nvar GL_NEAREST_MIPMAP_LINEAR$1 = 0x2702;\nvar GL_LINEAR_MIPMAP_LINEAR$1 = 0x2703;\n\nvar GL_GENERATE_MIPMAP_HINT = 0x8192;\nvar GL_DONT_CARE = 0x1100;\nvar GL_FASTEST = 0x1101;\nvar GL_NICEST = 0x1102;\n\nvar GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\n\nvar GL_UNPACK_ALIGNMENT = 0x0CF5;\nvar GL_UNPACK_FLIP_Y_WEBGL = 0x9240;\nvar GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\nvar GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\nvar GL_BROWSER_DEFAULT_WEBGL = 0x9244;\n\nvar GL_TEXTURE0 = 0x84C0;\n\nvar MIPMAP_FILTERS = [\n  GL_NEAREST_MIPMAP_NEAREST$1,\n  GL_NEAREST_MIPMAP_LINEAR$1,\n  GL_LINEAR_MIPMAP_NEAREST$1,\n  GL_LINEAR_MIPMAP_LINEAR$1\n];\n\nvar CHANNELS_FORMAT = [\n  0,\n  GL_LUMINANCE,\n  GL_LUMINANCE_ALPHA,\n  GL_RGB,\n  GL_RGBA\n];\n\nvar FORMAT_CHANNELS = {};\nFORMAT_CHANNELS[GL_LUMINANCE] =\nFORMAT_CHANNELS[GL_ALPHA] =\nFORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1;\nFORMAT_CHANNELS[GL_DEPTH_STENCIL] =\nFORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2;\nFORMAT_CHANNELS[GL_RGB] =\nFORMAT_CHANNELS[GL_SRGB_EXT] = 3;\nFORMAT_CHANNELS[GL_RGBA] =\nFORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4;\n\nfunction objectName (str) {\n  return '[object ' + str + ']'\n}\n\nvar CANVAS_CLASS = objectName('HTMLCanvasElement');\nvar CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D');\nvar IMAGE_CLASS = objectName('HTMLImageElement');\nvar VIDEO_CLASS = objectName('HTMLVideoElement');\n\nvar PIXEL_CLASSES = Object.keys(arrayTypes).concat([\n  CANVAS_CLASS,\n  CONTEXT2D_CLASS,\n  IMAGE_CLASS,\n  VIDEO_CLASS\n]);\n\n// for every texture type, store\n// the size in bytes.\nvar TYPE_SIZES = [];\nTYPE_SIZES[GL_UNSIGNED_BYTE$4] = 1;\nTYPE_SIZES[GL_FLOAT$3] = 4;\nTYPE_SIZES[GL_HALF_FLOAT_OES$1] = 2;\n\nTYPE_SIZES[GL_UNSIGNED_SHORT$3] = 2;\nTYPE_SIZES[GL_UNSIGNED_INT$3] = 4;\n\nvar FORMAT_SIZES_SPECIAL = [];\nFORMAT_SIZES_SPECIAL[GL_RGBA4] = 2;\nFORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2;\nFORMAT_SIZES_SPECIAL[GL_RGB565] = 2;\nFORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4;\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1;\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1;\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5;\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25;\n\nFORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5;\n\nfunction isNumericArray (arr) {\n  return (\n    Array.isArray(arr) &&\n    (arr.length === 0 ||\n    typeof arr[0] === 'number'))\n}\n\nfunction isRectArray (arr) {\n  if (!Array.isArray(arr)) {\n    return false\n  }\n  var width = arr.length;\n  if (width === 0 || !isArrayLike(arr[0])) {\n    return false\n  }\n  return true\n}\n\nfunction classString (x) {\n  return Object.prototype.toString.call(x)\n}\n\nfunction isCanvasElement (object) {\n  return classString(object) === CANVAS_CLASS\n}\n\nfunction isContext2D (object) {\n  return classString(object) === CONTEXT2D_CLASS\n}\n\nfunction isImageElement (object) {\n  return classString(object) === IMAGE_CLASS\n}\n\nfunction isVideoElement (object) {\n  return classString(object) === VIDEO_CLASS\n}\n\nfunction isPixelData (object) {\n  if (!object) {\n    return false\n  }\n  var className = classString(object);\n  if (PIXEL_CLASSES.indexOf(className) >= 0) {\n    return true\n  }\n  return (\n    isNumericArray(object) ||\n    isRectArray(object) ||\n    isNDArrayLike(object))\n}\n\nfunction typedArrayCode$1 (data) {\n  return arrayTypes[Object.prototype.toString.call(data)] | 0\n}\n\nfunction convertData (result, data) {\n  var n = data.length;\n  switch (result.type) {\n    case GL_UNSIGNED_BYTE$4:\n    case GL_UNSIGNED_SHORT$3:\n    case GL_UNSIGNED_INT$3:\n    case GL_FLOAT$3:\n      var converted = pool.allocType(result.type, n);\n      converted.set(data);\n      result.data = converted;\n      break\n\n    case GL_HALF_FLOAT_OES$1:\n      result.data = convertToHalfFloat(data);\n      break\n\n    default:\n      check$1.raise('unsupported texture type, must specify a typed array');\n  }\n}\n\nfunction preConvert (image, n) {\n  return pool.allocType(\n    image.type === GL_HALF_FLOAT_OES$1\n      ? GL_FLOAT$3\n      : image.type, n)\n}\n\nfunction postConvert (image, data) {\n  if (image.type === GL_HALF_FLOAT_OES$1) {\n    image.data = convertToHalfFloat(data);\n    pool.freeType(data);\n  } else {\n    image.data = data;\n  }\n}\n\nfunction transposeData (image, array, strideX, strideY, strideC, offset) {\n  var w = image.width;\n  var h = image.height;\n  var c = image.channels;\n  var n = w * h * c;\n  var data = preConvert(image, n);\n\n  var p = 0;\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < c; ++k) {\n        data[p++] = array[strideX * j + strideY * i + strideC * k + offset];\n      }\n    }\n  }\n\n  postConvert(image, data);\n}\n\nfunction getTextureSize (format, type, width, height, isMipmap, isCube) {\n  var s;\n  if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {\n    // we have a special array for dealing with weird color formats such as RGB5A1\n    s = FORMAT_SIZES_SPECIAL[format];\n  } else {\n    s = FORMAT_CHANNELS[format] * TYPE_SIZES[type];\n  }\n\n  if (isCube) {\n    s *= 6;\n  }\n\n  if (isMipmap) {\n    // compute the total size of all the mipmaps.\n    var total = 0;\n\n    var w = width;\n    while (w >= 1) {\n      // we can only use mipmaps on a square image,\n      // so we can simply use the width and ignore the height:\n      total += s * w * w;\n      w /= 2;\n    }\n    return total\n  } else {\n    return s * width * height\n  }\n}\n\nfunction createTextureSet (\n  gl, extensions, limits, reglPoll, contextState, stats, config) {\n  // -------------------------------------------------------\n  // Initialize constants and parameter tables here\n  // -------------------------------------------------------\n  var mipmapHint = {\n    \"don't care\": GL_DONT_CARE,\n    'dont care': GL_DONT_CARE,\n    'nice': GL_NICEST,\n    'fast': GL_FASTEST\n  };\n\n  var wrapModes = {\n    'repeat': GL_REPEAT,\n    'clamp': GL_CLAMP_TO_EDGE$1,\n    'mirror': GL_MIRRORED_REPEAT\n  };\n\n  var magFilters = {\n    'nearest': GL_NEAREST$1,\n    'linear': GL_LINEAR\n  };\n\n  var minFilters = extend({\n    'mipmap': GL_LINEAR_MIPMAP_LINEAR$1,\n    'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST$1,\n    'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST$1,\n    'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR$1,\n    'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR$1\n  }, magFilters);\n\n  var colorSpace = {\n    'none': 0,\n    'browser': GL_BROWSER_DEFAULT_WEBGL\n  };\n\n  var textureTypes = {\n    'uint8': GL_UNSIGNED_BYTE$4,\n    'rgba4': GL_UNSIGNED_SHORT_4_4_4_4$1,\n    'rgb565': GL_UNSIGNED_SHORT_5_6_5$1,\n    'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1$1\n  };\n\n  var textureFormats = {\n    'alpha': GL_ALPHA,\n    'luminance': GL_LUMINANCE,\n    'luminance alpha': GL_LUMINANCE_ALPHA,\n    'rgb': GL_RGB,\n    'rgba': GL_RGBA,\n    'rgba4': GL_RGBA4,\n    'rgb5 a1': GL_RGB5_A1,\n    'rgb565': GL_RGB565\n  };\n\n  var compressedTextureFormats = {};\n\n  if (extensions.ext_srgb) {\n    textureFormats.srgb = GL_SRGB_EXT;\n    textureFormats.srgba = GL_SRGB_ALPHA_EXT;\n  }\n\n  if (extensions.oes_texture_float) {\n    textureTypes.float32 = textureTypes.float = GL_FLOAT$3;\n  }\n\n  if (extensions.oes_texture_half_float) {\n    textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES$1;\n  }\n\n  if (extensions.webgl_depth_texture) {\n    extend(textureFormats, {\n      'depth': GL_DEPTH_COMPONENT,\n      'depth stencil': GL_DEPTH_STENCIL\n    });\n\n    extend(textureTypes, {\n      'uint16': GL_UNSIGNED_SHORT$3,\n      'uint32': GL_UNSIGNED_INT$3,\n      'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL$1\n    });\n  }\n\n  if (extensions.webgl_compressed_texture_s3tc) {\n    extend(compressedTextureFormats, {\n      'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,\n      'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,\n      'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,\n      'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT\n    });\n  }\n\n  if (extensions.webgl_compressed_texture_atc) {\n    extend(compressedTextureFormats, {\n      'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,\n      'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,\n      'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL\n    });\n  }\n\n  if (extensions.webgl_compressed_texture_pvrtc) {\n    extend(compressedTextureFormats, {\n      'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\n      'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\n      'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\n      'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG\n    });\n  }\n\n  if (extensions.webgl_compressed_texture_etc1) {\n    compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL;\n  }\n\n  // Copy over all texture formats\n  var supportedCompressedFormats = Array.prototype.slice.call(\n    gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS));\n  Object.keys(compressedTextureFormats).forEach(function (name) {\n    var format = compressedTextureFormats[name];\n    if (supportedCompressedFormats.indexOf(format) >= 0) {\n      textureFormats[name] = format;\n    }\n  });\n\n  var supportedFormats = Object.keys(textureFormats);\n  limits.textureFormats = supportedFormats;\n\n  // associate with every format string its\n  // corresponding GL-value.\n  var textureFormatsInvert = [];\n  Object.keys(textureFormats).forEach(function (key) {\n    var val = textureFormats[key];\n    textureFormatsInvert[val] = key;\n  });\n\n  // associate with every type string its\n  // corresponding GL-value.\n  var textureTypesInvert = [];\n  Object.keys(textureTypes).forEach(function (key) {\n    var val = textureTypes[key];\n    textureTypesInvert[val] = key;\n  });\n\n  var magFiltersInvert = [];\n  Object.keys(magFilters).forEach(function (key) {\n    var val = magFilters[key];\n    magFiltersInvert[val] = key;\n  });\n\n  var minFiltersInvert = [];\n  Object.keys(minFilters).forEach(function (key) {\n    var val = minFilters[key];\n    minFiltersInvert[val] = key;\n  });\n\n  var wrapModesInvert = [];\n  Object.keys(wrapModes).forEach(function (key) {\n    var val = wrapModes[key];\n    wrapModesInvert[val] = key;\n  });\n\n  // colorFormats[] gives the format (channels) associated to an\n  // internalformat\n  var colorFormats = supportedFormats.reduce(function (color, key) {\n    var glenum = textureFormats[key];\n    if (glenum === GL_LUMINANCE ||\n        glenum === GL_ALPHA ||\n        glenum === GL_LUMINANCE ||\n        glenum === GL_LUMINANCE_ALPHA ||\n        glenum === GL_DEPTH_COMPONENT ||\n        glenum === GL_DEPTH_STENCIL) {\n      color[glenum] = glenum;\n    } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {\n      color[glenum] = GL_RGBA;\n    } else {\n      color[glenum] = GL_RGB;\n    }\n    return color\n  }, {});\n\n  function TexFlags () {\n    // format info\n    this.internalformat = GL_RGBA;\n    this.format = GL_RGBA;\n    this.type = GL_UNSIGNED_BYTE$4;\n    this.compressed = false;\n\n    // pixel storage\n    this.premultiplyAlpha = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n    this.colorSpace = GL_BROWSER_DEFAULT_WEBGL;\n\n    // shape info\n    this.width = 0;\n    this.height = 0;\n    this.channels = 0;\n  }\n\n  function copyFlags (result, other) {\n    result.internalformat = other.internalformat;\n    result.format = other.format;\n    result.type = other.type;\n    result.compressed = other.compressed;\n\n    result.premultiplyAlpha = other.premultiplyAlpha;\n    result.flipY = other.flipY;\n    result.unpackAlignment = other.unpackAlignment;\n    result.colorSpace = other.colorSpace;\n\n    result.width = other.width;\n    result.height = other.height;\n    result.channels = other.channels;\n  }\n\n  function parseFlags (flags, options) {\n    if (typeof options !== 'object' || !options) {\n      return\n    }\n\n    if ('premultiplyAlpha' in options) {\n      check$1.type(options.premultiplyAlpha, 'boolean',\n        'invalid premultiplyAlpha');\n      flags.premultiplyAlpha = options.premultiplyAlpha;\n    }\n\n    if ('flipY' in options) {\n      check$1.type(options.flipY, 'boolean',\n        'invalid texture flip');\n      flags.flipY = options.flipY;\n    }\n\n    if ('alignment' in options) {\n      check$1.oneOf(options.alignment, [1, 2, 4, 8],\n        'invalid texture unpack alignment');\n      flags.unpackAlignment = options.alignment;\n    }\n\n    if ('colorSpace' in options) {\n      check$1.parameter(options.colorSpace, colorSpace,\n        'invalid colorSpace');\n      flags.colorSpace = colorSpace[options.colorSpace];\n    }\n\n    if ('type' in options) {\n      var type = options.type;\n      check$1(extensions.oes_texture_float ||\n        !(type === 'float' || type === 'float32'),\n        'you must enable the OES_texture_float extension in order to use floating point textures.');\n      check$1(extensions.oes_texture_half_float ||\n        !(type === 'half float' || type === 'float16'),\n        'you must enable the OES_texture_half_float extension in order to use 16-bit floating point textures.');\n      check$1(extensions.webgl_depth_texture ||\n        !(type === 'uint16' || type === 'uint32' || type === 'depth stencil'),\n        'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.');\n      check$1.parameter(type, textureTypes,\n        'invalid texture type');\n      flags.type = textureTypes[type];\n    }\n\n    var w = flags.width;\n    var h = flags.height;\n    var c = flags.channels;\n    var hasChannels = false;\n    if ('shape' in options) {\n      check$1(Array.isArray(options.shape) && options.shape.length >= 2,\n        'shape must be an array');\n      w = options.shape[0];\n      h = options.shape[1];\n      if (options.shape.length === 3) {\n        c = options.shape[2];\n        check$1(c > 0 && c <= 4, 'invalid number of channels');\n        hasChannels = true;\n      }\n      check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width');\n      check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height');\n    } else {\n      if ('radius' in options) {\n        w = h = options.radius;\n        check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid radius');\n      }\n      if ('width' in options) {\n        w = options.width;\n        check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width');\n      }\n      if ('height' in options) {\n        h = options.height;\n        check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height');\n      }\n      if ('channels' in options) {\n        c = options.channels;\n        check$1(c > 0 && c <= 4, 'invalid number of channels');\n        hasChannels = true;\n      }\n    }\n    flags.width = w | 0;\n    flags.height = h | 0;\n    flags.channels = c | 0;\n\n    var hasFormat = false;\n    if ('format' in options) {\n      var formatStr = options.format;\n      check$1(extensions.webgl_depth_texture ||\n        !(formatStr === 'depth' || formatStr === 'depth stencil'),\n        'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.');\n      check$1.parameter(formatStr, textureFormats,\n        'invalid texture format');\n      var internalformat = flags.internalformat = textureFormats[formatStr];\n      flags.format = colorFormats[internalformat];\n      if (formatStr in textureTypes) {\n        if (!('type' in options)) {\n          flags.type = textureTypes[formatStr];\n        }\n      }\n      if (formatStr in compressedTextureFormats) {\n        flags.compressed = true;\n      }\n      hasFormat = true;\n    }\n\n    // Reconcile channels and format\n    if (!hasChannels && hasFormat) {\n      flags.channels = FORMAT_CHANNELS[flags.format];\n    } else if (hasChannels && !hasFormat) {\n      if (flags.channels !== CHANNELS_FORMAT[flags.format]) {\n        flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels];\n      }\n    } else if (hasFormat && hasChannels) {\n      check$1(\n        flags.channels === FORMAT_CHANNELS[flags.format],\n        'number of channels inconsistent with specified format');\n    }\n  }\n\n  function setFlags (flags) {\n    gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY);\n    gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);\n    gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace);\n    gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment);\n  }\n\n  // -------------------------------------------------------\n  // Tex image data\n  // -------------------------------------------------------\n  function TexImage () {\n    TexFlags.call(this);\n\n    this.xOffset = 0;\n    this.yOffset = 0;\n\n    // data\n    this.data = null;\n    this.needsFree = false;\n\n    // html element\n    this.element = null;\n\n    // copyTexImage info\n    this.needsCopy = false;\n  }\n\n  function parseImage (image, options) {\n    var data = null;\n    if (isPixelData(options)) {\n      data = options;\n    } else if (options) {\n      check$1.type(options, 'object', 'invalid pixel data type');\n      parseFlags(image, options);\n      if ('x' in options) {\n        image.xOffset = options.x | 0;\n      }\n      if ('y' in options) {\n        image.yOffset = options.y | 0;\n      }\n      if (isPixelData(options.data)) {\n        data = options.data;\n      }\n    }\n\n    check$1(\n      !image.compressed ||\n      data instanceof Uint8Array,\n      'compressed texture data must be stored in a uint8array');\n\n    if (options.copy) {\n      check$1(!data, 'can not specify copy and data field for the same texture');\n      var viewW = contextState.viewportWidth;\n      var viewH = contextState.viewportHeight;\n      image.width = image.width || (viewW - image.xOffset);\n      image.height = image.height || (viewH - image.yOffset);\n      image.needsCopy = true;\n      check$1(image.xOffset >= 0 && image.xOffset < viewW &&\n            image.yOffset >= 0 && image.yOffset < viewH &&\n            image.width > 0 && image.width <= viewW &&\n            image.height > 0 && image.height <= viewH,\n            'copy texture read out of bounds');\n    } else if (!data) {\n      image.width = image.width || 1;\n      image.height = image.height || 1;\n      image.channels = image.channels || 4;\n    } else if (isTypedArray(data)) {\n      image.channels = image.channels || 4;\n      image.data = data;\n      if (!('type' in options) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(data);\n      }\n    } else if (isNumericArray(data)) {\n      image.channels = image.channels || 4;\n      convertData(image, data);\n      image.alignment = 1;\n      image.needsFree = true;\n    } else if (isNDArrayLike(data)) {\n      var array = data.data;\n      if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$4) {\n        image.type = typedArrayCode$1(array);\n      }\n      var shape = data.shape;\n      var stride = data.stride;\n      var shapeX, shapeY, shapeC, strideX, strideY, strideC;\n      if (shape.length === 3) {\n        shapeC = shape[2];\n        strideC = stride[2];\n      } else {\n        check$1(shape.length === 2, 'invalid ndarray pixel data, must be 2 or 3D');\n        shapeC = 1;\n        strideC = 1;\n      }\n      shapeX = shape[0];\n      shapeY = shape[1];\n      strideX = stride[0];\n      strideY = stride[1];\n      image.alignment = 1;\n      image.width = shapeX;\n      image.height = shapeY;\n      image.channels = shapeC;\n      image.format = image.internalformat = CHANNELS_FORMAT[shapeC];\n      image.needsFree = true;\n      transposeData(image, array, strideX, strideY, strideC, data.offset);\n    } else if (isCanvasElement(data) || isContext2D(data)) {\n      if (isCanvasElement(data)) {\n        image.element = data;\n      } else {\n        image.element = data.canvas;\n      }\n      image.width = image.element.width;\n      image.height = image.element.height;\n      image.channels = 4;\n    } else if (isImageElement(data)) {\n      image.element = data;\n      image.width = data.naturalWidth;\n      image.height = data.naturalHeight;\n      image.channels = 4;\n    } else if (isVideoElement(data)) {\n      image.element = data;\n      image.width = data.videoWidth;\n      image.height = data.videoHeight;\n      image.channels = 4;\n    } else if (isRectArray(data)) {\n      var w = image.width || data[0].length;\n      var h = image.height || data.length;\n      var c = image.channels;\n      if (isArrayLike(data[0][0])) {\n        c = c || data[0][0].length;\n      } else {\n        c = c || 1;\n      }\n      var arrayShape = flattenUtils.shape(data);\n      var n = 1;\n      for (var dd = 0; dd < arrayShape.length; ++dd) {\n        n *= arrayShape[dd];\n      }\n      var allocData = preConvert(image, n);\n      flattenUtils.flatten(data, arrayShape, '', allocData);\n      postConvert(image, allocData);\n      image.alignment = 1;\n      image.width = w;\n      image.height = h;\n      image.channels = c;\n      image.format = image.internalformat = CHANNELS_FORMAT[c];\n      image.needsFree = true;\n    }\n\n    if (image.type === GL_FLOAT$3) {\n      check$1(limits.extensions.indexOf('oes_texture_float') >= 0,\n        'oes_texture_float extension not enabled');\n    } else if (image.type === GL_HALF_FLOAT_OES$1) {\n      check$1(limits.extensions.indexOf('oes_texture_half_float') >= 0,\n        'oes_texture_half_float extension not enabled');\n    }\n\n    // do compressed texture  validation here.\n  }\n\n  function setImage (info, target, miplevel) {\n    var element = info.element;\n    var data = info.data;\n    var internalformat = info.internalformat;\n    var format = info.format;\n    var type = info.type;\n    var width = info.width;\n    var height = info.height;\n\n    setFlags(info);\n\n    if (element) {\n      gl.texImage2D(target, miplevel, format, format, type, element);\n    } else if (info.compressed) {\n      gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data);\n    } else if (info.needsCopy) {\n      reglPoll();\n      gl.copyTexImage2D(\n        target, miplevel, format, info.xOffset, info.yOffset, width, height, 0);\n    } else {\n      gl.texImage2D(\n        target, miplevel, format, width, height, 0, format, type, data);\n    }\n  }\n\n  function setSubImage (info, target, x, y, miplevel) {\n    var element = info.element;\n    var data = info.data;\n    var internalformat = info.internalformat;\n    var format = info.format;\n    var type = info.type;\n    var width = info.width;\n    var height = info.height;\n\n    setFlags(info);\n\n    if (element) {\n      gl.texSubImage2D(\n        target, miplevel, x, y, format, type, element);\n    } else if (info.compressed) {\n      gl.compressedTexSubImage2D(\n        target, miplevel, x, y, internalformat, width, height, data);\n    } else if (info.needsCopy) {\n      reglPoll();\n      gl.copyTexSubImage2D(\n        target, miplevel, x, y, info.xOffset, info.yOffset, width, height);\n    } else {\n      gl.texSubImage2D(\n        target, miplevel, x, y, width, height, format, type, data);\n    }\n  }\n\n  // texImage pool\n  var imagePool = [];\n\n  function allocImage () {\n    return imagePool.pop() || new TexImage()\n  }\n\n  function freeImage (image) {\n    if (image.needsFree) {\n      pool.freeType(image.data);\n    }\n    TexImage.call(image);\n    imagePool.push(image);\n  }\n\n  // -------------------------------------------------------\n  // Mip map\n  // -------------------------------------------------------\n  function MipMap () {\n    TexFlags.call(this);\n\n    this.genMipmaps = false;\n    this.mipmapHint = GL_DONT_CARE;\n    this.mipmask = 0;\n    this.images = Array(16);\n  }\n\n  function parseMipMapFromShape (mipmap, width, height) {\n    var img = mipmap.images[0] = allocImage();\n    mipmap.mipmask = 1;\n    img.width = mipmap.width = width;\n    img.height = mipmap.height = height;\n    img.channels = mipmap.channels = 4;\n  }\n\n  function parseMipMapFromObject (mipmap, options) {\n    var imgData = null;\n    if (isPixelData(options)) {\n      imgData = mipmap.images[0] = allocImage();\n      copyFlags(imgData, mipmap);\n      parseImage(imgData, options);\n      mipmap.mipmask = 1;\n    } else {\n      parseFlags(mipmap, options);\n      if (Array.isArray(options.mipmap)) {\n        var mipData = options.mipmap;\n        for (var i = 0; i < mipData.length; ++i) {\n          imgData = mipmap.images[i] = allocImage();\n          copyFlags(imgData, mipmap);\n          imgData.width >>= i;\n          imgData.height >>= i;\n          parseImage(imgData, mipData[i]);\n          mipmap.mipmask |= (1 << i);\n        }\n      } else {\n        imgData = mipmap.images[0] = allocImage();\n        copyFlags(imgData, mipmap);\n        parseImage(imgData, options);\n        mipmap.mipmask = 1;\n      }\n    }\n    copyFlags(mipmap, mipmap.images[0]);\n\n    // For textures of the compressed format WEBGL_compressed_texture_s3tc\n    // we must have that\n    //\n    // \"When level equals zero width and height must be a multiple of 4.\n    // When level is greater than 0 width and height must be 0, 1, 2 or a multiple of 4. \"\n    //\n    // but we do not yet support having multiple mipmap levels for compressed textures,\n    // so we only test for level zero.\n\n    if (mipmap.compressed &&\n        (mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT) ||\n        (mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT) ||\n        (mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT) ||\n        (mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)) {\n      check$1(mipmap.width % 4 === 0 &&\n            mipmap.height % 4 === 0,\n            'for compressed texture formats, mipmap level 0 must have width and height that are a multiple of 4');\n    }\n  }\n\n  function setMipMap (mipmap, target) {\n    var images = mipmap.images;\n    for (var i = 0; i < images.length; ++i) {\n      if (!images[i]) {\n        return\n      }\n      setImage(images[i], target, i);\n    }\n  }\n\n  var mipPool = [];\n\n  function allocMipMap () {\n    var result = mipPool.pop() || new MipMap();\n    TexFlags.call(result);\n    result.mipmask = 0;\n    for (var i = 0; i < 16; ++i) {\n      result.images[i] = null;\n    }\n    return result\n  }\n\n  function freeMipMap (mipmap) {\n    var images = mipmap.images;\n    for (var i = 0; i < images.length; ++i) {\n      if (images[i]) {\n        freeImage(images[i]);\n      }\n      images[i] = null;\n    }\n    mipPool.push(mipmap);\n  }\n\n  // -------------------------------------------------------\n  // Tex info\n  // -------------------------------------------------------\n  function TexInfo () {\n    this.minFilter = GL_NEAREST$1;\n    this.magFilter = GL_NEAREST$1;\n\n    this.wrapS = GL_CLAMP_TO_EDGE$1;\n    this.wrapT = GL_CLAMP_TO_EDGE$1;\n\n    this.anisotropic = 1;\n\n    this.genMipmaps = false;\n    this.mipmapHint = GL_DONT_CARE;\n  }\n\n  function parseTexInfo (info, options) {\n    if ('min' in options) {\n      var minFilter = options.min;\n      check$1.parameter(minFilter, minFilters);\n      info.minFilter = minFilters[minFilter];\n      if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0) {\n        info.genMipmaps = true;\n      }\n    }\n\n    if ('mag' in options) {\n      var magFilter = options.mag;\n      check$1.parameter(magFilter, magFilters);\n      info.magFilter = magFilters[magFilter];\n    }\n\n    var wrapS = info.wrapS;\n    var wrapT = info.wrapT;\n    if ('wrap' in options) {\n      var wrap = options.wrap;\n      if (typeof wrap === 'string') {\n        check$1.parameter(wrap, wrapModes);\n        wrapS = wrapT = wrapModes[wrap];\n      } else if (Array.isArray(wrap)) {\n        check$1.parameter(wrap[0], wrapModes);\n        check$1.parameter(wrap[1], wrapModes);\n        wrapS = wrapModes[wrap[0]];\n        wrapT = wrapModes[wrap[1]];\n      }\n    } else {\n      if ('wrapS' in options) {\n        var optWrapS = options.wrapS;\n        check$1.parameter(optWrapS, wrapModes);\n        wrapS = wrapModes[optWrapS];\n      }\n      if ('wrapT' in options) {\n        var optWrapT = options.wrapT;\n        check$1.parameter(optWrapT, wrapModes);\n        wrapT = wrapModes[optWrapT];\n      }\n    }\n    info.wrapS = wrapS;\n    info.wrapT = wrapT;\n\n    if ('anisotropic' in options) {\n      var anisotropic = options.anisotropic;\n      check$1(typeof anisotropic === 'number' &&\n         anisotropic >= 1 && anisotropic <= limits.maxAnisotropic,\n        'aniso samples must be between 1 and ');\n      info.anisotropic = options.anisotropic;\n    }\n\n    if ('mipmap' in options) {\n      var hasMipMap = false;\n      switch (typeof options.mipmap) {\n        case 'string':\n          check$1.parameter(options.mipmap, mipmapHint,\n            'invalid mipmap hint');\n          info.mipmapHint = mipmapHint[options.mipmap];\n          info.genMipmaps = true;\n          hasMipMap = true;\n          break\n\n        case 'boolean':\n          hasMipMap = info.genMipmaps = options.mipmap;\n          break\n\n        case 'object':\n          check$1(Array.isArray(options.mipmap), 'invalid mipmap type');\n          info.genMipmaps = false;\n          hasMipMap = true;\n          break\n\n        default:\n          check$1.raise('invalid mipmap type');\n      }\n      if (hasMipMap && !('min' in options)) {\n        info.minFilter = GL_NEAREST_MIPMAP_NEAREST$1;\n      }\n    }\n  }\n\n  function setTexInfo (info, target) {\n    gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter);\n    gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter);\n    gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS);\n    gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT);\n    if (extensions.ext_texture_filter_anisotropic) {\n      gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);\n    }\n    if (info.genMipmaps) {\n      gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint);\n      gl.generateMipmap(target);\n    }\n  }\n\n  // -------------------------------------------------------\n  // Full texture object\n  // -------------------------------------------------------\n  var textureCount = 0;\n  var textureSet = {};\n  var numTexUnits = limits.maxTextureUnits;\n  var textureUnits = Array(numTexUnits).map(function () {\n    return null\n  });\n\n  function REGLTexture (target) {\n    TexFlags.call(this);\n    this.mipmask = 0;\n    this.internalformat = GL_RGBA;\n\n    this.id = textureCount++;\n\n    this.refCount = 1;\n\n    this.target = target;\n    this.texture = gl.createTexture();\n\n    this.unit = -1;\n    this.bindCount = 0;\n\n    this.texInfo = new TexInfo();\n\n    if (config.profile) {\n      this.stats = {size: 0};\n    }\n  }\n\n  function tempBind (texture) {\n    gl.activeTexture(GL_TEXTURE0);\n    gl.bindTexture(texture.target, texture.texture);\n  }\n\n  function tempRestore () {\n    var prev = textureUnits[0];\n    if (prev) {\n      gl.bindTexture(prev.target, prev.texture);\n    } else {\n      gl.bindTexture(GL_TEXTURE_2D, null);\n    }\n  }\n\n  function destroy (texture) {\n    var handle = texture.texture;\n    check$1(handle, 'must not double destroy texture');\n    var unit = texture.unit;\n    var target = texture.target;\n    if (unit >= 0) {\n      gl.activeTexture(GL_TEXTURE0 + unit);\n      gl.bindTexture(target, null);\n      textureUnits[unit] = null;\n    }\n    gl.deleteTexture(handle);\n    texture.texture = null;\n    texture.params = null;\n    texture.pixels = null;\n    texture.refCount = 0;\n    delete textureSet[texture.id];\n    stats.textureCount--;\n  }\n\n  extend(REGLTexture.prototype, {\n    bind: function () {\n      var texture = this;\n      texture.bindCount += 1;\n      var unit = texture.unit;\n      if (unit < 0) {\n        for (var i = 0; i < numTexUnits; ++i) {\n          var other = textureUnits[i];\n          if (other) {\n            if (other.bindCount > 0) {\n              continue\n            }\n            other.unit = -1;\n          }\n          textureUnits[i] = texture;\n          unit = i;\n          break\n        }\n        if (unit >= numTexUnits) {\n          check$1.raise('insufficient number of texture units');\n        }\n        if (config.profile && stats.maxTextureUnits < (unit + 1)) {\n          stats.maxTextureUnits = unit + 1; // +1, since the units are zero-based\n        }\n        texture.unit = unit;\n        gl.activeTexture(GL_TEXTURE0 + unit);\n        gl.bindTexture(texture.target, texture.texture);\n      }\n      return unit\n    },\n\n    unbind: function () {\n      this.bindCount -= 1;\n    },\n\n    decRef: function () {\n      if (--this.refCount <= 0) {\n        destroy(this);\n      }\n    }\n  });\n\n  function createTexture2D (a, b) {\n    var texture = new REGLTexture(GL_TEXTURE_2D);\n    textureSet[texture.id] = texture;\n    stats.textureCount++;\n\n    function reglTexture2D (a, b) {\n      var texInfo = texture.texInfo;\n      TexInfo.call(texInfo);\n      var mipData = allocMipMap();\n\n      if (typeof a === 'number') {\n        if (typeof b === 'number') {\n          parseMipMapFromShape(mipData, a | 0, b | 0);\n        } else {\n          parseMipMapFromShape(mipData, a | 0, a | 0);\n        }\n      } else if (a) {\n        check$1.type(a, 'object', 'invalid arguments to regl.texture');\n        parseTexInfo(texInfo, a);\n        parseMipMapFromObject(mipData, a);\n      } else {\n        // empty textures get assigned a default shape of 1x1\n        parseMipMapFromShape(mipData, 1, 1);\n      }\n\n      if (texInfo.genMipmaps) {\n        mipData.mipmask = (mipData.width << 1) - 1;\n      }\n      texture.mipmask = mipData.mipmask;\n\n      copyFlags(texture, mipData);\n\n      check$1.texture2D(texInfo, mipData, limits);\n      texture.internalformat = mipData.internalformat;\n\n      reglTexture2D.width = mipData.width;\n      reglTexture2D.height = mipData.height;\n\n      tempBind(texture);\n      setMipMap(mipData, GL_TEXTURE_2D);\n      setTexInfo(texInfo, GL_TEXTURE_2D);\n      tempRestore();\n\n      freeMipMap(mipData);\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          mipData.width,\n          mipData.height,\n          texInfo.genMipmaps,\n          false);\n      }\n      reglTexture2D.format = textureFormatsInvert[texture.internalformat];\n      reglTexture2D.type = textureTypesInvert[texture.type];\n\n      reglTexture2D.mag = magFiltersInvert[texInfo.magFilter];\n      reglTexture2D.min = minFiltersInvert[texInfo.minFilter];\n\n      reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS];\n      reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT];\n\n      return reglTexture2D\n    }\n\n    function subimage (image, x_, y_, level_) {\n      check$1(!!image, 'must specify image data');\n\n      var x = x_ | 0;\n      var y = y_ | 0;\n      var level = level_ | 0;\n\n      var imageData = allocImage();\n      copyFlags(imageData, texture);\n      imageData.width = 0;\n      imageData.height = 0;\n      parseImage(imageData, image);\n      imageData.width = imageData.width || ((texture.width >> level) - x);\n      imageData.height = imageData.height || ((texture.height >> level) - y);\n\n      check$1(\n        texture.type === imageData.type &&\n        texture.format === imageData.format &&\n        texture.internalformat === imageData.internalformat,\n        'incompatible format for texture.subimage');\n      check$1(\n        x >= 0 && y >= 0 &&\n        x + imageData.width <= texture.width &&\n        y + imageData.height <= texture.height,\n        'texture.subimage write out of bounds');\n      check$1(\n        texture.mipmask & (1 << level),\n        'missing mipmap data');\n      check$1(\n        imageData.data || imageData.element || imageData.needsCopy,\n        'missing image data');\n\n      tempBind(texture);\n      setSubImage(imageData, GL_TEXTURE_2D, x, y, level);\n      tempRestore();\n\n      freeImage(imageData);\n\n      return reglTexture2D\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0;\n      var h = (h_ | 0) || w;\n      if (w === texture.width && h === texture.height) {\n        return reglTexture2D\n      }\n\n      reglTexture2D.width = texture.width = w;\n      reglTexture2D.height = texture.height = h;\n\n      tempBind(texture);\n      for (var i = 0; texture.mipmask >> i; ++i) {\n        gl.texImage2D(\n          GL_TEXTURE_2D,\n          i,\n          texture.format,\n          w >> i,\n          h >> i,\n          0,\n          texture.format,\n          texture.type,\n          null);\n      }\n      tempRestore();\n\n      // also, recompute the texture size.\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          w,\n          h,\n          false,\n          false);\n      }\n\n      return reglTexture2D\n    }\n\n    reglTexture2D(a, b);\n\n    reglTexture2D.subimage = subimage;\n    reglTexture2D.resize = resize;\n    reglTexture2D._reglType = 'texture2d';\n    reglTexture2D._texture = texture;\n    if (config.profile) {\n      reglTexture2D.stats = texture.stats;\n    }\n    reglTexture2D.destroy = function () {\n      texture.decRef();\n    };\n\n    return reglTexture2D\n  }\n\n  function createTextureCube (a0, a1, a2, a3, a4, a5) {\n    var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP);\n    textureSet[texture.id] = texture;\n    stats.cubeCount++;\n\n    var faces = new Array(6);\n\n    function reglTextureCube (a0, a1, a2, a3, a4, a5) {\n      var i;\n      var texInfo = texture.texInfo;\n      TexInfo.call(texInfo);\n      for (i = 0; i < 6; ++i) {\n        faces[i] = allocMipMap();\n      }\n\n      if (typeof a0 === 'number' || !a0) {\n        var s = (a0 | 0) || 1;\n        for (i = 0; i < 6; ++i) {\n          parseMipMapFromShape(faces[i], s, s);\n        }\n      } else if (typeof a0 === 'object') {\n        if (a1) {\n          parseMipMapFromObject(faces[0], a0);\n          parseMipMapFromObject(faces[1], a1);\n          parseMipMapFromObject(faces[2], a2);\n          parseMipMapFromObject(faces[3], a3);\n          parseMipMapFromObject(faces[4], a4);\n          parseMipMapFromObject(faces[5], a5);\n        } else {\n          parseTexInfo(texInfo, a0);\n          parseFlags(texture, a0);\n          if ('faces' in a0) {\n            var face_input = a0.faces;\n            check$1(Array.isArray(face_input) && face_input.length === 6,\n              'cube faces must be a length 6 array');\n            for (i = 0; i < 6; ++i) {\n              check$1(typeof face_input[i] === 'object' && !!face_input[i],\n                'invalid input for cube map face');\n              copyFlags(faces[i], texture);\n              parseMipMapFromObject(faces[i], face_input[i]);\n            }\n          } else {\n            for (i = 0; i < 6; ++i) {\n              parseMipMapFromObject(faces[i], a0);\n            }\n          }\n        }\n      } else {\n        check$1.raise('invalid arguments to cube map');\n      }\n\n      copyFlags(texture, faces[0]);\n      if (texInfo.genMipmaps) {\n        texture.mipmask = (faces[0].width << 1) - 1;\n      } else {\n        texture.mipmask = faces[0].mipmask;\n      }\n\n      check$1.textureCube(texture, texInfo, faces, limits);\n      texture.internalformat = faces[0].internalformat;\n\n      reglTextureCube.width = faces[0].width;\n      reglTextureCube.height = faces[0].height;\n\n      tempBind(texture);\n      for (i = 0; i < 6; ++i) {\n        setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n      setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP);\n      tempRestore();\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          texInfo.genMipmaps,\n          true);\n      }\n\n      reglTextureCube.format = textureFormatsInvert[texture.internalformat];\n      reglTextureCube.type = textureTypesInvert[texture.type];\n\n      reglTextureCube.mag = magFiltersInvert[texInfo.magFilter];\n      reglTextureCube.min = minFiltersInvert[texInfo.minFilter];\n\n      reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS];\n      reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT];\n\n      for (i = 0; i < 6; ++i) {\n        freeMipMap(faces[i]);\n      }\n\n      return reglTextureCube\n    }\n\n    function subimage (face, image, x_, y_, level_) {\n      check$1(!!image, 'must specify image data');\n      check$1(typeof face === 'number' && face === (face | 0) &&\n        face >= 0 && face < 6, 'invalid face');\n\n      var x = x_ | 0;\n      var y = y_ | 0;\n      var level = level_ | 0;\n\n      var imageData = allocImage();\n      copyFlags(imageData, texture);\n      imageData.width = 0;\n      imageData.height = 0;\n      parseImage(imageData, image);\n      imageData.width = imageData.width || ((texture.width >> level) - x);\n      imageData.height = imageData.height || ((texture.height >> level) - y);\n\n      check$1(\n        texture.type === imageData.type &&\n        texture.format === imageData.format &&\n        texture.internalformat === imageData.internalformat,\n        'incompatible format for texture.subimage');\n      check$1(\n        x >= 0 && y >= 0 &&\n        x + imageData.width <= texture.width &&\n        y + imageData.height <= texture.height,\n        'texture.subimage write out of bounds');\n      check$1(\n        texture.mipmask & (1 << level),\n        'missing mipmap data');\n      check$1(\n        imageData.data || imageData.element || imageData.needsCopy,\n        'missing image data');\n\n      tempBind(texture);\n      setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X + face, x, y, level);\n      tempRestore();\n\n      freeImage(imageData);\n\n      return reglTextureCube\n    }\n\n    function resize (radius_) {\n      var radius = radius_ | 0;\n      if (radius === texture.width) {\n        return\n      }\n\n      reglTextureCube.width = texture.width = radius;\n      reglTextureCube.height = texture.height = radius;\n\n      tempBind(texture);\n      for (var i = 0; i < 6; ++i) {\n        for (var j = 0; texture.mipmask >> j; ++j) {\n          gl.texImage2D(\n            GL_TEXTURE_CUBE_MAP_POSITIVE_X + i,\n            j,\n            texture.format,\n            radius >> j,\n            radius >> j,\n            0,\n            texture.format,\n            texture.type,\n            null);\n        }\n      }\n      tempRestore();\n\n      if (config.profile) {\n        texture.stats.size = getTextureSize(\n          texture.internalformat,\n          texture.type,\n          reglTextureCube.width,\n          reglTextureCube.height,\n          false,\n          true);\n      }\n\n      return reglTextureCube\n    }\n\n    reglTextureCube(a0, a1, a2, a3, a4, a5);\n\n    reglTextureCube.subimage = subimage;\n    reglTextureCube.resize = resize;\n    reglTextureCube._reglType = 'textureCube';\n    reglTextureCube._texture = texture;\n    if (config.profile) {\n      reglTextureCube.stats = texture.stats;\n    }\n    reglTextureCube.destroy = function () {\n      texture.decRef();\n    };\n\n    return reglTextureCube\n  }\n\n  // Called when regl is destroyed\n  function destroyTextures () {\n    for (var i = 0; i < numTexUnits; ++i) {\n      gl.activeTexture(GL_TEXTURE0 + i);\n      gl.bindTexture(GL_TEXTURE_2D, null);\n      textureUnits[i] = null;\n    }\n    values(textureSet).forEach(destroy);\n\n    stats.cubeCount = 0;\n    stats.textureCount = 0;\n  }\n\n  if (config.profile) {\n    stats.getTotalTextureSize = function () {\n      var total = 0;\n      Object.keys(textureSet).forEach(function (key) {\n        total += textureSet[key].stats.size;\n      });\n      return total\n    };\n  }\n\n  function restoreTextures () {\n    values(textureSet).forEach(function (texture) {\n      texture.texture = gl.createTexture();\n      gl.bindTexture(texture.target, texture.texture);\n      for (var i = 0; i < 32; ++i) {\n        if ((texture.mipmask & (1 << i)) === 0) {\n          continue\n        }\n        if (texture.target === GL_TEXTURE_2D) {\n          gl.texImage2D(GL_TEXTURE_2D,\n            i,\n            texture.internalformat,\n            texture.width >> i,\n            texture.height >> i,\n            0,\n            texture.internalformat,\n            texture.type,\n            null);\n        } else {\n          for (var j = 0; j < 6; ++j) {\n            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X + j,\n              i,\n              texture.internalformat,\n              texture.width >> i,\n              texture.height >> i,\n              0,\n              texture.internalformat,\n              texture.type,\n              null);\n          }\n        }\n      }\n      setTexInfo(texture.texInfo, texture.target);\n    });\n  }\n\n  return {\n    create2D: createTexture2D,\n    createCube: createTextureCube,\n    clear: destroyTextures,\n    getTexture: function (wrapper) {\n      return null\n    },\n    restore: restoreTextures\n  }\n}\n\nvar GL_RENDERBUFFER = 0x8D41;\n\nvar GL_RGBA4$1 = 0x8056;\nvar GL_RGB5_A1$1 = 0x8057;\nvar GL_RGB565$1 = 0x8D62;\nvar GL_DEPTH_COMPONENT16 = 0x81A5;\nvar GL_STENCIL_INDEX8 = 0x8D48;\nvar GL_DEPTH_STENCIL$1 = 0x84F9;\n\nvar GL_SRGB8_ALPHA8_EXT = 0x8C43;\n\nvar GL_RGBA32F_EXT = 0x8814;\n\nvar GL_RGBA16F_EXT = 0x881A;\nvar GL_RGB16F_EXT = 0x881B;\n\nvar FORMAT_SIZES = [];\n\nFORMAT_SIZES[GL_RGBA4$1] = 2;\nFORMAT_SIZES[GL_RGB5_A1$1] = 2;\nFORMAT_SIZES[GL_RGB565$1] = 2;\n\nFORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2;\nFORMAT_SIZES[GL_STENCIL_INDEX8] = 1;\nFORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4;\n\nFORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4;\nFORMAT_SIZES[GL_RGBA32F_EXT] = 16;\nFORMAT_SIZES[GL_RGBA16F_EXT] = 8;\nFORMAT_SIZES[GL_RGB16F_EXT] = 6;\n\nfunction getRenderbufferSize (format, width, height) {\n  return FORMAT_SIZES[format] * width * height\n}\n\nvar wrapRenderbuffers = function (gl, extensions, limits, stats, config) {\n  var formatTypes = {\n    'rgba4': GL_RGBA4$1,\n    'rgb565': GL_RGB565$1,\n    'rgb5 a1': GL_RGB5_A1$1,\n    'depth': GL_DEPTH_COMPONENT16,\n    'stencil': GL_STENCIL_INDEX8,\n    'depth stencil': GL_DEPTH_STENCIL$1\n  };\n\n  if (extensions.ext_srgb) {\n    formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT;\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    formatTypes['rgba16f'] = GL_RGBA16F_EXT;\n    formatTypes['rgb16f'] = GL_RGB16F_EXT;\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    formatTypes['rgba32f'] = GL_RGBA32F_EXT;\n  }\n\n  var formatTypesInvert = [];\n  Object.keys(formatTypes).forEach(function (key) {\n    var val = formatTypes[key];\n    formatTypesInvert[val] = key;\n  });\n\n  var renderbufferCount = 0;\n  var renderbufferSet = {};\n\n  function REGLRenderbuffer (renderbuffer) {\n    this.id = renderbufferCount++;\n    this.refCount = 1;\n\n    this.renderbuffer = renderbuffer;\n\n    this.format = GL_RGBA4$1;\n    this.width = 0;\n    this.height = 0;\n\n    if (config.profile) {\n      this.stats = {size: 0};\n    }\n  }\n\n  REGLRenderbuffer.prototype.decRef = function () {\n    if (--this.refCount <= 0) {\n      destroy(this);\n    }\n  };\n\n  function destroy (rb) {\n    var handle = rb.renderbuffer;\n    check$1(handle, 'must not double destroy renderbuffer');\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n    gl.deleteRenderbuffer(handle);\n    rb.renderbuffer = null;\n    rb.refCount = 0;\n    delete renderbufferSet[rb.id];\n    stats.renderbufferCount--;\n  }\n\n  function createRenderbuffer (a, b) {\n    var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer());\n    renderbufferSet[renderbuffer.id] = renderbuffer;\n    stats.renderbufferCount++;\n\n    function reglRenderbuffer (a, b) {\n      var w = 0;\n      var h = 0;\n      var format = GL_RGBA4$1;\n\n      if (typeof a === 'object' && a) {\n        var options = a;\n        if ('shape' in options) {\n          var shape = options.shape;\n          check$1(Array.isArray(shape) && shape.length >= 2,\n            'invalid renderbuffer shape');\n          w = shape[0] | 0;\n          h = shape[1] | 0;\n        } else {\n          if ('radius' in options) {\n            w = h = options.radius | 0;\n          }\n          if ('width' in options) {\n            w = options.width | 0;\n          }\n          if ('height' in options) {\n            h = options.height | 0;\n          }\n        }\n        if ('format' in options) {\n          check$1.parameter(options.format, formatTypes,\n            'invalid renderbuffer format');\n          format = formatTypes[options.format];\n        }\n      } else if (typeof a === 'number') {\n        w = a | 0;\n        if (typeof b === 'number') {\n          h = b | 0;\n        } else {\n          h = w;\n        }\n      } else if (!a) {\n        w = h = 1;\n      } else {\n        check$1.raise('invalid arguments to renderbuffer constructor');\n      }\n\n      // check shape\n      check$1(\n        w > 0 && h > 0 &&\n        w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,\n        'invalid renderbuffer size');\n\n      if (w === renderbuffer.width &&\n          h === renderbuffer.height &&\n          format === renderbuffer.format) {\n        return\n      }\n\n      reglRenderbuffer.width = renderbuffer.width = w;\n      reglRenderbuffer.height = renderbuffer.height = h;\n      renderbuffer.format = format;\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n      gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h);\n\n      check$1(\n        gl.getError() == 0,\n        'invalid render buffer format');\n\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);\n      }\n      reglRenderbuffer.format = formatTypesInvert[renderbuffer.format];\n\n      return reglRenderbuffer\n    }\n\n    function resize (w_, h_) {\n      var w = w_ | 0;\n      var h = (h_ | 0) || w;\n\n      if (w === renderbuffer.width && h === renderbuffer.height) {\n        return reglRenderbuffer\n      }\n\n      // check shape\n      check$1(\n        w > 0 && h > 0 &&\n        w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,\n        'invalid renderbuffer size');\n\n      reglRenderbuffer.width = renderbuffer.width = w;\n      reglRenderbuffer.height = renderbuffer.height = h;\n\n      gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);\n      gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h);\n\n      check$1(\n        gl.getError() == 0,\n        'invalid render buffer format');\n\n      // also, recompute size.\n      if (config.profile) {\n        renderbuffer.stats.size = getRenderbufferSize(\n          renderbuffer.format, renderbuffer.width, renderbuffer.height);\n      }\n\n      return reglRenderbuffer\n    }\n\n    reglRenderbuffer(a, b);\n\n    reglRenderbuffer.resize = resize;\n    reglRenderbuffer._reglType = 'renderbuffer';\n    reglRenderbuffer._renderbuffer = renderbuffer;\n    if (config.profile) {\n      reglRenderbuffer.stats = renderbuffer.stats;\n    }\n    reglRenderbuffer.destroy = function () {\n      renderbuffer.decRef();\n    };\n\n    return reglRenderbuffer\n  }\n\n  if (config.profile) {\n    stats.getTotalRenderbufferSize = function () {\n      var total = 0;\n      Object.keys(renderbufferSet).forEach(function (key) {\n        total += renderbufferSet[key].stats.size;\n      });\n      return total\n    };\n  }\n\n  function restoreRenderbuffers () {\n    values(renderbufferSet).forEach(function (rb) {\n      rb.renderbuffer = gl.createRenderbuffer();\n      gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer);\n      gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height);\n    });\n    gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n  }\n\n  return {\n    create: createRenderbuffer,\n    clear: function () {\n      values(renderbufferSet).forEach(destroy);\n    },\n    restore: restoreRenderbuffers\n  }\n};\n\n// We store these constants so that the minifier can inline them\nvar GL_FRAMEBUFFER = 0x8D40;\nvar GL_RENDERBUFFER$1 = 0x8D41;\n\nvar GL_TEXTURE_2D$1 = 0x0DE1;\nvar GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515;\n\nvar GL_COLOR_ATTACHMENT0 = 0x8CE0;\nvar GL_DEPTH_ATTACHMENT = 0x8D00;\nvar GL_STENCIL_ATTACHMENT = 0x8D20;\nvar GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\nvar GL_FRAMEBUFFER_COMPLETE = 0x8CD5;\nvar GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\nvar GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\nvar GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\nvar GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\nvar GL_HALF_FLOAT_OES$2 = 0x8D61;\nvar GL_UNSIGNED_BYTE$5 = 0x1401;\nvar GL_FLOAT$4 = 0x1406;\n\nvar GL_RGBA$1 = 0x1908;\n\nvar GL_DEPTH_COMPONENT$1 = 0x1902;\n\nvar colorTextureFormatEnums = [\n  GL_RGBA$1\n];\n\n// for every texture format, store\n// the number of channels\nvar textureFormatChannels = [];\ntextureFormatChannels[GL_RGBA$1] = 4;\n\n// for every texture type, store\n// the size in bytes.\nvar textureTypeSizes = [];\ntextureTypeSizes[GL_UNSIGNED_BYTE$5] = 1;\ntextureTypeSizes[GL_FLOAT$4] = 4;\ntextureTypeSizes[GL_HALF_FLOAT_OES$2] = 2;\n\nvar GL_RGBA4$2 = 0x8056;\nvar GL_RGB5_A1$2 = 0x8057;\nvar GL_RGB565$2 = 0x8D62;\nvar GL_DEPTH_COMPONENT16$1 = 0x81A5;\nvar GL_STENCIL_INDEX8$1 = 0x8D48;\nvar GL_DEPTH_STENCIL$2 = 0x84F9;\n\nvar GL_SRGB8_ALPHA8_EXT$1 = 0x8C43;\n\nvar GL_RGBA32F_EXT$1 = 0x8814;\n\nvar GL_RGBA16F_EXT$1 = 0x881A;\nvar GL_RGB16F_EXT$1 = 0x881B;\n\nvar colorRenderbufferFormatEnums = [\n  GL_RGBA4$2,\n  GL_RGB5_A1$2,\n  GL_RGB565$2,\n  GL_SRGB8_ALPHA8_EXT$1,\n  GL_RGBA16F_EXT$1,\n  GL_RGB16F_EXT$1,\n  GL_RGBA32F_EXT$1\n];\n\nvar statusCode = {};\nstatusCode[GL_FRAMEBUFFER_COMPLETE] = 'complete';\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT] = 'incomplete attachment';\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS] = 'incomplete dimensions';\nstatusCode[GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT] = 'incomplete, missing attachment';\nstatusCode[GL_FRAMEBUFFER_UNSUPPORTED] = 'unsupported';\n\nfunction wrapFBOState (\n  gl,\n  extensions,\n  limits,\n  textureState,\n  renderbufferState,\n  stats) {\n  var framebufferState = {\n    cur: null,\n    next: null,\n    dirty: false,\n    setFBO: null\n  };\n\n  var colorTextureFormats = ['rgba'];\n  var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1'];\n\n  if (extensions.ext_srgb) {\n    colorRenderbufferFormats.push('srgba');\n  }\n\n  if (extensions.ext_color_buffer_half_float) {\n    colorRenderbufferFormats.push('rgba16f', 'rgb16f');\n  }\n\n  if (extensions.webgl_color_buffer_float) {\n    colorRenderbufferFormats.push('rgba32f');\n  }\n\n  var colorTypes = ['uint8'];\n  if (extensions.oes_texture_half_float) {\n    colorTypes.push('half float', 'float16');\n  }\n  if (extensions.oes_texture_float) {\n    colorTypes.push('float', 'float32');\n  }\n\n  function FramebufferAttachment (target, texture, renderbuffer) {\n    this.target = target;\n    this.texture = texture;\n    this.renderbuffer = renderbuffer;\n\n    var w = 0;\n    var h = 0;\n    if (texture) {\n      w = texture.width;\n      h = texture.height;\n    } else if (renderbuffer) {\n      w = renderbuffer.width;\n      h = renderbuffer.height;\n    }\n    this.width = w;\n    this.height = h;\n  }\n\n  function decRef (attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture._texture.decRef();\n      }\n      if (attachment.renderbuffer) {\n        attachment.renderbuffer._renderbuffer.decRef();\n      }\n    }\n  }\n\n  function incRefAndCheckShape (attachment, width, height) {\n    if (!attachment) {\n      return\n    }\n    if (attachment.texture) {\n      var texture = attachment.texture._texture;\n      var tw = Math.max(1, texture.width);\n      var th = Math.max(1, texture.height);\n      check$1(tw === width && th === height,\n        'inconsistent width/height for supplied texture');\n      texture.refCount += 1;\n    } else {\n      var renderbuffer = attachment.renderbuffer._renderbuffer;\n      check$1(\n        renderbuffer.width === width && renderbuffer.height === height,\n        'inconsistent width/height for renderbuffer');\n      renderbuffer.refCount += 1;\n    }\n  }\n\n  function attach (location, attachment) {\n    if (attachment) {\n      if (attachment.texture) {\n        gl.framebufferTexture2D(\n          GL_FRAMEBUFFER,\n          location,\n          attachment.target,\n          attachment.texture._texture.texture,\n          0);\n      } else {\n        gl.framebufferRenderbuffer(\n          GL_FRAMEBUFFER,\n          location,\n          GL_RENDERBUFFER$1,\n          attachment.renderbuffer._renderbuffer.renderbuffer);\n      }\n    }\n  }\n\n  function parseAttachment (attachment) {\n    var target = GL_TEXTURE_2D$1;\n    var texture = null;\n    var renderbuffer = null;\n\n    var data = attachment;\n    if (typeof attachment === 'object') {\n      data = attachment.data;\n      if ('target' in attachment) {\n        target = attachment.target | 0;\n      }\n    }\n\n    check$1.type(data, 'function', 'invalid attachment data');\n\n    var type = data._reglType;\n    if (type === 'texture2d') {\n      texture = data;\n      check$1(target === GL_TEXTURE_2D$1);\n    } else if (type === 'textureCube') {\n      texture = data;\n      check$1(\n        target >= GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 &&\n        target < GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + 6,\n        'invalid cube map target');\n    } else if (type === 'renderbuffer') {\n      renderbuffer = data;\n      target = GL_RENDERBUFFER$1;\n    } else {\n      check$1.raise('invalid regl object for attachment');\n    }\n\n    return new FramebufferAttachment(target, texture, renderbuffer)\n  }\n\n  function allocAttachment (\n    width,\n    height,\n    isTexture,\n    format,\n    type) {\n    if (isTexture) {\n      var texture = textureState.create2D({\n        width: width,\n        height: height,\n        format: format,\n        type: type\n      });\n      texture._texture.refCount = 0;\n      return new FramebufferAttachment(GL_TEXTURE_2D$1, texture, null)\n    } else {\n      var rb = renderbufferState.create({\n        width: width,\n        height: height,\n        format: format\n      });\n      rb._renderbuffer.refCount = 0;\n      return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb)\n    }\n  }\n\n  function unwrapAttachment (attachment) {\n    return attachment && (attachment.texture || attachment.renderbuffer)\n  }\n\n  function resizeAttachment (attachment, w, h) {\n    if (attachment) {\n      if (attachment.texture) {\n        attachment.texture.resize(w, h);\n      } else if (attachment.renderbuffer) {\n        attachment.renderbuffer.resize(w, h);\n      }\n    }\n  }\n\n  var framebufferCount = 0;\n  var framebufferSet = {};\n\n  function REGLFramebuffer () {\n    this.id = framebufferCount++;\n    framebufferSet[this.id] = this;\n\n    this.framebuffer = gl.createFramebuffer();\n    this.width = 0;\n    this.height = 0;\n\n    this.colorAttachments = [];\n    this.depthAttachment = null;\n    this.stencilAttachment = null;\n    this.depthStencilAttachment = null;\n  }\n\n  function decFBORefs (framebuffer) {\n    framebuffer.colorAttachments.forEach(decRef);\n    decRef(framebuffer.depthAttachment);\n    decRef(framebuffer.stencilAttachment);\n    decRef(framebuffer.depthStencilAttachment);\n  }\n\n  function destroy (framebuffer) {\n    var handle = framebuffer.framebuffer;\n    check$1(handle, 'must not double destroy framebuffer');\n    gl.deleteFramebuffer(handle);\n    framebuffer.framebuffer = null;\n    stats.framebufferCount--;\n    delete framebufferSet[framebuffer.id];\n  }\n\n  function updateFramebuffer (framebuffer) {\n    var i;\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER, framebuffer.framebuffer);\n    var colorAttachments = framebuffer.colorAttachments;\n    for (i = 0; i < colorAttachments.length; ++i) {\n      attach(GL_COLOR_ATTACHMENT0 + i, colorAttachments[i]);\n    }\n    for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {\n      gl.framebufferTexture2D(\n        GL_FRAMEBUFFER,\n        GL_COLOR_ATTACHMENT0 + i,\n        GL_TEXTURE_2D$1,\n        null,\n        0);\n    }\n\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER,\n      GL_DEPTH_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$1,\n      null,\n      0);\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER,\n      GL_DEPTH_ATTACHMENT,\n      GL_TEXTURE_2D$1,\n      null,\n      0);\n    gl.framebufferTexture2D(\n      GL_FRAMEBUFFER,\n      GL_STENCIL_ATTACHMENT,\n      GL_TEXTURE_2D$1,\n      null,\n      0);\n\n    attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment);\n    attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment);\n    attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment);\n\n    // Check status code\n    var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER);\n    if (status !== GL_FRAMEBUFFER_COMPLETE) {\n      check$1.raise('framebuffer configuration not supported, status = ' +\n        statusCode[status]);\n    }\n\n    gl.bindFramebuffer(GL_FRAMEBUFFER, framebufferState.next);\n    framebufferState.cur = framebufferState.next;\n\n    // FIXME: Clear error code here.  This is a work around for a bug in\n    // headless-gl\n    gl.getError();\n  }\n\n  function createFBO (a0, a1) {\n    var framebuffer = new REGLFramebuffer();\n    stats.framebufferCount++;\n\n    function reglFramebuffer (a, b) {\n      var i;\n\n      check$1(framebufferState.next !== framebuffer,\n        'can not update framebuffer which is currently in use');\n\n      var extDrawBuffers = extensions.webgl_draw_buffers;\n\n      var width = 0;\n      var height = 0;\n\n      var needsDepth = true;\n      var needsStencil = true;\n\n      var colorBuffer = null;\n      var colorTexture = true;\n      var colorFormat = 'rgba';\n      var colorType = 'uint8';\n      var colorCount = 1;\n\n      var depthBuffer = null;\n      var stencilBuffer = null;\n      var depthStencilBuffer = null;\n      var depthStencilTexture = false;\n\n      if (typeof a === 'number') {\n        width = a | 0;\n        height = (b | 0) || width;\n      } else if (!a) {\n        width = height = 1;\n      } else {\n        check$1.type(a, 'object', 'invalid arguments for framebuffer');\n        var options = a;\n\n        if ('shape' in options) {\n          var shape = options.shape;\n          check$1(Array.isArray(shape) && shape.length >= 2,\n            'invalid shape for framebuffer');\n          width = shape[0];\n          height = shape[1];\n        } else {\n          if ('radius' in options) {\n            width = height = options.radius;\n          }\n          if ('width' in options) {\n            width = options.width;\n          }\n          if ('height' in options) {\n            height = options.height;\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors;\n          if (Array.isArray(colorBuffer)) {\n            check$1(\n              colorBuffer.length === 1 || extDrawBuffers,\n              'multiple render targets not supported');\n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0;\n            check$1(colorCount > 0, 'invalid color buffer count');\n          }\n\n          if ('colorTexture' in options) {\n            colorTexture = !!options.colorTexture;\n            colorFormat = 'rgba4';\n          }\n\n          if ('colorType' in options) {\n            colorType = options.colorType;\n            if (!colorTexture) {\n              if (colorType === 'half float' || colorType === 'float16') {\n                check$1(extensions.ext_color_buffer_half_float,\n                  'you must enable EXT_color_buffer_half_float to use 16-bit render buffers');\n                colorFormat = 'rgba16f';\n              } else if (colorType === 'float' || colorType === 'float32') {\n                check$1(extensions.webgl_color_buffer_float,\n                  'you must enable WEBGL_color_buffer_float in order to use 32-bit floating point renderbuffers');\n                colorFormat = 'rgba32f';\n              }\n            } else {\n              check$1(extensions.oes_texture_float ||\n                !(colorType === 'float' || colorType === 'float32'),\n                'you must enable OES_texture_float in order to use floating point framebuffer objects');\n              check$1(extensions.oes_texture_half_float ||\n                !(colorType === 'half float' || colorType === 'float16'),\n                'you must enable OES_texture_half_float in order to use 16-bit floating point framebuffer objects');\n            }\n            check$1.oneOf(colorType, colorTypes, 'invalid color type');\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat;\n            if (colorTextureFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = true;\n            } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {\n              colorTexture = false;\n            } else {\n              if (colorTexture) {\n                check$1.oneOf(\n                  options.colorFormat, colorTextureFormats,\n                  'invalid color format for texture');\n              } else {\n                check$1.oneOf(\n                  options.colorFormat, colorRenderbufferFormats,\n                  'invalid color format for renderbuffer');\n              }\n            }\n          }\n        }\n\n        if ('depthTexture' in options || 'depthStencilTexture' in options) {\n          depthStencilTexture = !!(options.depthTexture ||\n            options.depthStencilTexture);\n          check$1(!depthStencilTexture || extensions.webgl_depth_texture,\n            'webgl_depth_texture extension not supported');\n        }\n\n        if ('depth' in options) {\n          if (typeof options.depth === 'boolean') {\n            needsDepth = options.depth;\n          } else {\n            depthBuffer = options.depth;\n            needsStencil = false;\n          }\n        }\n\n        if ('stencil' in options) {\n          if (typeof options.stencil === 'boolean') {\n            needsStencil = options.stencil;\n          } else {\n            stencilBuffer = options.stencil;\n            needsDepth = false;\n          }\n        }\n\n        if ('depthStencil' in options) {\n          if (typeof options.depthStencil === 'boolean') {\n            needsDepth = needsStencil = options.depthStencil;\n          } else {\n            depthStencilBuffer = options.depthStencil;\n            needsDepth = false;\n            needsStencil = false;\n          }\n        }\n      }\n\n      // parse attachments\n      var colorAttachments = null;\n      var depthAttachment = null;\n      var stencilAttachment = null;\n      var depthStencilAttachment = null;\n\n      // Set up color attachments\n      if (Array.isArray(colorBuffer)) {\n        colorAttachments = colorBuffer.map(parseAttachment);\n      } else if (colorBuffer) {\n        colorAttachments = [parseAttachment(colorBuffer)];\n      } else {\n        colorAttachments = new Array(colorCount);\n        for (i = 0; i < colorCount; ++i) {\n          colorAttachments[i] = allocAttachment(\n            width,\n            height,\n            colorTexture,\n            colorFormat,\n            colorType);\n        }\n      }\n\n      check$1(extensions.webgl_draw_buffers || colorAttachments.length <= 1,\n        'you must enable the WEBGL_draw_buffers extension in order to use multiple color buffers.');\n      check$1(colorAttachments.length <= limits.maxColorAttachments,\n        'too many color attachments, not supported');\n\n      width = width || colorAttachments[0].width;\n      height = height || colorAttachments[0].height;\n\n      if (depthBuffer) {\n        depthAttachment = parseAttachment(depthBuffer);\n      } else if (needsDepth && !needsStencil) {\n        depthAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth',\n          'uint32');\n      }\n\n      if (stencilBuffer) {\n        stencilAttachment = parseAttachment(stencilBuffer);\n      } else if (needsStencil && !needsDepth) {\n        stencilAttachment = allocAttachment(\n          width,\n          height,\n          false,\n          'stencil',\n          'uint8');\n      }\n\n      if (depthStencilBuffer) {\n        depthStencilAttachment = parseAttachment(depthStencilBuffer);\n      } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {\n        depthStencilAttachment = allocAttachment(\n          width,\n          height,\n          depthStencilTexture,\n          'depth stencil',\n          'depth stencil');\n      }\n\n      check$1(\n        (!!depthBuffer) + (!!stencilBuffer) + (!!depthStencilBuffer) <= 1,\n        'invalid framebuffer configuration, can specify exactly one depth/stencil attachment');\n\n      var commonColorAttachmentSize = null;\n\n      for (i = 0; i < colorAttachments.length; ++i) {\n        incRefAndCheckShape(colorAttachments[i], width, height);\n        check$1(!colorAttachments[i] ||\n          (colorAttachments[i].texture &&\n            colorTextureFormatEnums.indexOf(colorAttachments[i].texture._texture.format) >= 0) ||\n          (colorAttachments[i].renderbuffer &&\n            colorRenderbufferFormatEnums.indexOf(colorAttachments[i].renderbuffer._renderbuffer.format) >= 0),\n          'framebuffer color attachment ' + i + ' is invalid');\n\n        if (colorAttachments[i] && colorAttachments[i].texture) {\n          var colorAttachmentSize =\n              textureFormatChannels[colorAttachments[i].texture._texture.format] *\n              textureTypeSizes[colorAttachments[i].texture._texture.type];\n\n          if (commonColorAttachmentSize === null) {\n            commonColorAttachmentSize = colorAttachmentSize;\n          } else {\n            // We need to make sure that all color attachments have the same number of bitplanes\n            // (that is, the same numer of bits per pixel)\n            // This is required by the GLES2.0 standard. See the beginning of Chapter 4 in that document.\n            check$1(commonColorAttachmentSize === colorAttachmentSize,\n                  'all color attachments much have the same number of bits per pixel.');\n          }\n        }\n      }\n      incRefAndCheckShape(depthAttachment, width, height);\n      check$1(!depthAttachment ||\n        (depthAttachment.texture &&\n          depthAttachment.texture._texture.format === GL_DEPTH_COMPONENT$1) ||\n        (depthAttachment.renderbuffer &&\n          depthAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_COMPONENT16$1),\n        'invalid depth attachment for framebuffer object');\n      incRefAndCheckShape(stencilAttachment, width, height);\n      check$1(!stencilAttachment ||\n        (stencilAttachment.renderbuffer &&\n          stencilAttachment.renderbuffer._renderbuffer.format === GL_STENCIL_INDEX8$1),\n        'invalid stencil attachment for framebuffer object');\n      incRefAndCheckShape(depthStencilAttachment, width, height);\n      check$1(!depthStencilAttachment ||\n        (depthStencilAttachment.texture &&\n          depthStencilAttachment.texture._texture.format === GL_DEPTH_STENCIL$2) ||\n        (depthStencilAttachment.renderbuffer &&\n          depthStencilAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_STENCIL$2),\n        'invalid depth-stencil attachment for framebuffer object');\n\n      // decrement references\n      decFBORefs(framebuffer);\n\n      framebuffer.width = width;\n      framebuffer.height = height;\n\n      framebuffer.colorAttachments = colorAttachments;\n      framebuffer.depthAttachment = depthAttachment;\n      framebuffer.stencilAttachment = stencilAttachment;\n      framebuffer.depthStencilAttachment = depthStencilAttachment;\n\n      reglFramebuffer.color = colorAttachments.map(unwrapAttachment);\n      reglFramebuffer.depth = unwrapAttachment(depthAttachment);\n      reglFramebuffer.stencil = unwrapAttachment(stencilAttachment);\n      reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment);\n\n      reglFramebuffer.width = framebuffer.width;\n      reglFramebuffer.height = framebuffer.height;\n\n      updateFramebuffer(framebuffer);\n\n      return reglFramebuffer\n    }\n\n    function resize (w_, h_) {\n      check$1(framebufferState.next !== framebuffer,\n        'can not resize a framebuffer which is currently in use');\n\n      var w = w_ | 0;\n      var h = (h_ | 0) || w;\n      if (w === framebuffer.width && h === framebuffer.height) {\n        return reglFramebuffer\n      }\n\n      // resize all buffers\n      var colorAttachments = framebuffer.colorAttachments;\n      for (var i = 0; i < colorAttachments.length; ++i) {\n        resizeAttachment(colorAttachments[i], w, h);\n      }\n      resizeAttachment(framebuffer.depthAttachment, w, h);\n      resizeAttachment(framebuffer.stencilAttachment, w, h);\n      resizeAttachment(framebuffer.depthStencilAttachment, w, h);\n\n      framebuffer.width = reglFramebuffer.width = w;\n      framebuffer.height = reglFramebuffer.height = h;\n\n      updateFramebuffer(framebuffer);\n\n      return reglFramebuffer\n    }\n\n    reglFramebuffer(a0, a1);\n\n    return extend(reglFramebuffer, {\n      resize: resize,\n      _reglType: 'framebuffer',\n      _framebuffer: framebuffer,\n      destroy: function () {\n        destroy(framebuffer);\n        decFBORefs(framebuffer);\n      },\n      use: function (block) {\n        framebufferState.setFBO({\n          framebuffer: reglFramebuffer\n        }, block);\n      }\n    })\n  }\n\n  function createCubeFBO (options) {\n    var faces = Array(6);\n\n    function reglFramebufferCube (a) {\n      var i;\n\n      check$1(faces.indexOf(framebufferState.next) < 0,\n        'can not update framebuffer which is currently in use');\n\n      var extDrawBuffers = extensions.webgl_draw_buffers;\n\n      var params = {\n        color: null\n      };\n\n      var radius = 0;\n\n      var colorBuffer = null;\n      var colorFormat = 'rgba';\n      var colorType = 'uint8';\n      var colorCount = 1;\n\n      if (typeof a === 'number') {\n        radius = a | 0;\n      } else if (!a) {\n        radius = 1;\n      } else {\n        check$1.type(a, 'object', 'invalid arguments for framebuffer');\n        var options = a;\n\n        if ('shape' in options) {\n          var shape = options.shape;\n          check$1(\n            Array.isArray(shape) && shape.length >= 2,\n            'invalid shape for framebuffer');\n          check$1(\n            shape[0] === shape[1],\n            'cube framebuffer must be square');\n          radius = shape[0];\n        } else {\n          if ('radius' in options) {\n            radius = options.radius | 0;\n          }\n          if ('width' in options) {\n            radius = options.width | 0;\n            if ('height' in options) {\n              check$1(options.height === radius, 'must be square');\n            }\n          } else if ('height' in options) {\n            radius = options.height | 0;\n          }\n        }\n\n        if ('color' in options ||\n            'colors' in options) {\n          colorBuffer =\n            options.color ||\n            options.colors;\n          if (Array.isArray(colorBuffer)) {\n            check$1(\n              colorBuffer.length === 1 || extDrawBuffers,\n              'multiple render targets not supported');\n          }\n        }\n\n        if (!colorBuffer) {\n          if ('colorCount' in options) {\n            colorCount = options.colorCount | 0;\n            check$1(colorCount > 0, 'invalid color buffer count');\n          }\n\n          if ('colorType' in options) {\n            check$1.oneOf(\n              options.colorType, colorTypes,\n              'invalid color type');\n            colorType = options.colorType;\n          }\n\n          if ('colorFormat' in options) {\n            colorFormat = options.colorFormat;\n            check$1.oneOf(\n              options.colorFormat, colorTextureFormats,\n              'invalid color format for texture');\n          }\n        }\n\n        if ('depth' in options) {\n          params.depth = options.depth;\n        }\n\n        if ('stencil' in options) {\n          params.stencil = options.stencil;\n        }\n\n        if ('depthStencil' in options) {\n          params.depthStencil = options.depthStencil;\n        }\n      }\n\n      var colorCubes;\n      if (colorBuffer) {\n        if (Array.isArray(colorBuffer)) {\n          colorCubes = [];\n          for (i = 0; i < colorBuffer.length; ++i) {\n            colorCubes[i] = colorBuffer[i];\n          }\n        } else {\n          colorCubes = [ colorBuffer ];\n        }\n      } else {\n        colorCubes = Array(colorCount);\n        var cubeMapParams = {\n          radius: radius,\n          format: colorFormat,\n          type: colorType\n        };\n        for (i = 0; i < colorCount; ++i) {\n          colorCubes[i] = textureState.createCube(cubeMapParams);\n        }\n      }\n\n      // Check color cubes\n      params.color = Array(colorCubes.length);\n      for (i = 0; i < colorCubes.length; ++i) {\n        var cube = colorCubes[i];\n        check$1(\n          typeof cube === 'function' && cube._reglType === 'textureCube',\n          'invalid cube map');\n        radius = radius || cube.width;\n        check$1(\n          cube.width === radius && cube.height === radius,\n          'invalid cube map shape');\n        params.color[i] = {\n          target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$1,\n          data: colorCubes[i]\n        };\n      }\n\n      for (i = 0; i < 6; ++i) {\n        for (var j = 0; j < colorCubes.length; ++j) {\n          params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i;\n        }\n        // reuse depth-stencil attachments across all cube maps\n        if (i > 0) {\n          params.depth = faces[0].depth;\n          params.stencil = faces[0].stencil;\n          params.depthStencil = faces[0].depthStencil;\n        }\n        if (faces[i]) {\n          (faces[i])(params);\n        } else {\n          faces[i] = createFBO(params);\n        }\n      }\n\n      return extend(reglFramebufferCube, {\n        width: radius,\n        height: radius,\n        color: colorCubes\n      })\n    }\n\n    function resize (radius_) {\n      var i;\n      var radius = radius_ | 0;\n      check$1(radius > 0 && radius <= limits.maxCubeMapSize,\n        'invalid radius for cube fbo');\n\n      if (radius === reglFramebufferCube.width) {\n        return reglFramebufferCube\n      }\n\n      var colors = reglFramebufferCube.color;\n      for (i = 0; i < colors.length; ++i) {\n        colors[i].resize(radius);\n      }\n\n      for (i = 0; i < 6; ++i) {\n        faces[i].resize(radius);\n      }\n\n      reglFramebufferCube.width = reglFramebufferCube.height = radius;\n\n      return reglFramebufferCube\n    }\n\n    reglFramebufferCube(options);\n\n    return extend(reglFramebufferCube, {\n      faces: faces,\n      resize: resize,\n      _reglType: 'framebufferCube',\n      destroy: function () {\n        faces.forEach(function (f) {\n          f.destroy();\n        });\n      }\n    })\n  }\n\n  function restoreFramebuffers () {\n    values(framebufferSet).forEach(function (fb) {\n      fb.framebuffer = gl.createFramebuffer();\n      updateFramebuffer(fb);\n    });\n  }\n\n  return extend(framebufferState, {\n    getFramebuffer: function (object) {\n      if (typeof object === 'function' && object._reglType === 'framebuffer') {\n        var fbo = object._framebuffer;\n        if (fbo instanceof REGLFramebuffer) {\n          return fbo\n        }\n      }\n      return null\n    },\n    create: createFBO,\n    createCube: createCubeFBO,\n    clear: function () {\n      values(framebufferSet).forEach(destroy);\n    },\n    restore: restoreFramebuffers\n  })\n}\n\nvar GL_FLOAT$5 = 5126;\n\nfunction AttributeRecord () {\n  this.state = 0;\n\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  this.w = 0.0;\n\n  this.buffer = null;\n  this.size = 0;\n  this.normalized = false;\n  this.type = GL_FLOAT$5;\n  this.offset = 0;\n  this.stride = 0;\n  this.divisor = 0;\n}\n\nfunction wrapAttributeState (\n  gl,\n  extensions,\n  limits,\n  bufferState,\n  stringStore) {\n  var NUM_ATTRIBUTES = limits.maxAttributes;\n  var attributeBindings = new Array(NUM_ATTRIBUTES);\n  for (var i = 0; i < NUM_ATTRIBUTES; ++i) {\n    attributeBindings[i] = new AttributeRecord();\n  }\n\n  return {\n    Record: AttributeRecord,\n    scope: {},\n    state: attributeBindings\n  }\n}\n\nvar GL_FRAGMENT_SHADER = 35632;\nvar GL_VERTEX_SHADER = 35633;\n\nvar GL_ACTIVE_UNIFORMS = 0x8B86;\nvar GL_ACTIVE_ATTRIBUTES = 0x8B89;\n\nfunction wrapShaderState (gl, stringStore, stats, config) {\n  // ===================================================\n  // glsl compilation and linking\n  // ===================================================\n  var fragShaders = {};\n  var vertShaders = {};\n\n  function ActiveInfo (name, id, location, info) {\n    this.name = name;\n    this.id = id;\n    this.location = location;\n    this.info = info;\n  }\n\n  function insertActiveInfo (list, info) {\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].id === info.id) {\n        list[i].location = info.location;\n        return\n      }\n    }\n    list.push(info);\n  }\n\n  function getShader (type, id, command) {\n    var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders;\n    var shader = cache[id];\n\n    if (!shader) {\n      var source = stringStore.str(id);\n      shader = gl.createShader(type);\n      gl.shaderSource(shader, source);\n      gl.compileShader(shader);\n      check$1.shaderError(gl, shader, source, type, command);\n      cache[id] = shader;\n    }\n\n    return shader\n  }\n\n  // ===================================================\n  // program linking\n  // ===================================================\n  var programCache = {};\n  var programList = [];\n\n  var PROGRAM_COUNTER = 0;\n\n  function REGLProgram (fragId, vertId) {\n    this.id = PROGRAM_COUNTER++;\n    this.fragId = fragId;\n    this.vertId = vertId;\n    this.program = null;\n    this.uniforms = [];\n    this.attributes = [];\n\n    if (config.profile) {\n      this.stats = {\n        uniformsCount: 0,\n        attributesCount: 0\n      };\n    }\n  }\n\n  function linkProgram (desc, command) {\n    var i, info;\n\n    // -------------------------------\n    // compile & link\n    // -------------------------------\n    var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId);\n    var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId);\n\n    var program = desc.program = gl.createProgram();\n    gl.attachShader(program, fragShader);\n    gl.attachShader(program, vertShader);\n    gl.linkProgram(program);\n    check$1.linkError(\n      gl,\n      program,\n      stringStore.str(desc.fragId),\n      stringStore.str(desc.vertId),\n      command);\n\n    // -------------------------------\n    // grab uniforms\n    // -------------------------------\n    var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS);\n    if (config.profile) {\n      desc.stats.uniformsCount = numUniforms;\n    }\n    var uniforms = desc.uniforms;\n    for (i = 0; i < numUniforms; ++i) {\n      info = gl.getActiveUniform(program, i);\n      if (info) {\n        if (info.size > 1) {\n          for (var j = 0; j < info.size; ++j) {\n            var name = info.name.replace('[0]', '[' + j + ']');\n            insertActiveInfo(uniforms, new ActiveInfo(\n              name,\n              stringStore.id(name),\n              gl.getUniformLocation(program, name),\n              info));\n          }\n        } else {\n          insertActiveInfo(uniforms, new ActiveInfo(\n            info.name,\n            stringStore.id(info.name),\n            gl.getUniformLocation(program, info.name),\n            info));\n        }\n      }\n    }\n\n    // -------------------------------\n    // grab attributes\n    // -------------------------------\n    var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES);\n    if (config.profile) {\n      desc.stats.attributesCount = numAttributes;\n    }\n\n    var attributes = desc.attributes;\n    for (i = 0; i < numAttributes; ++i) {\n      info = gl.getActiveAttrib(program, i);\n      if (info) {\n        insertActiveInfo(attributes, new ActiveInfo(\n          info.name,\n          stringStore.id(info.name),\n          gl.getAttribLocation(program, info.name),\n          info));\n      }\n    }\n  }\n\n  if (config.profile) {\n    stats.getMaxUniformsCount = function () {\n      var m = 0;\n      programList.forEach(function (desc) {\n        if (desc.stats.uniformsCount > m) {\n          m = desc.stats.uniformsCount;\n        }\n      });\n      return m\n    };\n\n    stats.getMaxAttributesCount = function () {\n      var m = 0;\n      programList.forEach(function (desc) {\n        if (desc.stats.attributesCount > m) {\n          m = desc.stats.attributesCount;\n        }\n      });\n      return m\n    };\n  }\n\n  function restoreShaders () {\n    fragShaders = {};\n    vertShaders = {};\n    for (var i = 0; i < programList.length; ++i) {\n      linkProgram(programList[i]);\n    }\n  }\n\n  return {\n    clear: function () {\n      var deleteShader = gl.deleteShader.bind(gl);\n      values(fragShaders).forEach(deleteShader);\n      fragShaders = {};\n      values(vertShaders).forEach(deleteShader);\n      vertShaders = {};\n\n      programList.forEach(function (desc) {\n        gl.deleteProgram(desc.program);\n      });\n      programList.length = 0;\n      programCache = {};\n\n      stats.shaderCount = 0;\n    },\n\n    program: function (vertId, fragId, command) {\n      check$1.command(vertId >= 0, 'missing vertex shader', command);\n      check$1.command(fragId >= 0, 'missing fragment shader', command);\n\n      var cache = programCache[fragId];\n      if (!cache) {\n        cache = programCache[fragId] = {};\n      }\n      var program = cache[vertId];\n      if (!program) {\n        program = new REGLProgram(fragId, vertId);\n        stats.shaderCount++;\n\n        linkProgram(program, command);\n        cache[vertId] = program;\n        programList.push(program);\n      }\n      return program\n    },\n\n    restore: restoreShaders,\n\n    shader: getShader,\n\n    frag: -1,\n    vert: -1\n  }\n}\n\nvar GL_RGBA$2 = 6408;\nvar GL_UNSIGNED_BYTE$6 = 5121;\nvar GL_PACK_ALIGNMENT = 0x0D05;\nvar GL_FLOAT$6 = 0x1406; // 5126\n\nfunction wrapReadPixels (\n  gl,\n  framebufferState,\n  reglPoll,\n  context,\n  glAttributes,\n  extensions) {\n  function readPixelsImpl (input) {\n    var type;\n    if (framebufferState.next === null) {\n      check$1(\n        glAttributes.preserveDrawingBuffer,\n        'you must create a webgl context with \"preserveDrawingBuffer\":true in order to read pixels from the drawing buffer');\n      type = GL_UNSIGNED_BYTE$6;\n    } else {\n      check$1(\n        framebufferState.next.colorAttachments[0].texture !== null,\n          'You cannot read from a renderbuffer');\n      type = framebufferState.next.colorAttachments[0].texture._texture.type;\n\n      if (extensions.oes_texture_float) {\n        check$1(\n          type === GL_UNSIGNED_BYTE$6 || type === GL_FLOAT$6,\n          'Reading from a framebuffer is only allowed for the types \\'uint8\\' and \\'float\\'');\n      } else {\n        check$1(\n          type === GL_UNSIGNED_BYTE$6,\n          'Reading from a framebuffer is only allowed for the type \\'uint8\\'');\n      }\n    }\n\n    var x = 0;\n    var y = 0;\n    var width = context.framebufferWidth;\n    var height = context.framebufferHeight;\n    var data = null;\n\n    if (isTypedArray(input)) {\n      data = input;\n    } else if (input) {\n      check$1.type(input, 'object', 'invalid arguments to regl.read()');\n      x = input.x | 0;\n      y = input.y | 0;\n      check$1(\n        x >= 0 && x < context.framebufferWidth,\n        'invalid x offset for regl.read');\n      check$1(\n        y >= 0 && y < context.framebufferHeight,\n        'invalid y offset for regl.read');\n      width = (input.width || (context.framebufferWidth - x)) | 0;\n      height = (input.height || (context.framebufferHeight - y)) | 0;\n      data = input.data || null;\n    }\n\n    // sanity check input.data\n    if (data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        check$1(\n          data instanceof Uint8Array,\n          'buffer must be \\'Uint8Array\\' when reading from a framebuffer of type \\'uint8\\'');\n      } else if (type === GL_FLOAT$6) {\n        check$1(\n          data instanceof Float32Array,\n          'buffer must be \\'Float32Array\\' when reading from a framebuffer of type \\'float\\'');\n      }\n    }\n\n    check$1(\n      width > 0 && width + x <= context.framebufferWidth,\n      'invalid width for read pixels');\n    check$1(\n      height > 0 && height + y <= context.framebufferHeight,\n      'invalid height for read pixels');\n\n    // Update WebGL state\n    reglPoll();\n\n    // Compute size\n    var size = width * height * 4;\n\n    // Allocate data\n    if (!data) {\n      if (type === GL_UNSIGNED_BYTE$6) {\n        data = new Uint8Array(size);\n      } else if (type === GL_FLOAT$6) {\n        data = data || new Float32Array(size);\n      }\n    }\n\n    // Type check\n    check$1.isTypedArray(data, 'data buffer for regl.read() must be a typedarray');\n    check$1(data.byteLength >= size, 'data buffer for regl.read() too small');\n\n    // Run read pixels\n    gl.pixelStorei(GL_PACK_ALIGNMENT, 4);\n    gl.readPixels(x, y, width, height, GL_RGBA$2,\n                  type,\n                  data);\n\n    return data\n  }\n\n  function readPixelsFBO (options) {\n    var result;\n    framebufferState.setFBO({\n      framebuffer: options.framebuffer\n    }, function () {\n      result = readPixelsImpl(options);\n    });\n    return result\n  }\n\n  function readPixels (options) {\n    if (!options || !('framebuffer' in options)) {\n      return readPixelsImpl(options)\n    } else {\n      return readPixelsFBO(options)\n    }\n  }\n\n  return readPixels\n}\n\nfunction slice (x) {\n  return Array.prototype.slice.call(x)\n}\n\nfunction join (x) {\n  return slice(x).join('')\n}\n\nfunction createEnvironment () {\n  // Unique variable id counter\n  var varCounter = 0;\n\n  // Linked values are passed from this scope into the generated code block\n  // Calling link() passes a value into the generated scope and returns\n  // the variable name which it is bound to\n  var linkedNames = [];\n  var linkedValues = [];\n  function link (value) {\n    for (var i = 0; i < linkedValues.length; ++i) {\n      if (linkedValues[i] === value) {\n        return linkedNames[i]\n      }\n    }\n\n    var name = 'g' + (varCounter++);\n    linkedNames.push(name);\n    linkedValues.push(value);\n    return name\n  }\n\n  // create a code block\n  function block () {\n    var code = [];\n    function push () {\n      code.push.apply(code, slice(arguments));\n    }\n\n    var vars = [];\n    function def () {\n      var name = 'v' + (varCounter++);\n      vars.push(name);\n\n      if (arguments.length > 0) {\n        code.push(name, '=');\n        code.push.apply(code, slice(arguments));\n        code.push(';');\n      }\n\n      return name\n    }\n\n    return extend(push, {\n      def: def,\n      toString: function () {\n        return join([\n          (vars.length > 0 ? 'var ' + vars + ';' : ''),\n          join(code)\n        ])\n      }\n    })\n  }\n\n  function scope () {\n    var entry = block();\n    var exit = block();\n\n    var entryToString = entry.toString;\n    var exitToString = exit.toString;\n\n    function save (object, prop) {\n      exit(object, prop, '=', entry.def(object, prop), ';');\n    }\n\n    return extend(function () {\n      entry.apply(entry, slice(arguments));\n    }, {\n      def: entry.def,\n      entry: entry,\n      exit: exit,\n      save: save,\n      set: function (object, prop, value) {\n        save(object, prop);\n        entry(object, prop, '=', value, ';');\n      },\n      toString: function () {\n        return entryToString() + exitToString()\n      }\n    })\n  }\n\n  function conditional () {\n    var pred = join(arguments);\n    var thenBlock = scope();\n    var elseBlock = scope();\n\n    var thenToString = thenBlock.toString;\n    var elseToString = elseBlock.toString;\n\n    return extend(thenBlock, {\n      then: function () {\n        thenBlock.apply(thenBlock, slice(arguments));\n        return this\n      },\n      else: function () {\n        elseBlock.apply(elseBlock, slice(arguments));\n        return this\n      },\n      toString: function () {\n        var elseClause = elseToString();\n        if (elseClause) {\n          elseClause = 'else{' + elseClause + '}';\n        }\n        return join([\n          'if(', pred, '){',\n          thenToString(),\n          '}', elseClause\n        ])\n      }\n    })\n  }\n\n  // procedure list\n  var globalBlock = block();\n  var procedures = {};\n  function proc (name, count) {\n    var args = [];\n    function arg () {\n      var name = 'a' + args.length;\n      args.push(name);\n      return name\n    }\n\n    count = count || 0;\n    for (var i = 0; i < count; ++i) {\n      arg();\n    }\n\n    var body = scope();\n    var bodyToString = body.toString;\n\n    var result = procedures[name] = extend(body, {\n      arg: arg,\n      toString: function () {\n        return join([\n          'function(', args.join(), '){',\n          bodyToString(),\n          '}'\n        ])\n      }\n    });\n\n    return result\n  }\n\n  function compile () {\n    var code = ['\"use strict\";',\n      globalBlock,\n      'return {'];\n    Object.keys(procedures).forEach(function (name) {\n      code.push('\"', name, '\":', procedures[name].toString(), ',');\n    });\n    code.push('}');\n    var src = join(code)\n      .replace(/;/g, ';\\n')\n      .replace(/}/g, '}\\n')\n      .replace(/{/g, '{\\n');\n    var proc = Function.apply(null, linkedNames.concat(src));\n    return proc.apply(null, linkedValues)\n  }\n\n  return {\n    global: globalBlock,\n    link: link,\n    block: block,\n    proc: proc,\n    scope: scope,\n    cond: conditional,\n    compile: compile\n  }\n}\n\n// \"cute\" names for vector components\nvar CUTE_COMPONENTS = 'xyzw'.split('');\n\nvar GL_UNSIGNED_BYTE$7 = 5121;\n\nvar ATTRIB_STATE_POINTER = 1;\nvar ATTRIB_STATE_CONSTANT = 2;\n\nvar DYN_FUNC$1 = 0;\nvar DYN_PROP$1 = 1;\nvar DYN_CONTEXT$1 = 2;\nvar DYN_STATE$1 = 3;\nvar DYN_THUNK = 4;\n\nvar S_DITHER = 'dither';\nvar S_BLEND_ENABLE = 'blend.enable';\nvar S_BLEND_COLOR = 'blend.color';\nvar S_BLEND_EQUATION = 'blend.equation';\nvar S_BLEND_FUNC = 'blend.func';\nvar S_DEPTH_ENABLE = 'depth.enable';\nvar S_DEPTH_FUNC = 'depth.func';\nvar S_DEPTH_RANGE = 'depth.range';\nvar S_DEPTH_MASK = 'depth.mask';\nvar S_COLOR_MASK = 'colorMask';\nvar S_CULL_ENABLE = 'cull.enable';\nvar S_CULL_FACE = 'cull.face';\nvar S_FRONT_FACE = 'frontFace';\nvar S_LINE_WIDTH = 'lineWidth';\nvar S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable';\nvar S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset';\nvar S_SAMPLE_ALPHA = 'sample.alpha';\nvar S_SAMPLE_ENABLE = 'sample.enable';\nvar S_SAMPLE_COVERAGE = 'sample.coverage';\nvar S_STENCIL_ENABLE = 'stencil.enable';\nvar S_STENCIL_MASK = 'stencil.mask';\nvar S_STENCIL_FUNC = 'stencil.func';\nvar S_STENCIL_OPFRONT = 'stencil.opFront';\nvar S_STENCIL_OPBACK = 'stencil.opBack';\nvar S_SCISSOR_ENABLE = 'scissor.enable';\nvar S_SCISSOR_BOX = 'scissor.box';\nvar S_VIEWPORT = 'viewport';\n\nvar S_PROFILE = 'profile';\n\nvar S_FRAMEBUFFER = 'framebuffer';\nvar S_VERT = 'vert';\nvar S_FRAG = 'frag';\nvar S_ELEMENTS = 'elements';\nvar S_PRIMITIVE = 'primitive';\nvar S_COUNT = 'count';\nvar S_OFFSET = 'offset';\nvar S_INSTANCES = 'instances';\n\nvar SUFFIX_WIDTH = 'Width';\nvar SUFFIX_HEIGHT = 'Height';\n\nvar S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH;\nvar S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT;\nvar S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH;\nvar S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT;\nvar S_DRAWINGBUFFER = 'drawingBuffer';\nvar S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH;\nvar S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT;\n\nvar NESTED_OPTIONS = [\n  S_BLEND_FUNC,\n  S_BLEND_EQUATION,\n  S_STENCIL_FUNC,\n  S_STENCIL_OPFRONT,\n  S_STENCIL_OPBACK,\n  S_SAMPLE_COVERAGE,\n  S_VIEWPORT,\n  S_SCISSOR_BOX,\n  S_POLYGON_OFFSET_OFFSET\n];\n\nvar GL_ARRAY_BUFFER$1 = 34962;\nvar GL_ELEMENT_ARRAY_BUFFER$1 = 34963;\n\nvar GL_FRAGMENT_SHADER$1 = 35632;\nvar GL_VERTEX_SHADER$1 = 35633;\n\nvar GL_TEXTURE_2D$2 = 0x0DE1;\nvar GL_TEXTURE_CUBE_MAP$1 = 0x8513;\n\nvar GL_CULL_FACE = 0x0B44;\nvar GL_BLEND = 0x0BE2;\nvar GL_DITHER = 0x0BD0;\nvar GL_STENCIL_TEST = 0x0B90;\nvar GL_DEPTH_TEST = 0x0B71;\nvar GL_SCISSOR_TEST = 0x0C11;\nvar GL_POLYGON_OFFSET_FILL = 0x8037;\nvar GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\nvar GL_SAMPLE_COVERAGE = 0x80A0;\n\nvar GL_FLOAT$7 = 5126;\nvar GL_FLOAT_VEC2 = 35664;\nvar GL_FLOAT_VEC3 = 35665;\nvar GL_FLOAT_VEC4 = 35666;\nvar GL_INT$3 = 5124;\nvar GL_INT_VEC2 = 35667;\nvar GL_INT_VEC3 = 35668;\nvar GL_INT_VEC4 = 35669;\nvar GL_BOOL = 35670;\nvar GL_BOOL_VEC2 = 35671;\nvar GL_BOOL_VEC3 = 35672;\nvar GL_BOOL_VEC4 = 35673;\nvar GL_FLOAT_MAT2 = 35674;\nvar GL_FLOAT_MAT3 = 35675;\nvar GL_FLOAT_MAT4 = 35676;\nvar GL_SAMPLER_2D = 35678;\nvar GL_SAMPLER_CUBE = 35680;\n\nvar GL_TRIANGLES$1 = 4;\n\nvar GL_FRONT = 1028;\nvar GL_BACK = 1029;\nvar GL_CW = 0x0900;\nvar GL_CCW = 0x0901;\nvar GL_MIN_EXT = 0x8007;\nvar GL_MAX_EXT = 0x8008;\nvar GL_ALWAYS = 519;\nvar GL_KEEP = 7680;\nvar GL_ZERO = 0;\nvar GL_ONE = 1;\nvar GL_FUNC_ADD = 0x8006;\nvar GL_LESS = 513;\n\nvar GL_FRAMEBUFFER$1 = 0x8D40;\nvar GL_COLOR_ATTACHMENT0$1 = 0x8CE0;\n\nvar blendFuncs = {\n  '0': 0,\n  '1': 1,\n  'zero': 0,\n  'one': 1,\n  'src color': 768,\n  'one minus src color': 769,\n  'src alpha': 770,\n  'one minus src alpha': 771,\n  'dst color': 774,\n  'one minus dst color': 775,\n  'dst alpha': 772,\n  'one minus dst alpha': 773,\n  'constant color': 32769,\n  'one minus constant color': 32770,\n  'constant alpha': 32771,\n  'one minus constant alpha': 32772,\n  'src alpha saturate': 776\n};\n\n// There are invalid values for srcRGB and dstRGB. See:\n// https://www.khronos.org/registry/webgl/specs/1.0/#6.13\n// https://github.com/KhronosGroup/WebGL/blob/0d3201f5f7ec3c0060bc1f04077461541f1987b9/conformance-suites/1.0.3/conformance/misc/webgl-specific.html#L56\nvar invalidBlendCombinations = [\n  'constant color, constant alpha',\n  'one minus constant color, constant alpha',\n  'constant color, one minus constant alpha',\n  'one minus constant color, one minus constant alpha',\n  'constant alpha, constant color',\n  'constant alpha, one minus constant color',\n  'one minus constant alpha, constant color',\n  'one minus constant alpha, one minus constant color'\n];\n\nvar compareFuncs = {\n  'never': 512,\n  'less': 513,\n  '<': 513,\n  'equal': 514,\n  '=': 514,\n  '==': 514,\n  '===': 514,\n  'lequal': 515,\n  '<=': 515,\n  'greater': 516,\n  '>': 516,\n  'notequal': 517,\n  '!=': 517,\n  '!==': 517,\n  'gequal': 518,\n  '>=': 518,\n  'always': 519\n};\n\nvar stencilOps = {\n  '0': 0,\n  'zero': 0,\n  'keep': 7680,\n  'replace': 7681,\n  'increment': 7682,\n  'decrement': 7683,\n  'increment wrap': 34055,\n  'decrement wrap': 34056,\n  'invert': 5386\n};\n\nvar shaderType = {\n  'frag': GL_FRAGMENT_SHADER$1,\n  'vert': GL_VERTEX_SHADER$1\n};\n\nvar orientationType = {\n  'cw': GL_CW,\n  'ccw': GL_CCW\n};\n\nfunction isBufferArgs (x) {\n  return Array.isArray(x) ||\n    isTypedArray(x) ||\n    isNDArrayLike(x)\n}\n\n// Make sure viewport is processed first\nfunction sortState (state) {\n  return state.sort(function (a, b) {\n    if (a === S_VIEWPORT) {\n      return -1\n    } else if (b === S_VIEWPORT) {\n      return 1\n    }\n    return (a < b) ? -1 : 1\n  })\n}\n\nfunction Declaration (thisDep, contextDep, propDep, append) {\n  this.thisDep = thisDep;\n  this.contextDep = contextDep;\n  this.propDep = propDep;\n  this.append = append;\n}\n\nfunction isStatic (decl) {\n  return decl && !(decl.thisDep || decl.contextDep || decl.propDep)\n}\n\nfunction createStaticDecl (append) {\n  return new Declaration(false, false, false, append)\n}\n\nfunction createDynamicDecl (dyn, append) {\n  var type = dyn.type;\n  if (type === DYN_FUNC$1) {\n    var numArgs = dyn.data.length;\n    return new Declaration(\n      true,\n      numArgs >= 1,\n      numArgs >= 2,\n      append)\n  } else if (type === DYN_THUNK) {\n    var data = dyn.data;\n    return new Declaration(\n      data.thisDep,\n      data.contextDep,\n      data.propDep,\n      append)\n  } else {\n    return new Declaration(\n      type === DYN_STATE$1,\n      type === DYN_CONTEXT$1,\n      type === DYN_PROP$1,\n      append)\n  }\n}\n\nvar SCOPE_DECL = new Declaration(false, false, false, function () {});\n\nfunction reglCore (\n  gl,\n  stringStore,\n  extensions,\n  limits,\n  bufferState,\n  elementState,\n  textureState,\n  framebufferState,\n  uniformState,\n  attributeState,\n  shaderState,\n  drawState,\n  contextState,\n  timer,\n  config) {\n  var AttributeRecord = attributeState.Record;\n\n  var blendEquations = {\n    'add': 32774,\n    'subtract': 32778,\n    'reverse subtract': 32779\n  };\n  if (extensions.ext_blend_minmax) {\n    blendEquations.min = GL_MIN_EXT;\n    blendEquations.max = GL_MAX_EXT;\n  }\n\n  var extInstancing = extensions.angle_instanced_arrays;\n  var extDrawBuffers = extensions.webgl_draw_buffers;\n\n  // ===================================================\n  // ===================================================\n  // WEBGL STATE\n  // ===================================================\n  // ===================================================\n  var currentState = {\n    dirty: true,\n    profile: config.profile\n  };\n  var nextState = {};\n  var GL_STATE_NAMES = [];\n  var GL_FLAGS = {};\n  var GL_VARIABLES = {};\n\n  function propName (name) {\n    return name.replace('.', '_')\n  }\n\n  function stateFlag (sname, cap, init) {\n    var name = propName(sname);\n    GL_STATE_NAMES.push(sname);\n    nextState[name] = currentState[name] = !!init;\n    GL_FLAGS[name] = cap;\n  }\n\n  function stateVariable (sname, func, init) {\n    var name = propName(sname);\n    GL_STATE_NAMES.push(sname);\n    if (Array.isArray(init)) {\n      currentState[name] = init.slice();\n      nextState[name] = init.slice();\n    } else {\n      currentState[name] = nextState[name] = init;\n    }\n    GL_VARIABLES[name] = func;\n  }\n\n  // Dithering\n  stateFlag(S_DITHER, GL_DITHER);\n\n  // Blending\n  stateFlag(S_BLEND_ENABLE, GL_BLEND);\n  stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0]);\n  stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate',\n    [GL_FUNC_ADD, GL_FUNC_ADD]);\n  stateVariable(S_BLEND_FUNC, 'blendFuncSeparate',\n    [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO]);\n\n  // Depth\n  stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true);\n  stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS);\n  stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1]);\n  stateVariable(S_DEPTH_MASK, 'depthMask', true);\n\n  // Color mask\n  stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true]);\n\n  // Face culling\n  stateFlag(S_CULL_ENABLE, GL_CULL_FACE);\n  stateVariable(S_CULL_FACE, 'cullFace', GL_BACK);\n\n  // Front face orientation\n  stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW);\n\n  // Line width\n  stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1);\n\n  // Polygon offset\n  stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL);\n  stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0]);\n\n  // Sample coverage\n  stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE);\n  stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE);\n  stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false]);\n\n  // Stencil\n  stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST);\n  stateVariable(S_STENCIL_MASK, 'stencilMask', -1);\n  stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1]);\n  stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate',\n    [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP]);\n  stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate',\n    [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP]);\n\n  // Scissor\n  stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST);\n  stateVariable(S_SCISSOR_BOX, 'scissor',\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\n\n  // Viewport\n  stateVariable(S_VIEWPORT, S_VIEWPORT,\n    [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\n\n  // ===================================================\n  // ===================================================\n  // ENVIRONMENT\n  // ===================================================\n  // ===================================================\n  var sharedState = {\n    gl: gl,\n    context: contextState,\n    strings: stringStore,\n    next: nextState,\n    current: currentState,\n    draw: drawState,\n    elements: elementState,\n    buffer: bufferState,\n    shader: shaderState,\n    attributes: attributeState.state,\n    uniforms: uniformState,\n    framebuffer: framebufferState,\n    extensions: extensions,\n\n    timer: timer,\n    isBufferArgs: isBufferArgs\n  };\n\n  var sharedConstants = {\n    primTypes: primTypes,\n    compareFuncs: compareFuncs,\n    blendFuncs: blendFuncs,\n    blendEquations: blendEquations,\n    stencilOps: stencilOps,\n    glTypes: glTypes,\n    orientationType: orientationType\n  };\n\n  check$1.optional(function () {\n    sharedState.isArrayLike = isArrayLike;\n  });\n\n  if (extDrawBuffers) {\n    sharedConstants.backBuffer = [GL_BACK];\n    sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {\n      if (i === 0) {\n        return [0]\n      }\n      return loop(i, function (j) {\n        return GL_COLOR_ATTACHMENT0$1 + j\n      })\n    });\n  }\n\n  var drawCallCounter = 0;\n  function createREGLEnvironment () {\n    var env = createEnvironment();\n    var link = env.link;\n    var global = env.global;\n    env.id = drawCallCounter++;\n\n    env.batchId = '0';\n\n    // link shared state\n    var SHARED = link(sharedState);\n    var shared = env.shared = {\n      props: 'a0'\n    };\n    Object.keys(sharedState).forEach(function (prop) {\n      shared[prop] = global.def(SHARED, '.', prop);\n    });\n\n    // Inject runtime assertion stuff for debug builds\n    check$1.optional(function () {\n      env.CHECK = link(check$1);\n      env.commandStr = check$1.guessCommand();\n      env.command = link(env.commandStr);\n      env.assert = function (block, pred, message) {\n        block(\n          'if(!(', pred, '))',\n          this.CHECK, '.commandRaise(', link(message), ',', this.command, ');');\n      };\n\n      sharedConstants.invalidBlendCombinations = invalidBlendCombinations;\n    });\n\n    // Copy GL state variables over\n    var nextVars = env.next = {};\n    var currentVars = env.current = {};\n    Object.keys(GL_VARIABLES).forEach(function (variable) {\n      if (Array.isArray(currentState[variable])) {\n        nextVars[variable] = global.def(shared.next, '.', variable);\n        currentVars[variable] = global.def(shared.current, '.', variable);\n      }\n    });\n\n    // Initialize shared constants\n    var constants = env.constants = {};\n    Object.keys(sharedConstants).forEach(function (name) {\n      constants[name] = global.def(JSON.stringify(sharedConstants[name]));\n    });\n\n    // Helper function for calling a block\n    env.invoke = function (block, x) {\n      switch (x.type) {\n        case DYN_FUNC$1:\n          var argList = [\n            'this',\n            shared.context,\n            shared.props,\n            env.batchId\n          ];\n          return block.def(\n            link(x.data), '.call(',\n              argList.slice(0, Math.max(x.data.length + 1, 4)),\n             ')')\n        case DYN_PROP$1:\n          return block.def(shared.props, x.data)\n        case DYN_CONTEXT$1:\n          return block.def(shared.context, x.data)\n        case DYN_STATE$1:\n          return block.def('this', x.data)\n        case DYN_THUNK:\n          x.data.append(env, block);\n          return x.data.ref\n      }\n    };\n\n    env.attribCache = {};\n\n    var scopeAttribs = {};\n    env.scopeAttrib = function (name) {\n      var id = stringStore.id(name);\n      if (id in scopeAttribs) {\n        return scopeAttribs[id]\n      }\n      var binding = attributeState.scope[id];\n      if (!binding) {\n        binding = attributeState.scope[id] = new AttributeRecord();\n      }\n      var result = scopeAttribs[id] = link(binding);\n      return result\n    };\n\n    return env\n  }\n\n  // ===================================================\n  // ===================================================\n  // PARSING\n  // ===================================================\n  // ===================================================\n  function parseProfile (options) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    var profileEnable;\n    if (S_PROFILE in staticOptions) {\n      var value = !!staticOptions[S_PROFILE];\n      profileEnable = createStaticDecl(function (env, scope) {\n        return value\n      });\n      profileEnable.enable = value;\n    } else if (S_PROFILE in dynamicOptions) {\n      var dyn = dynamicOptions[S_PROFILE];\n      profileEnable = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      });\n    }\n\n    return profileEnable\n  }\n\n  function parseFramebuffer (options, env) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    if (S_FRAMEBUFFER in staticOptions) {\n      var framebuffer = staticOptions[S_FRAMEBUFFER];\n      if (framebuffer) {\n        framebuffer = framebufferState.getFramebuffer(framebuffer);\n        check$1.command(framebuffer, 'invalid framebuffer object');\n        return createStaticDecl(function (env, block) {\n          var FRAMEBUFFER = env.link(framebuffer);\n          var shared = env.shared;\n          block.set(\n            shared.framebuffer,\n            '.next',\n            FRAMEBUFFER);\n          var CONTEXT = shared.context;\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            FRAMEBUFFER + '.width');\n          block.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            FRAMEBUFFER + '.height');\n          return FRAMEBUFFER\n        })\n      } else {\n        return createStaticDecl(function (env, scope) {\n          var shared = env.shared;\n          scope.set(\n            shared.framebuffer,\n            '.next',\n            'null');\n          var CONTEXT = shared.context;\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_WIDTH,\n            CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);\n          scope.set(\n            CONTEXT,\n            '.' + S_FRAMEBUFFER_HEIGHT,\n            CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);\n          return 'null'\n        })\n      }\n    } else if (S_FRAMEBUFFER in dynamicOptions) {\n      var dyn = dynamicOptions[S_FRAMEBUFFER];\n      return createDynamicDecl(dyn, function (env, scope) {\n        var FRAMEBUFFER_FUNC = env.invoke(scope, dyn);\n        var shared = env.shared;\n        var FRAMEBUFFER_STATE = shared.framebuffer;\n        var FRAMEBUFFER = scope.def(\n          FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')');\n\n        check$1.optional(function () {\n          env.assert(scope,\n            '!' + FRAMEBUFFER_FUNC + '||' + FRAMEBUFFER,\n            'invalid framebuffer object');\n        });\n\n        scope.set(\n          FRAMEBUFFER_STATE,\n          '.next',\n          FRAMEBUFFER);\n        var CONTEXT = shared.context;\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_WIDTH,\n          FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);\n        scope.set(\n          CONTEXT,\n          '.' + S_FRAMEBUFFER_HEIGHT,\n          FRAMEBUFFER +\n          '?' + FRAMEBUFFER + '.height:' +\n          CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);\n        return FRAMEBUFFER\n      })\n    } else {\n      return null\n    }\n  }\n\n  function parseViewportScissor (options, framebuffer, env) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    function parseBox (param) {\n      if (param in staticOptions) {\n        var box = staticOptions[param];\n        check$1.commandType(box, 'object', 'invalid ' + param, env.commandStr);\n\n        var isStatic = true;\n        var x = box.x | 0;\n        var y = box.y | 0;\n        var w, h;\n        if ('width' in box) {\n          w = box.width | 0;\n          check$1.command(w >= 0, 'invalid ' + param, env.commandStr);\n        } else {\n          isStatic = false;\n        }\n        if ('height' in box) {\n          h = box.height | 0;\n          check$1.command(h >= 0, 'invalid ' + param, env.commandStr);\n        } else {\n          isStatic = false;\n        }\n\n        return new Declaration(\n          !isStatic && framebuffer && framebuffer.thisDep,\n          !isStatic && framebuffer && framebuffer.contextDep,\n          !isStatic && framebuffer && framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context;\n            var BOX_W = w;\n            if (!('width' in box)) {\n              BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x);\n            }\n            var BOX_H = h;\n            if (!('height' in box)) {\n              BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y);\n            }\n            return [x, y, BOX_W, BOX_H]\n          })\n      } else if (param in dynamicOptions) {\n        var dynBox = dynamicOptions[param];\n        var result = createDynamicDecl(dynBox, function (env, scope) {\n          var BOX = env.invoke(scope, dynBox);\n\n          check$1.optional(function () {\n            env.assert(scope,\n              BOX + '&&typeof ' + BOX + '===\"object\"',\n              'invalid ' + param);\n          });\n\n          var CONTEXT = env.shared.context;\n          var BOX_X = scope.def(BOX, '.x|0');\n          var BOX_Y = scope.def(BOX, '.y|0');\n          var BOX_W = scope.def(\n            '\"width\" in ', BOX, '?', BOX, '.width|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')');\n          var BOX_H = scope.def(\n            '\"height\" in ', BOX, '?', BOX, '.height|0:',\n            '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')');\n\n          check$1.optional(function () {\n            env.assert(scope,\n              BOX_W + '>=0&&' +\n              BOX_H + '>=0',\n              'invalid ' + param);\n          });\n\n          return [BOX_X, BOX_Y, BOX_W, BOX_H]\n        });\n        if (framebuffer) {\n          result.thisDep = result.thisDep || framebuffer.thisDep;\n          result.contextDep = result.contextDep || framebuffer.contextDep;\n          result.propDep = result.propDep || framebuffer.propDep;\n        }\n        return result\n      } else if (framebuffer) {\n        return new Declaration(\n          framebuffer.thisDep,\n          framebuffer.contextDep,\n          framebuffer.propDep,\n          function (env, scope) {\n            var CONTEXT = env.shared.context;\n            return [\n              0, 0,\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH),\n              scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)]\n          })\n      } else {\n        return null\n      }\n    }\n\n    var viewport = parseBox(S_VIEWPORT);\n\n    if (viewport) {\n      var prevViewport = viewport;\n      viewport = new Declaration(\n        viewport.thisDep,\n        viewport.contextDep,\n        viewport.propDep,\n        function (env, scope) {\n          var VIEWPORT = prevViewport.append(env, scope);\n          var CONTEXT = env.shared.context;\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_WIDTH,\n            VIEWPORT[2]);\n          scope.set(\n            CONTEXT,\n            '.' + S_VIEWPORT_HEIGHT,\n            VIEWPORT[3]);\n          return VIEWPORT\n        });\n    }\n\n    return {\n      viewport: viewport,\n      scissor_box: parseBox(S_SCISSOR_BOX)\n    }\n  }\n\n  function parseProgram (options) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    function parseShader (name) {\n      if (name in staticOptions) {\n        var id = stringStore.id(staticOptions[name]);\n        check$1.optional(function () {\n          shaderState.shader(shaderType[name], id, check$1.guessCommand());\n        });\n        var result = createStaticDecl(function () {\n          return id\n        });\n        result.id = id;\n        return result\n      } else if (name in dynamicOptions) {\n        var dyn = dynamicOptions[name];\n        return createDynamicDecl(dyn, function (env, scope) {\n          var str = env.invoke(scope, dyn);\n          var id = scope.def(env.shared.strings, '.id(', str, ')');\n          check$1.optional(function () {\n            scope(\n              env.shared.shader, '.shader(',\n              shaderType[name], ',',\n              id, ',',\n              env.command, ');');\n          });\n          return id\n        })\n      }\n      return null\n    }\n\n    var frag = parseShader(S_FRAG);\n    var vert = parseShader(S_VERT);\n\n    var program = null;\n    var progVar;\n    if (isStatic(frag) && isStatic(vert)) {\n      program = shaderState.program(vert.id, frag.id);\n      progVar = createStaticDecl(function (env, scope) {\n        return env.link(program)\n      });\n    } else {\n      progVar = new Declaration(\n        (frag && frag.thisDep) || (vert && vert.thisDep),\n        (frag && frag.contextDep) || (vert && vert.contextDep),\n        (frag && frag.propDep) || (vert && vert.propDep),\n        function (env, scope) {\n          var SHADER_STATE = env.shared.shader;\n          var fragId;\n          if (frag) {\n            fragId = frag.append(env, scope);\n          } else {\n            fragId = scope.def(SHADER_STATE, '.', S_FRAG);\n          }\n          var vertId;\n          if (vert) {\n            vertId = vert.append(env, scope);\n          } else {\n            vertId = scope.def(SHADER_STATE, '.', S_VERT);\n          }\n          var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId;\n          check$1.optional(function () {\n            progDef += ',' + env.command;\n          });\n          return scope.def(progDef + ')')\n        });\n    }\n\n    return {\n      frag: frag,\n      vert: vert,\n      progVar: progVar,\n      program: program\n    }\n  }\n\n  function parseDraw (options, env) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    function parseElements () {\n      if (S_ELEMENTS in staticOptions) {\n        var elements = staticOptions[S_ELEMENTS];\n        if (isBufferArgs(elements)) {\n          elements = elementState.getElements(elementState.create(elements, true));\n        } else if (elements) {\n          elements = elementState.getElements(elements);\n          check$1.command(elements, 'invalid elements', env.commandStr);\n        }\n        var result = createStaticDecl(function (env, scope) {\n          if (elements) {\n            var result = env.link(elements);\n            env.ELEMENTS = result;\n            return result\n          }\n          env.ELEMENTS = null;\n          return null\n        });\n        result.value = elements;\n        return result\n      } else if (S_ELEMENTS in dynamicOptions) {\n        var dyn = dynamicOptions[S_ELEMENTS];\n        return createDynamicDecl(dyn, function (env, scope) {\n          var shared = env.shared;\n\n          var IS_BUFFER_ARGS = shared.isBufferArgs;\n          var ELEMENT_STATE = shared.elements;\n\n          var elementDefn = env.invoke(scope, dyn);\n          var elements = scope.def('null');\n          var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')');\n\n          var ifte = env.cond(elementStream)\n            .then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');')\n            .else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');');\n\n          check$1.optional(function () {\n            env.assert(ifte.else,\n              '!' + elementDefn + '||' + elements,\n              'invalid elements');\n          });\n\n          scope.entry(ifte);\n          scope.exit(\n            env.cond(elementStream)\n              .then(ELEMENT_STATE, '.destroyStream(', elements, ');'));\n\n          env.ELEMENTS = elements;\n\n          return elements\n        })\n      }\n\n      return null\n    }\n\n    var elements = parseElements();\n\n    function parsePrimitive () {\n      if (S_PRIMITIVE in staticOptions) {\n        var primitive = staticOptions[S_PRIMITIVE];\n        check$1.commandParameter(primitive, primTypes, 'invalid primitve', env.commandStr);\n        return createStaticDecl(function (env, scope) {\n          return primTypes[primitive]\n        })\n      } else if (S_PRIMITIVE in dynamicOptions) {\n        var dynPrimitive = dynamicOptions[S_PRIMITIVE];\n        return createDynamicDecl(dynPrimitive, function (env, scope) {\n          var PRIM_TYPES = env.constants.primTypes;\n          var prim = env.invoke(scope, dynPrimitive);\n          check$1.optional(function () {\n            env.assert(scope,\n              prim + ' in ' + PRIM_TYPES,\n              'invalid primitive, must be one of ' + Object.keys(primTypes));\n          });\n          return scope.def(PRIM_TYPES, '[', prim, ']')\n        })\n      } else if (elements) {\n        if (isStatic(elements)) {\n          if (elements.value) {\n            return createStaticDecl(function (env, scope) {\n              return scope.def(env.ELEMENTS, '.primType')\n            })\n          } else {\n            return createStaticDecl(function () {\n              return GL_TRIANGLES$1\n            })\n          }\n        } else {\n          return new Declaration(\n            elements.thisDep,\n            elements.contextDep,\n            elements.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS;\n              return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1)\n            })\n        }\n      }\n      return null\n    }\n\n    function parseParam (param, isOffset) {\n      if (param in staticOptions) {\n        var value = staticOptions[param] | 0;\n        check$1.command(!isOffset || value >= 0, 'invalid ' + param, env.commandStr);\n        return createStaticDecl(function (env, scope) {\n          if (isOffset) {\n            env.OFFSET = value;\n          }\n          return value\n        })\n      } else if (param in dynamicOptions) {\n        var dynValue = dynamicOptions[param];\n        return createDynamicDecl(dynValue, function (env, scope) {\n          var result = env.invoke(scope, dynValue);\n          if (isOffset) {\n            env.OFFSET = result;\n            check$1.optional(function () {\n              env.assert(scope,\n                result + '>=0',\n                'invalid ' + param);\n            });\n          }\n          return result\n        })\n      } else if (isOffset && elements) {\n        return createStaticDecl(function (env, scope) {\n          env.OFFSET = '0';\n          return 0\n        })\n      }\n      return null\n    }\n\n    var OFFSET = parseParam(S_OFFSET, true);\n\n    function parseVertCount () {\n      if (S_COUNT in staticOptions) {\n        var count = staticOptions[S_COUNT] | 0;\n        check$1.command(\n          typeof count === 'number' && count >= 0, 'invalid vertex count', env.commandStr);\n        return createStaticDecl(function () {\n          return count\n        })\n      } else if (S_COUNT in dynamicOptions) {\n        var dynCount = dynamicOptions[S_COUNT];\n        return createDynamicDecl(dynCount, function (env, scope) {\n          var result = env.invoke(scope, dynCount);\n          check$1.optional(function () {\n            env.assert(scope,\n              'typeof ' + result + '===\"number\"&&' +\n              result + '>=0&&' +\n              result + '===(' + result + '|0)',\n              'invalid vertex count');\n          });\n          return result\n        })\n      } else if (elements) {\n        if (isStatic(elements)) {\n          if (elements) {\n            if (OFFSET) {\n              return new Declaration(\n                OFFSET.thisDep,\n                OFFSET.contextDep,\n                OFFSET.propDep,\n                function (env, scope) {\n                  var result = scope.def(\n                    env.ELEMENTS, '.vertCount-', env.OFFSET);\n\n                  check$1.optional(function () {\n                    env.assert(scope,\n                      result + '>=0',\n                      'invalid vertex offset/element buffer too small');\n                  });\n\n                  return result\n                })\n            } else {\n              return createStaticDecl(function (env, scope) {\n                return scope.def(env.ELEMENTS, '.vertCount')\n              })\n            }\n          } else {\n            var result = createStaticDecl(function () {\n              return -1\n            });\n            check$1.optional(function () {\n              result.MISSING = true;\n            });\n            return result\n          }\n        } else {\n          var variable = new Declaration(\n            elements.thisDep || OFFSET.thisDep,\n            elements.contextDep || OFFSET.contextDep,\n            elements.propDep || OFFSET.propDep,\n            function (env, scope) {\n              var elements = env.ELEMENTS;\n              if (env.OFFSET) {\n                return scope.def(elements, '?', elements, '.vertCount-',\n                  env.OFFSET, ':-1')\n              }\n              return scope.def(elements, '?', elements, '.vertCount:-1')\n            });\n          check$1.optional(function () {\n            variable.DYNAMIC = true;\n          });\n          return variable\n        }\n      }\n      return null\n    }\n\n    return {\n      elements: elements,\n      primitive: parsePrimitive(),\n      count: parseVertCount(),\n      instances: parseParam(S_INSTANCES, false),\n      offset: OFFSET\n    }\n  }\n\n  function parseGLState (options, env) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    var STATE = {};\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop);\n\n      function parseParam (parseStatic, parseDynamic) {\n        if (prop in staticOptions) {\n          var value = parseStatic(staticOptions[prop]);\n          STATE[param] = createStaticDecl(function () {\n            return value\n          });\n        } else if (prop in dynamicOptions) {\n          var dyn = dynamicOptions[prop];\n          STATE[param] = createDynamicDecl(dyn, function (env, scope) {\n            return parseDynamic(env, scope, env.invoke(scope, dyn))\n          });\n        }\n      }\n\n      switch (prop) {\n        case S_CULL_ENABLE:\n        case S_BLEND_ENABLE:\n        case S_DITHER:\n        case S_STENCIL_ENABLE:\n        case S_DEPTH_ENABLE:\n        case S_SCISSOR_ENABLE:\n        case S_POLYGON_OFFSET_ENABLE:\n        case S_SAMPLE_ALPHA:\n        case S_SAMPLE_ENABLE:\n        case S_DEPTH_MASK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'boolean', prop, env.commandStr);\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"boolean\"',\n                  'invalid flag ' + prop, env.commandStr);\n              });\n              return value\n            })\n\n        case S_DEPTH_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandParameter(value, compareFuncs, 'invalid ' + prop, env.commandStr);\n              return compareFuncs[value]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs;\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + ' in ' + COMPARE_FUNCS,\n                  'invalid ' + prop + ', must be one of ' + Object.keys(compareFuncs));\n              });\n              return scope.def(COMPARE_FUNCS, '[', value, ']')\n            })\n\n        case S_DEPTH_RANGE:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) &&\n                value.length === 2 &&\n                typeof value[0] === 'number' &&\n                typeof value[1] === 'number' &&\n                value[0] <= value[1],\n                'depth range is 2d array',\n                env.commandStr);\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===2&&' +\n                  'typeof ' + value + '[0]===\"number\"&&' +\n                  'typeof ' + value + '[1]===\"number\"&&' +\n                  value + '[0]<=' + value + '[1]',\n                  'depth range must be a 2d array');\n              });\n\n              var Z_NEAR = scope.def('+', value, '[0]');\n              var Z_FAR = scope.def('+', value, '[1]');\n              return [Z_NEAR, Z_FAR]\n            })\n\n        case S_BLEND_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', 'blend.func', env.commandStr);\n              var srcRGB = ('srcRGB' in value ? value.srcRGB : value.src);\n              var srcAlpha = ('srcAlpha' in value ? value.srcAlpha : value.src);\n              var dstRGB = ('dstRGB' in value ? value.dstRGB : value.dst);\n              var dstAlpha = ('dstAlpha' in value ? value.dstAlpha : value.dst);\n              check$1.commandParameter(srcRGB, blendFuncs, param + '.srcRGB', env.commandStr);\n              check$1.commandParameter(srcAlpha, blendFuncs, param + '.srcAlpha', env.commandStr);\n              check$1.commandParameter(dstRGB, blendFuncs, param + '.dstRGB', env.commandStr);\n              check$1.commandParameter(dstAlpha, blendFuncs, param + '.dstAlpha', env.commandStr);\n\n              check$1.command(\n                (invalidBlendCombinations.indexOf(srcRGB + ', ' + dstRGB) === -1),\n                'unallowed blending combination (srcRGB, dstRGB) = (' + srcRGB + ', ' + dstRGB + ')', env.commandStr);\n\n              return [\n                blendFuncs[srcRGB],\n                blendFuncs[dstRGB],\n                blendFuncs[srcAlpha],\n                blendFuncs[dstAlpha]\n              ]\n            },\n            function (env, scope, value) {\n              var BLEND_FUNCS = env.constants.blendFuncs;\n\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid blend func, must be an object');\n              });\n\n              function read (prefix, suffix) {\n                var func = scope.def(\n                  '\"', prefix, suffix, '\" in ', value,\n                  '?', value, '.', prefix, suffix,\n                  ':', value, '.', prefix);\n\n                check$1.optional(function () {\n                  env.assert(scope,\n                    func + ' in ' + BLEND_FUNCS,\n                    'invalid ' + prop + '.' + prefix + suffix + ', must be one of ' + Object.keys(blendFuncs));\n                });\n\n                return func\n              }\n\n              var srcRGB = read('src', 'RGB');\n              var dstRGB = read('dst', 'RGB');\n\n              check$1.optional(function () {\n                var INVALID_BLEND_COMBINATIONS = env.constants.invalidBlendCombinations;\n\n                env.assert(scope,\n                           INVALID_BLEND_COMBINATIONS +\n                           '.indexOf(' + srcRGB + '+\", \"+' + dstRGB + ') === -1 ',\n                           'unallowed blending combination for (srcRGB, dstRGB)'\n                          );\n              });\n\n              var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']');\n              var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']');\n              var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']');\n              var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']');\n\n              return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA]\n            })\n\n        case S_BLEND_EQUATION:\n          return parseParam(\n            function (value) {\n              if (typeof value === 'string') {\n                check$1.commandParameter(value, blendEquations, 'invalid ' + prop, env.commandStr);\n                return [\n                  blendEquations[value],\n                  blendEquations[value]\n                ]\n              } else if (typeof value === 'object') {\n                check$1.commandParameter(\n                  value.rgb, blendEquations, prop + '.rgb', env.commandStr);\n                check$1.commandParameter(\n                  value.alpha, blendEquations, prop + '.alpha', env.commandStr);\n                return [\n                  blendEquations[value.rgb],\n                  blendEquations[value.alpha]\n                ]\n              } else {\n                check$1.commandRaise('invalid blend.equation', env.commandStr);\n              }\n            },\n            function (env, scope, value) {\n              var BLEND_EQUATIONS = env.constants.blendEquations;\n\n              var RGB = scope.def();\n              var ALPHA = scope.def();\n\n              var ifte = env.cond('typeof ', value, '===\"string\"');\n\n              check$1.optional(function () {\n                function checkProp (block, name, value) {\n                  env.assert(block,\n                    value + ' in ' + BLEND_EQUATIONS,\n                    'invalid ' + name + ', must be one of ' + Object.keys(blendEquations));\n                }\n                checkProp(ifte.then, prop, value);\n\n                env.assert(ifte.else,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop);\n                checkProp(ifte.else, prop + '.rgb', value + '.rgb');\n                checkProp(ifte.else, prop + '.alpha', value + '.alpha');\n              });\n\n              ifte.then(\n                RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];');\n              ifte.else(\n                RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];',\n                ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];');\n\n              scope(ifte);\n\n              return [RGB, ALPHA]\n            })\n\n        case S_BLEND_COLOR:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) &&\n                value.length === 4,\n                'blend.color must be a 4d array', env.commandStr);\n              return loop(4, function (i) {\n                return +value[i]\n              })\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===4',\n                  'blend.color must be a 4d array');\n              });\n              return loop(4, function (i) {\n                return scope.def('+', value, '[', i, ']')\n              })\n            })\n\n        case S_STENCIL_MASK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'number', param, env.commandStr);\n              return value | 0\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"number\"',\n                  'invalid stencil.mask');\n              });\n              return scope.def(value, '|0')\n            })\n\n        case S_STENCIL_FUNC:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr);\n              var cmp = value.cmp || 'keep';\n              var ref = value.ref || 0;\n              var mask = 'mask' in value ? value.mask : -1;\n              check$1.commandParameter(cmp, compareFuncs, prop + '.cmp', env.commandStr);\n              check$1.commandType(ref, 'number', prop + '.ref', env.commandStr);\n              check$1.commandType(mask, 'number', prop + '.mask', env.commandStr);\n              return [\n                compareFuncs[cmp],\n                ref,\n                mask\n              ]\n            },\n            function (env, scope, value) {\n              var COMPARE_FUNCS = env.constants.compareFuncs;\n              check$1.optional(function () {\n                function assert () {\n                  env.assert(scope,\n                    Array.prototype.join.call(arguments, ''),\n                    'invalid stencil.func');\n                }\n                assert(value + '&&typeof ', value, '===\"object\"');\n                assert('!(\"cmp\" in ', value, ')||(',\n                  value, '.cmp in ', COMPARE_FUNCS, ')');\n              });\n              var cmp = scope.def(\n                '\"cmp\" in ', value,\n                '?', COMPARE_FUNCS, '[', value, '.cmp]',\n                ':', GL_KEEP);\n              var ref = scope.def(value, '.ref|0');\n              var mask = scope.def(\n                '\"mask\" in ', value,\n                '?', value, '.mask|0:-1');\n              return [cmp, ref, mask]\n            })\n\n        case S_STENCIL_OPFRONT:\n        case S_STENCIL_OPBACK:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr);\n              var fail = value.fail || 'keep';\n              var zfail = value.zfail || 'keep';\n              var zpass = value.zpass || 'keep';\n              check$1.commandParameter(fail, stencilOps, prop + '.fail', env.commandStr);\n              check$1.commandParameter(zfail, stencilOps, prop + '.zfail', env.commandStr);\n              check$1.commandParameter(zpass, stencilOps, prop + '.zpass', env.commandStr);\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                stencilOps[fail],\n                stencilOps[zfail],\n                stencilOps[zpass]\n              ]\n            },\n            function (env, scope, value) {\n              var STENCIL_OPS = env.constants.stencilOps;\n\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop);\n              });\n\n              function read (name) {\n                check$1.optional(function () {\n                  env.assert(scope,\n                    '!(\"' + name + '\" in ' + value + ')||' +\n                    '(' + value + '.' + name + ' in ' + STENCIL_OPS + ')',\n                    'invalid ' + prop + '.' + name + ', must be one of ' + Object.keys(stencilOps));\n                });\n\n                return scope.def(\n                  '\"', name, '\" in ', value,\n                  '?', STENCIL_OPS, '[', value, '.', name, ']:',\n                  GL_KEEP)\n              }\n\n              return [\n                prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,\n                read('fail'),\n                read('zfail'),\n                read('zpass')\n              ]\n            })\n\n        case S_POLYGON_OFFSET_OFFSET:\n          return parseParam(\n            function (value) {\n              check$1.commandType(value, 'object', param, env.commandStr);\n              var factor = value.factor | 0;\n              var units = value.units | 0;\n              check$1.commandType(factor, 'number', param + '.factor', env.commandStr);\n              check$1.commandType(units, 'number', param + '.units', env.commandStr);\n              return [factor, units]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid ' + prop);\n              });\n\n              var FACTOR = scope.def(value, '.factor|0');\n              var UNITS = scope.def(value, '.units|0');\n\n              return [FACTOR, UNITS]\n            })\n\n        case S_CULL_FACE:\n          return parseParam(\n            function (value) {\n              var face = 0;\n              if (value === 'front') {\n                face = GL_FRONT;\n              } else if (value === 'back') {\n                face = GL_BACK;\n              }\n              check$1.command(!!face, param, env.commandStr);\n              return face\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '===\"front\"||' +\n                  value + '===\"back\"',\n                  'invalid cull.face');\n              });\n              return scope.def(value, '===\"front\"?', GL_FRONT, ':', GL_BACK)\n            })\n\n        case S_LINE_WIDTH:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                typeof value === 'number' &&\n                value >= limits.lineWidthDims[0] &&\n                value <= limits.lineWidthDims[1],\n                'invalid line width, must be a positive number between ' +\n                limits.lineWidthDims[0] + ' and ' + limits.lineWidthDims[1], env.commandStr);\n              return value\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  'typeof ' + value + '===\"number\"&&' +\n                  value + '>=' + limits.lineWidthDims[0] + '&&' +\n                  value + '<=' + limits.lineWidthDims[1],\n                  'invalid line width');\n              });\n\n              return value\n            })\n\n        case S_FRONT_FACE:\n          return parseParam(\n            function (value) {\n              check$1.commandParameter(value, orientationType, param, env.commandStr);\n              return orientationType[value]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '===\"cw\"||' +\n                  value + '===\"ccw\"',\n                  'invalid frontFace, must be one of cw,ccw');\n              });\n              return scope.def(value + '===\"cw\"?' + GL_CW + ':' + GL_CCW)\n            })\n\n        case S_COLOR_MASK:\n          return parseParam(\n            function (value) {\n              check$1.command(\n                isArrayLike(value) && value.length === 4,\n                'color.mask must be length 4 array', env.commandStr);\n              return value.map(function (v) { return !!v })\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  env.shared.isArrayLike + '(' + value + ')&&' +\n                  value + '.length===4',\n                  'invalid color.mask');\n              });\n              return loop(4, function (i) {\n                return '!!' + value + '[' + i + ']'\n              })\n            })\n\n        case S_SAMPLE_COVERAGE:\n          return parseParam(\n            function (value) {\n              check$1.command(typeof value === 'object' && value, param, env.commandStr);\n              var sampleValue = 'value' in value ? value.value : 1;\n              var sampleInvert = !!value.invert;\n              check$1.command(\n                typeof sampleValue === 'number' &&\n                sampleValue >= 0 && sampleValue <= 1,\n                'sample.coverage.value must be a number between 0 and 1', env.commandStr);\n              return [sampleValue, sampleInvert]\n            },\n            function (env, scope, value) {\n              check$1.optional(function () {\n                env.assert(scope,\n                  value + '&&typeof ' + value + '===\"object\"',\n                  'invalid sample.coverage');\n              });\n              var VALUE = scope.def(\n                '\"value\" in ', value, '?+', value, '.value:1');\n              var INVERT = scope.def('!!', value, '.invert');\n              return [VALUE, INVERT]\n            })\n      }\n    });\n\n    return STATE\n  }\n\n  function parseUniforms (uniforms, env) {\n    var staticUniforms = uniforms.static;\n    var dynamicUniforms = uniforms.dynamic;\n\n    var UNIFORMS = {};\n\n    Object.keys(staticUniforms).forEach(function (name) {\n      var value = staticUniforms[name];\n      var result;\n      if (typeof value === 'number' ||\n          typeof value === 'boolean') {\n        result = createStaticDecl(function () {\n          return value\n        });\n      } else if (typeof value === 'function') {\n        var reglType = value._reglType;\n        if (reglType === 'texture2d' ||\n            reglType === 'textureCube') {\n          result = createStaticDecl(function (env) {\n            return env.link(value)\n          });\n        } else if (reglType === 'framebuffer' ||\n                   reglType === 'framebufferCube') {\n          check$1.command(value.color.length > 0,\n            'missing color attachment for framebuffer sent to uniform \"' + name + '\"', env.commandStr);\n          result = createStaticDecl(function (env) {\n            return env.link(value.color[0])\n          });\n        } else {\n          check$1.commandRaise('invalid data for uniform \"' + name + '\"', env.commandStr);\n        }\n      } else if (isArrayLike(value)) {\n        result = createStaticDecl(function (env) {\n          var ITEM = env.global.def('[',\n            loop(value.length, function (i) {\n              check$1.command(\n                typeof value[i] === 'number' ||\n                typeof value[i] === 'boolean',\n                'invalid uniform ' + name, env.commandStr);\n              return value[i]\n            }), ']');\n          return ITEM\n        });\n      } else {\n        check$1.commandRaise('invalid or missing data for uniform \"' + name + '\"', env.commandStr);\n      }\n      result.value = value;\n      UNIFORMS[name] = result;\n    });\n\n    Object.keys(dynamicUniforms).forEach(function (key) {\n      var dyn = dynamicUniforms[key];\n      UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      });\n    });\n\n    return UNIFORMS\n  }\n\n  function parseAttributes (attributes, env) {\n    var staticAttributes = attributes.static;\n    var dynamicAttributes = attributes.dynamic;\n\n    var attributeDefs = {};\n\n    Object.keys(staticAttributes).forEach(function (attribute) {\n      var value = staticAttributes[attribute];\n      var id = stringStore.id(attribute);\n\n      var record = new AttributeRecord();\n      if (isBufferArgs(value)) {\n        record.state = ATTRIB_STATE_POINTER;\n        record.buffer = bufferState.getBuffer(\n          bufferState.create(value, GL_ARRAY_BUFFER$1, false, true));\n        record.type = 0;\n      } else {\n        var buffer = bufferState.getBuffer(value);\n        if (buffer) {\n          record.state = ATTRIB_STATE_POINTER;\n          record.buffer = buffer;\n          record.type = 0;\n        } else {\n          check$1.command(typeof value === 'object' && value,\n            'invalid data for attribute ' + attribute, env.commandStr);\n          if (value.constant) {\n            var constant = value.constant;\n            record.buffer = 'null';\n            record.state = ATTRIB_STATE_CONSTANT;\n            if (typeof constant === 'number') {\n              record.x = constant;\n            } else {\n              check$1.command(\n                isArrayLike(constant) &&\n                constant.length > 0 &&\n                constant.length <= 4,\n                'invalid constant for attribute ' + attribute, env.commandStr);\n              CUTE_COMPONENTS.forEach(function (c, i) {\n                if (i < constant.length) {\n                  record[c] = constant[i];\n                }\n              });\n            }\n          } else {\n            if (isBufferArgs(value.buffer)) {\n              buffer = bufferState.getBuffer(\n                bufferState.create(value.buffer, GL_ARRAY_BUFFER$1, false, true));\n            } else {\n              buffer = bufferState.getBuffer(value.buffer);\n            }\n            check$1.command(!!buffer, 'missing buffer for attribute \"' + attribute + '\"', env.commandStr);\n\n            var offset = value.offset | 0;\n            check$1.command(offset >= 0,\n              'invalid offset for attribute \"' + attribute + '\"', env.commandStr);\n\n            var stride = value.stride | 0;\n            check$1.command(stride >= 0 && stride < 256,\n              'invalid stride for attribute \"' + attribute + '\", must be integer betweeen [0, 255]', env.commandStr);\n\n            var size = value.size | 0;\n            check$1.command(!('size' in value) || (size > 0 && size <= 4),\n              'invalid size for attribute \"' + attribute + '\", must be 1,2,3,4', env.commandStr);\n\n            var normalized = !!value.normalized;\n\n            var type = 0;\n            if ('type' in value) {\n              check$1.commandParameter(\n                value.type, glTypes,\n                'invalid type for attribute ' + attribute, env.commandStr);\n              type = glTypes[value.type];\n            }\n\n            var divisor = value.divisor | 0;\n            if ('divisor' in value) {\n              check$1.command(divisor === 0 || extInstancing,\n                'cannot specify divisor for attribute \"' + attribute + '\", instancing not supported', env.commandStr);\n              check$1.command(divisor >= 0,\n                'invalid divisor for attribute \"' + attribute + '\"', env.commandStr);\n            }\n\n            check$1.optional(function () {\n              var command = env.commandStr;\n\n              var VALID_KEYS = [\n                'buffer',\n                'offset',\n                'divisor',\n                'normalized',\n                'type',\n                'size',\n                'stride'\n              ];\n\n              Object.keys(value).forEach(function (prop) {\n                check$1.command(\n                  VALID_KEYS.indexOf(prop) >= 0,\n                  'unknown parameter \"' + prop + '\" for attribute pointer \"' + attribute + '\" (valid parameters are ' + VALID_KEYS + ')',\n                  command);\n              });\n            });\n\n            record.buffer = buffer;\n            record.state = ATTRIB_STATE_POINTER;\n            record.size = size;\n            record.normalized = normalized;\n            record.type = type || buffer.dtype;\n            record.offset = offset;\n            record.stride = stride;\n            record.divisor = divisor;\n          }\n        }\n      }\n\n      attributeDefs[attribute] = createStaticDecl(function (env, scope) {\n        var cache = env.attribCache;\n        if (id in cache) {\n          return cache[id]\n        }\n        var result = {\n          isStream: false\n        };\n        Object.keys(record).forEach(function (key) {\n          result[key] = record[key];\n        });\n        if (record.buffer) {\n          result.buffer = env.link(record.buffer);\n          result.type = result.type || (result.buffer + '.dtype');\n        }\n        cache[id] = result;\n        return result\n      });\n    });\n\n    Object.keys(dynamicAttributes).forEach(function (attribute) {\n      var dyn = dynamicAttributes[attribute];\n\n      function appendAttributeCode (env, block) {\n        var VALUE = env.invoke(block, dyn);\n\n        var shared = env.shared;\n\n        var IS_BUFFER_ARGS = shared.isBufferArgs;\n        var BUFFER_STATE = shared.buffer;\n\n        // Perform validation on attribute\n        check$1.optional(function () {\n          env.assert(block,\n            VALUE + '&&(typeof ' + VALUE + '===\"object\"||typeof ' +\n            VALUE + '===\"function\")&&(' +\n            IS_BUFFER_ARGS + '(' + VALUE + ')||' +\n            BUFFER_STATE + '.getBuffer(' + VALUE + ')||' +\n            BUFFER_STATE + '.getBuffer(' + VALUE + '.buffer)||' +\n            IS_BUFFER_ARGS + '(' + VALUE + '.buffer)||' +\n            '(\"constant\" in ' + VALUE +\n            '&&(typeof ' + VALUE + '.constant===\"number\"||' +\n            shared.isArrayLike + '(' + VALUE + '.constant))))',\n            'invalid dynamic attribute \"' + attribute + '\"');\n        });\n\n        // allocate names for result\n        var result = {\n          isStream: block.def(false)\n        };\n        var defaultRecord = new AttributeRecord();\n        defaultRecord.state = ATTRIB_STATE_POINTER;\n        Object.keys(defaultRecord).forEach(function (key) {\n          result[key] = block.def('' + defaultRecord[key]);\n        });\n\n        var BUFFER = result.buffer;\n        var TYPE = result.type;\n        block(\n          'if(', IS_BUFFER_ARGS, '(', VALUE, ')){',\n          result.isStream, '=true;',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$1, ',', VALUE, ');',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');',\n          'if(', BUFFER, '){',\n          TYPE, '=', BUFFER, '.dtype;',\n          '}else if(\"constant\" in ', VALUE, '){',\n          result.state, '=', ATTRIB_STATE_CONSTANT, ';',\n          'if(typeof ' + VALUE + '.constant === \"number\"){',\n          result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;',\n          CUTE_COMPONENTS.slice(1).map(function (n) {\n            return result[n]\n          }).join('='), '=0;',\n          '}else{',\n          CUTE_COMPONENTS.map(function (name, i) {\n            return (\n              result[name] + '=' + VALUE + '.constant.length>=' + i +\n              '?' + VALUE + '.constant[' + i + ']:0;'\n            )\n          }).join(''),\n          '}}else{',\n          'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){',\n          BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$1, ',', VALUE, '.buffer);',\n          '}else{',\n          BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);',\n          '}',\n          TYPE, '=\"type\" in ', VALUE, '?',\n          shared.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;',\n          result.normalized, '=!!', VALUE, '.normalized;');\n        function emitReadRecord (name) {\n          block(result[name], '=', VALUE, '.', name, '|0;');\n        }\n        emitReadRecord('size');\n        emitReadRecord('offset');\n        emitReadRecord('stride');\n        emitReadRecord('divisor');\n\n        block('}}');\n\n        block.exit(\n          'if(', result.isStream, '){',\n          BUFFER_STATE, '.destroyStream(', BUFFER, ');',\n          '}');\n\n        return result\n      }\n\n      attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode);\n    });\n\n    return attributeDefs\n  }\n\n  function parseContext (context) {\n    var staticContext = context.static;\n    var dynamicContext = context.dynamic;\n    var result = {};\n\n    Object.keys(staticContext).forEach(function (name) {\n      var value = staticContext[name];\n      result[name] = createStaticDecl(function (env, scope) {\n        if (typeof value === 'number' || typeof value === 'boolean') {\n          return '' + value\n        } else {\n          return env.link(value)\n        }\n      });\n    });\n\n    Object.keys(dynamicContext).forEach(function (name) {\n      var dyn = dynamicContext[name];\n      result[name] = createDynamicDecl(dyn, function (env, scope) {\n        return env.invoke(scope, dyn)\n      });\n    });\n\n    return result\n  }\n\n  function parseArguments (options, attributes, uniforms, context, env) {\n    var staticOptions = options.static;\n    var dynamicOptions = options.dynamic;\n\n    check$1.optional(function () {\n      var KEY_NAMES = [\n        S_FRAMEBUFFER,\n        S_VERT,\n        S_FRAG,\n        S_ELEMENTS,\n        S_PRIMITIVE,\n        S_OFFSET,\n        S_COUNT,\n        S_INSTANCES,\n        S_PROFILE\n      ].concat(GL_STATE_NAMES);\n\n      function checkKeys (dict) {\n        Object.keys(dict).forEach(function (key) {\n          check$1.command(\n            KEY_NAMES.indexOf(key) >= 0,\n            'unknown parameter \"' + key + '\"',\n            env.commandStr);\n        });\n      }\n\n      checkKeys(staticOptions);\n      checkKeys(dynamicOptions);\n    });\n\n    var framebuffer = parseFramebuffer(options, env);\n    var viewportAndScissor = parseViewportScissor(options, framebuffer, env);\n    var draw = parseDraw(options, env);\n    var state = parseGLState(options, env);\n    var shader = parseProgram(options, env);\n\n    function copyBox (name) {\n      var defn = viewportAndScissor[name];\n      if (defn) {\n        state[name] = defn;\n      }\n    }\n    copyBox(S_VIEWPORT);\n    copyBox(propName(S_SCISSOR_BOX));\n\n    var dirty = Object.keys(state).length > 0;\n\n    var result = {\n      framebuffer: framebuffer,\n      draw: draw,\n      shader: shader,\n      state: state,\n      dirty: dirty\n    };\n\n    result.profile = parseProfile(options, env);\n    result.uniforms = parseUniforms(uniforms, env);\n    result.attributes = parseAttributes(attributes, env);\n    result.context = parseContext(context, env);\n    return result\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON UPDATE FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitContext (env, scope, context) {\n    var shared = env.shared;\n    var CONTEXT = shared.context;\n\n    var contextEnter = env.scope();\n\n    Object.keys(context).forEach(function (name) {\n      scope.save(CONTEXT, '.' + name);\n      var defn = context[name];\n      contextEnter(CONTEXT, '.', name, '=', defn.append(env, scope), ';');\n    });\n\n    scope(contextEnter);\n  }\n\n  // ===================================================\n  // ===================================================\n  // COMMON DRAWING FUNCTIONS\n  // ===================================================\n  // ===================================================\n  function emitPollFramebuffer (env, scope, framebuffer, skipCheck) {\n    var shared = env.shared;\n\n    var GL = shared.gl;\n    var FRAMEBUFFER_STATE = shared.framebuffer;\n    var EXT_DRAW_BUFFERS;\n    if (extDrawBuffers) {\n      EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers');\n    }\n\n    var constants = env.constants;\n\n    var DRAW_BUFFERS = constants.drawBuffer;\n    var BACK_BUFFER = constants.backBuffer;\n\n    var NEXT;\n    if (framebuffer) {\n      NEXT = framebuffer.append(env, scope);\n    } else {\n      NEXT = scope.def(FRAMEBUFFER_STATE, '.next');\n    }\n\n    if (!skipCheck) {\n      scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){');\n    }\n    scope(\n      'if(', NEXT, '){',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$1, ',', NEXT, '.framebuffer);');\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(',\n        DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);');\n    }\n    scope('}else{',\n      GL, '.bindFramebuffer(', GL_FRAMEBUFFER$1, ',null);');\n    if (extDrawBuffers) {\n      scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');');\n    }\n    scope(\n      '}',\n      FRAMEBUFFER_STATE, '.cur=', NEXT, ';');\n    if (!skipCheck) {\n      scope('}');\n    }\n  }\n\n  function emitPollState (env, scope, args) {\n    var shared = env.shared;\n\n    var GL = shared.gl;\n\n    var CURRENT_VARS = env.current;\n    var NEXT_VARS = env.next;\n    var CURRENT_STATE = shared.current;\n    var NEXT_STATE = shared.next;\n\n    var block = env.cond(CURRENT_STATE, '.dirty');\n\n    GL_STATE_NAMES.forEach(function (prop) {\n      var param = propName(prop);\n      if (param in args.state) {\n        return\n      }\n\n      var NEXT, CURRENT;\n      if (param in NEXT_VARS) {\n        NEXT = NEXT_VARS[param];\n        CURRENT = CURRENT_VARS[param];\n        var parts = loop(currentState[param].length, function (i) {\n          return block.def(NEXT, '[', i, ']')\n        });\n        block(env.cond(parts.map(function (p, i) {\n          return p + '!==' + CURRENT + '[' + i + ']'\n        }).join('||'))\n          .then(\n            GL, '.', GL_VARIABLES[param], '(', parts, ');',\n            parts.map(function (p, i) {\n              return CURRENT + '[' + i + ']=' + p\n            }).join(';'), ';'));\n      } else {\n        NEXT = block.def(NEXT_STATE, '.', param);\n        var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param);\n        block(ifte);\n        if (param in GL_FLAGS) {\n          ifte(\n            env.cond(NEXT)\n                .then(GL, '.enable(', GL_FLAGS[param], ');')\n                .else(GL, '.disable(', GL_FLAGS[param], ');'),\n            CURRENT_STATE, '.', param, '=', NEXT, ';');\n        } else {\n          ifte(\n            GL, '.', GL_VARIABLES[param], '(', NEXT, ');',\n            CURRENT_STATE, '.', param, '=', NEXT, ';');\n        }\n      }\n    });\n    if (Object.keys(args.state).length === 0) {\n      block(CURRENT_STATE, '.dirty=false;');\n    }\n    scope(block);\n  }\n\n  function emitSetOptions (env, scope, options, filter) {\n    var shared = env.shared;\n    var CURRENT_VARS = env.current;\n    var CURRENT_STATE = shared.current;\n    var GL = shared.gl;\n    sortState(Object.keys(options)).forEach(function (param) {\n      var defn = options[param];\n      if (filter && !filter(defn)) {\n        return\n      }\n      var variable = defn.append(env, scope);\n      if (GL_FLAGS[param]) {\n        var flag = GL_FLAGS[param];\n        if (isStatic(defn)) {\n          if (variable) {\n            scope(GL, '.enable(', flag, ');');\n          } else {\n            scope(GL, '.disable(', flag, ');');\n          }\n        } else {\n          scope(env.cond(variable)\n            .then(GL, '.enable(', flag, ');')\n            .else(GL, '.disable(', flag, ');'));\n        }\n        scope(CURRENT_STATE, '.', param, '=', variable, ';');\n      } else if (isArrayLike(variable)) {\n        var CURRENT = CURRENT_VARS[param];\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          variable.map(function (v, i) {\n            return CURRENT + '[' + i + ']=' + v\n          }).join(';'), ';');\n      } else {\n        scope(\n          GL, '.', GL_VARIABLES[param], '(', variable, ');',\n          CURRENT_STATE, '.', param, '=', variable, ';');\n      }\n    });\n  }\n\n  function injectExtensions (env, scope) {\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays');\n    }\n  }\n\n  function emitProfile (env, scope, args, useScope, incrementCounter) {\n    var shared = env.shared;\n    var STATS = env.stats;\n    var CURRENT_STATE = shared.current;\n    var TIMER = shared.timer;\n    var profileArg = args.profile;\n\n    function perfCounter () {\n      if (typeof performance === 'undefined') {\n        return 'Date.now()'\n      } else {\n        return 'performance.now()'\n      }\n    }\n\n    var CPU_START, QUERY_COUNTER;\n    function emitProfileStart (block) {\n      CPU_START = scope.def();\n      block(CPU_START, '=', perfCounter(), ';');\n      if (typeof incrementCounter === 'string') {\n        block(STATS, '.count+=', incrementCounter, ';');\n      } else {\n        block(STATS, '.count++;');\n      }\n      if (timer) {\n        if (useScope) {\n          QUERY_COUNTER = scope.def();\n          block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();');\n        } else {\n          block(TIMER, '.beginQuery(', STATS, ');');\n        }\n      }\n    }\n\n    function emitProfileEnd (block) {\n      block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';');\n      if (timer) {\n        if (useScope) {\n          block(TIMER, '.pushScopeStats(',\n            QUERY_COUNTER, ',',\n            TIMER, '.getNumPendingQueries(),',\n            STATS, ');');\n        } else {\n          block(TIMER, '.endQuery();');\n        }\n      }\n    }\n\n    function scopeProfile (value) {\n      var prev = scope.def(CURRENT_STATE, '.profile');\n      scope(CURRENT_STATE, '.profile=', value, ';');\n      scope.exit(CURRENT_STATE, '.profile=', prev, ';');\n    }\n\n    var USE_PROFILE;\n    if (profileArg) {\n      if (isStatic(profileArg)) {\n        if (profileArg.enable) {\n          emitProfileStart(scope);\n          emitProfileEnd(scope.exit);\n          scopeProfile('true');\n        } else {\n          scopeProfile('false');\n        }\n        return\n      }\n      USE_PROFILE = profileArg.append(env, scope);\n      scopeProfile(USE_PROFILE);\n    } else {\n      USE_PROFILE = scope.def(CURRENT_STATE, '.profile');\n    }\n\n    var start = env.block();\n    emitProfileStart(start);\n    scope('if(', USE_PROFILE, '){', start, '}');\n    var end = env.block();\n    emitProfileEnd(end);\n    scope.exit('if(', USE_PROFILE, '){', end, '}');\n  }\n\n  function emitAttributes (env, scope, args, attributes, filter) {\n    var shared = env.shared;\n\n    function typeLength (x) {\n      switch (x) {\n        case GL_FLOAT_VEC2:\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          return 2\n        case GL_FLOAT_VEC3:\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          return 3\n        case GL_FLOAT_VEC4:\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          return 4\n        default:\n          return 1\n      }\n    }\n\n    function emitBindAttribute (ATTRIBUTE, size, record) {\n      var GL = shared.gl;\n\n      var LOCATION = scope.def(ATTRIBUTE, '.location');\n      var BINDING = scope.def(shared.attributes, '[', LOCATION, ']');\n\n      var STATE = record.state;\n      var BUFFER = record.buffer;\n      var CONST_COMPONENTS = [\n        record.x,\n        record.y,\n        record.z,\n        record.w\n      ];\n\n      var COMMON_KEYS = [\n        'buffer',\n        'normalized',\n        'offset',\n        'stride'\n      ];\n\n      function emitBuffer () {\n        scope(\n          'if(!', BINDING, '.buffer){',\n          GL, '.enableVertexAttribArray(', LOCATION, ');}');\n\n        var TYPE = record.type;\n        var SIZE;\n        if (!record.size) {\n          SIZE = size;\n        } else {\n          SIZE = scope.def(record.size, '||', size);\n        }\n\n        scope('if(',\n          BINDING, '.type!==', TYPE, '||',\n          BINDING, '.size!==', SIZE, '||',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '!==' + record[key]\n          }).join('||'),\n          '){',\n          GL, '.bindBuffer(', GL_ARRAY_BUFFER$1, ',', BUFFER, '.buffer);',\n          GL, '.vertexAttribPointer(', [\n            LOCATION,\n            SIZE,\n            TYPE,\n            record.normalized,\n            record.stride,\n            record.offset\n          ], ');',\n          BINDING, '.type=', TYPE, ';',\n          BINDING, '.size=', SIZE, ';',\n          COMMON_KEYS.map(function (key) {\n            return BINDING + '.' + key + '=' + record[key] + ';'\n          }).join(''),\n          '}');\n\n        if (extInstancing) {\n          var DIVISOR = record.divisor;\n          scope(\n            'if(', BINDING, '.divisor!==', DIVISOR, '){',\n            env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');',\n            BINDING, '.divisor=', DIVISOR, ';}');\n        }\n      }\n\n      function emitConstant () {\n        scope(\n          'if(', BINDING, '.buffer){',\n          GL, '.disableVertexAttribArray(', LOCATION, ');',\n          '}if(', CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i]\n          }).join('||'), '){',\n          GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');',\n          CUTE_COMPONENTS.map(function (c, i) {\n            return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';'\n          }).join(''),\n          '}');\n      }\n\n      if (STATE === ATTRIB_STATE_POINTER) {\n        emitBuffer();\n      } else if (STATE === ATTRIB_STATE_CONSTANT) {\n        emitConstant();\n      } else {\n        scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){');\n        emitBuffer();\n        scope('}else{');\n        emitConstant();\n        scope('}');\n      }\n    }\n\n    attributes.forEach(function (attribute) {\n      var name = attribute.name;\n      var arg = args.attributes[name];\n      var record;\n      if (arg) {\n        if (!filter(arg)) {\n          return\n        }\n        record = arg.append(env, scope);\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          return\n        }\n        var scopeAttrib = env.scopeAttrib(name);\n        check$1.optional(function () {\n          env.assert(scope,\n            scopeAttrib + '.state',\n            'missing attribute ' + name);\n        });\n        record = {};\n        Object.keys(new AttributeRecord()).forEach(function (key) {\n          record[key] = scope.def(scopeAttrib, '.', key);\n        });\n      }\n      emitBindAttribute(\n        env.link(attribute), typeLength(attribute.info.type), record);\n    });\n  }\n\n  function emitUniforms (env, scope, args, uniforms, filter) {\n    var shared = env.shared;\n    var GL = shared.gl;\n\n    var infix;\n    for (var i = 0; i < uniforms.length; ++i) {\n      var uniform = uniforms[i];\n      var name = uniform.name;\n      var type = uniform.info.type;\n      var arg = args.uniforms[name];\n      var UNIFORM = env.link(uniform);\n      var LOCATION = UNIFORM + '.location';\n\n      var VALUE;\n      if (arg) {\n        if (!filter(arg)) {\n          continue\n        }\n        if (isStatic(arg)) {\n          var value = arg.value;\n          check$1.command(\n            value !== null && typeof value !== 'undefined',\n            'missing uniform \"' + name + '\"', env.commandStr);\n          if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {\n            check$1.command(\n              typeof value === 'function' &&\n              ((type === GL_SAMPLER_2D &&\n                (value._reglType === 'texture2d' ||\n                value._reglType === 'framebuffer')) ||\n              (type === GL_SAMPLER_CUBE &&\n                (value._reglType === 'textureCube' ||\n                value._reglType === 'framebufferCube'))),\n              'invalid texture for uniform ' + name, env.commandStr);\n            var TEX_VALUE = env.link(value._texture || value.color[0]._texture);\n            scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());');\n            scope.exit(TEX_VALUE, '.unbind();');\n          } else if (\n            type === GL_FLOAT_MAT2 ||\n            type === GL_FLOAT_MAT3 ||\n            type === GL_FLOAT_MAT4) {\n            check$1.optional(function () {\n              check$1.command(isArrayLike(value),\n                'invalid matrix for uniform ' + name, env.commandStr);\n              check$1.command(\n                (type === GL_FLOAT_MAT2 && value.length === 4) ||\n                (type === GL_FLOAT_MAT3 && value.length === 9) ||\n                (type === GL_FLOAT_MAT4 && value.length === 16),\n                'invalid length for matrix uniform ' + name, env.commandStr);\n            });\n            var MAT_VALUE = env.global.def('new Float32Array([' +\n              Array.prototype.slice.call(value) + '])');\n            var dim = 2;\n            if (type === GL_FLOAT_MAT3) {\n              dim = 3;\n            } else if (type === GL_FLOAT_MAT4) {\n              dim = 4;\n            }\n            scope(\n              GL, '.uniformMatrix', dim, 'fv(',\n              LOCATION, ',false,', MAT_VALUE, ');');\n          } else {\n            switch (type) {\n              case GL_FLOAT$7:\n                check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr);\n                infix = '1f';\n                break\n              case GL_FLOAT_VEC2:\n                check$1.command(\n                  isArrayLike(value) && value.length === 2,\n                  'uniform ' + name, env.commandStr);\n                infix = '2f';\n                break\n              case GL_FLOAT_VEC3:\n                check$1.command(\n                  isArrayLike(value) && value.length === 3,\n                  'uniform ' + name, env.commandStr);\n                infix = '3f';\n                break\n              case GL_FLOAT_VEC4:\n                check$1.command(\n                  isArrayLike(value) && value.length === 4,\n                  'uniform ' + name, env.commandStr);\n                infix = '4f';\n                break\n              case GL_BOOL:\n                check$1.commandType(value, 'boolean', 'uniform ' + name, env.commandStr);\n                infix = '1i';\n                break\n              case GL_INT$3:\n                check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr);\n                infix = '1i';\n                break\n              case GL_BOOL_VEC2:\n                check$1.command(\n                  isArrayLike(value) && value.length === 2,\n                  'uniform ' + name, env.commandStr);\n                infix = '2i';\n                break\n              case GL_INT_VEC2:\n                check$1.command(\n                  isArrayLike(value) && value.length === 2,\n                  'uniform ' + name, env.commandStr);\n                infix = '2i';\n                break\n              case GL_BOOL_VEC3:\n                check$1.command(\n                  isArrayLike(value) && value.length === 3,\n                  'uniform ' + name, env.commandStr);\n                infix = '3i';\n                break\n              case GL_INT_VEC3:\n                check$1.command(\n                  isArrayLike(value) && value.length === 3,\n                  'uniform ' + name, env.commandStr);\n                infix = '3i';\n                break\n              case GL_BOOL_VEC4:\n                check$1.command(\n                  isArrayLike(value) && value.length === 4,\n                  'uniform ' + name, env.commandStr);\n                infix = '4i';\n                break\n              case GL_INT_VEC4:\n                check$1.command(\n                  isArrayLike(value) && value.length === 4,\n                  'uniform ' + name, env.commandStr);\n                infix = '4i';\n                break\n            }\n            scope(GL, '.uniform', infix, '(', LOCATION, ',',\n              isArrayLike(value) ? Array.prototype.slice.call(value) : value,\n              ');');\n          }\n          continue\n        } else {\n          VALUE = arg.append(env, scope);\n        }\n      } else {\n        if (!filter(SCOPE_DECL)) {\n          continue\n        }\n        VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']');\n      }\n\n      if (type === GL_SAMPLER_2D) {\n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebuffer\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}');\n      } else if (type === GL_SAMPLER_CUBE) {\n        scope(\n          'if(', VALUE, '&&', VALUE, '._reglType===\"framebufferCube\"){',\n          VALUE, '=', VALUE, '.color[0];',\n          '}');\n      }\n\n      // perform type validation\n      check$1.optional(function () {\n        function check (pred, message) {\n          env.assert(scope, pred,\n            'bad data or missing for uniform \"' + name + '\".  ' + message);\n        }\n\n        function checkType (type) {\n          check(\n            'typeof ' + VALUE + '===\"' + type + '\"',\n            'invalid type, expected ' + type);\n        }\n\n        function checkVector (n, type) {\n          check(\n            shared.isArrayLike + '(' + VALUE + ')&&' + VALUE + '.length===' + n,\n            'invalid vector, should have length ' + n, env.commandStr);\n        }\n\n        function checkTexture (target) {\n          check(\n            'typeof ' + VALUE + '===\"function\"&&' +\n            VALUE + '._reglType===\"texture' +\n            (target === GL_TEXTURE_2D$2 ? '2d' : 'Cube') + '\"',\n            'invalid texture type', env.commandStr);\n        }\n\n        switch (type) {\n          case GL_INT$3:\n            checkType('number');\n            break\n          case GL_INT_VEC2:\n            checkVector(2, 'number');\n            break\n          case GL_INT_VEC3:\n            checkVector(3, 'number');\n            break\n          case GL_INT_VEC4:\n            checkVector(4, 'number');\n            break\n          case GL_FLOAT$7:\n            checkType('number');\n            break\n          case GL_FLOAT_VEC2:\n            checkVector(2, 'number');\n            break\n          case GL_FLOAT_VEC3:\n            checkVector(3, 'number');\n            break\n          case GL_FLOAT_VEC4:\n            checkVector(4, 'number');\n            break\n          case GL_BOOL:\n            checkType('boolean');\n            break\n          case GL_BOOL_VEC2:\n            checkVector(2, 'boolean');\n            break\n          case GL_BOOL_VEC3:\n            checkVector(3, 'boolean');\n            break\n          case GL_BOOL_VEC4:\n            checkVector(4, 'boolean');\n            break\n          case GL_FLOAT_MAT2:\n            checkVector(4, 'number');\n            break\n          case GL_FLOAT_MAT3:\n            checkVector(9, 'number');\n            break\n          case GL_FLOAT_MAT4:\n            checkVector(16, 'number');\n            break\n          case GL_SAMPLER_2D:\n            checkTexture(GL_TEXTURE_2D$2);\n            break\n          case GL_SAMPLER_CUBE:\n            checkTexture(GL_TEXTURE_CUBE_MAP$1);\n            break\n        }\n      });\n\n      var unroll = 1;\n      switch (type) {\n        case GL_SAMPLER_2D:\n        case GL_SAMPLER_CUBE:\n          var TEX = scope.def(VALUE, '._texture');\n          scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());');\n          scope.exit(TEX, '.unbind();');\n          continue\n\n        case GL_INT$3:\n        case GL_BOOL:\n          infix = '1i';\n          break\n\n        case GL_INT_VEC2:\n        case GL_BOOL_VEC2:\n          infix = '2i';\n          unroll = 2;\n          break\n\n        case GL_INT_VEC3:\n        case GL_BOOL_VEC3:\n          infix = '3i';\n          unroll = 3;\n          break\n\n        case GL_INT_VEC4:\n        case GL_BOOL_VEC4:\n          infix = '4i';\n          unroll = 4;\n          break\n\n        case GL_FLOAT$7:\n          infix = '1f';\n          break\n\n        case GL_FLOAT_VEC2:\n          infix = '2f';\n          unroll = 2;\n          break\n\n        case GL_FLOAT_VEC3:\n          infix = '3f';\n          unroll = 3;\n          break\n\n        case GL_FLOAT_VEC4:\n          infix = '4f';\n          unroll = 4;\n          break\n\n        case GL_FLOAT_MAT2:\n          infix = 'Matrix2fv';\n          break\n\n        case GL_FLOAT_MAT3:\n          infix = 'Matrix3fv';\n          break\n\n        case GL_FLOAT_MAT4:\n          infix = 'Matrix4fv';\n          break\n      }\n\n      scope(GL, '.uniform', infix, '(', LOCATION, ',');\n      if (infix.charAt(0) === 'M') {\n        var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2);\n        var STORAGE = env.global.def('new Float32Array(', matSize, ')');\n        scope(\n          'false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(',\n          loop(matSize, function (i) {\n            return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']'\n          }), ',', STORAGE, ')');\n      } else if (unroll > 1) {\n        scope(loop(unroll, function (i) {\n          return VALUE + '[' + i + ']'\n        }));\n      } else {\n        scope(VALUE);\n      }\n      scope(');');\n    }\n  }\n\n  function emitDraw (env, outer, inner, args) {\n    var shared = env.shared;\n    var GL = shared.gl;\n    var DRAW_STATE = shared.draw;\n\n    var drawOptions = args.draw;\n\n    function emitElements () {\n      var defn = drawOptions.elements;\n      var ELEMENTS;\n      var scope = outer;\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner;\n        }\n        ELEMENTS = defn.append(env, scope);\n      } else {\n        ELEMENTS = scope.def(DRAW_STATE, '.', S_ELEMENTS);\n      }\n      if (ELEMENTS) {\n        scope(\n          'if(' + ELEMENTS + ')' +\n          GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$1 + ',' + ELEMENTS + '.buffer.buffer);');\n      }\n      return ELEMENTS\n    }\n\n    function emitCount () {\n      var defn = drawOptions.count;\n      var COUNT;\n      var scope = outer;\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          scope = inner;\n        }\n        COUNT = defn.append(env, scope);\n        check$1.optional(function () {\n          if (defn.MISSING) {\n            env.assert(outer, 'false', 'missing vertex count');\n          }\n          if (defn.DYNAMIC) {\n            env.assert(scope, COUNT + '>=0', 'missing vertex count');\n          }\n        });\n      } else {\n        COUNT = scope.def(DRAW_STATE, '.', S_COUNT);\n        check$1.optional(function () {\n          env.assert(scope, COUNT + '>=0', 'missing vertex count');\n        });\n      }\n      return COUNT\n    }\n\n    var ELEMENTS = emitElements();\n    function emitValue (name) {\n      var defn = drawOptions[name];\n      if (defn) {\n        if ((defn.contextDep && args.contextDynamic) || defn.propDep) {\n          return defn.append(env, inner)\n        } else {\n          return defn.append(env, outer)\n        }\n      } else {\n        return outer.def(DRAW_STATE, '.', name)\n      }\n    }\n\n    var PRIMITIVE = emitValue(S_PRIMITIVE);\n    var OFFSET = emitValue(S_OFFSET);\n\n    var COUNT = emitCount();\n    if (typeof COUNT === 'number') {\n      if (COUNT === 0) {\n        return\n      }\n    } else {\n      inner('if(', COUNT, '){');\n      inner.exit('}');\n    }\n\n    var INSTANCES, EXT_INSTANCING;\n    if (extInstancing) {\n      INSTANCES = emitValue(S_INSTANCES);\n      EXT_INSTANCING = env.instancing;\n    }\n\n    var ELEMENT_TYPE = ELEMENTS + '.type';\n\n    var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements);\n\n    function emitInstancing () {\n      function drawElements () {\n        inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)',\n          INSTANCES\n        ], ');');\n      }\n\n      function drawArrays () {\n        inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(',\n          [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');');\n      }\n\n      if (ELEMENTS) {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){');\n          drawElements();\n          inner('}else{');\n          drawArrays();\n          inner('}');\n        } else {\n          drawElements();\n        }\n      } else {\n        drawArrays();\n      }\n    }\n\n    function emitRegular () {\n      function drawElements () {\n        inner(GL + '.drawElements(' + [\n          PRIMITIVE,\n          COUNT,\n          ELEMENT_TYPE,\n          OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$7 + ')>>1)'\n        ] + ');');\n      }\n\n      function drawArrays () {\n        inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');');\n      }\n\n      if (ELEMENTS) {\n        if (!elementsStatic) {\n          inner('if(', ELEMENTS, '){');\n          drawElements();\n          inner('}else{');\n          drawArrays();\n          inner('}');\n        } else {\n          drawElements();\n        }\n      } else {\n        drawArrays();\n      }\n    }\n\n    if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {\n      if (typeof INSTANCES === 'string') {\n        inner('if(', INSTANCES, '>0){');\n        emitInstancing();\n        inner('}else if(', INSTANCES, '<0){');\n        emitRegular();\n        inner('}');\n      } else {\n        emitInstancing();\n      }\n    } else {\n      emitRegular();\n    }\n  }\n\n  function createBody (emitBody, parentEnv, args, program, count) {\n    var env = createREGLEnvironment();\n    var scope = env.proc('body', count);\n    check$1.optional(function () {\n      env.commandStr = parentEnv.commandStr;\n      env.command = env.link(parentEnv.commandStr);\n    });\n    if (extInstancing) {\n      env.instancing = scope.def(\n        env.shared.extensions, '.angle_instanced_arrays');\n    }\n    emitBody(env, scope, args, program);\n    return env.compile().body\n  }\n\n  // ===================================================\n  // ===================================================\n  // DRAW PROC\n  // ===================================================\n  // ===================================================\n  function emitDrawBody (env, draw, args, program) {\n    injectExtensions(env, draw);\n    emitAttributes(env, draw, args, program.attributes, function () {\n      return true\n    });\n    emitUniforms(env, draw, args, program.uniforms, function () {\n      return true\n    });\n    emitDraw(env, draw, draw, args);\n  }\n\n  function emitDrawProc (env, args) {\n    var draw = env.proc('draw', 1);\n\n    injectExtensions(env, draw);\n\n    emitContext(env, draw, args.context);\n    emitPollFramebuffer(env, draw, args.framebuffer);\n\n    emitPollState(env, draw, args);\n    emitSetOptions(env, draw, args.state);\n\n    emitProfile(env, draw, args, false, true);\n\n    var program = args.shader.progVar.append(env, draw);\n    draw(env.shared.gl, '.useProgram(', program, '.program);');\n\n    if (args.shader.program) {\n      emitDrawBody(env, draw, args, args.shader.program);\n    } else {\n      var drawCache = env.global.def('{}');\n      var PROG_ID = draw.def(program, '.id');\n      var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']');\n      draw(\n        env.cond(CACHED_PROC)\n          .then(CACHED_PROC, '.call(this,a0);')\n          .else(\n            CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=',\n            env.link(function (program) {\n              return createBody(emitDrawBody, env, args, program, 1)\n            }), '(', program, ');',\n            CACHED_PROC, '.call(this,a0);'));\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      draw(env.shared.current, '.dirty=true;');\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // BATCH PROC\n  // ===================================================\n  // ===================================================\n\n  function emitBatchDynamicShaderBody (env, scope, args, program) {\n    env.batchId = 'a1';\n\n    injectExtensions(env, scope);\n\n    function all () {\n      return true\n    }\n\n    emitAttributes(env, scope, args, program.attributes, all);\n    emitUniforms(env, scope, args, program.uniforms, all);\n    emitDraw(env, scope, scope, args);\n  }\n\n  function emitBatchBody (env, scope, args, program) {\n    injectExtensions(env, scope);\n\n    var contextDynamic = args.contextDep;\n\n    var BATCH_ID = scope.def();\n    var PROP_LIST = 'a0';\n    var NUM_PROPS = 'a1';\n    var PROPS = scope.def();\n    env.shared.props = PROPS;\n    env.batchId = BATCH_ID;\n\n    var outer = env.scope();\n    var inner = env.scope();\n\n    scope(\n      outer.entry,\n      'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){',\n      PROPS, '=', PROP_LIST, '[', BATCH_ID, '];',\n      inner,\n      '}',\n      outer.exit);\n\n    function isInnerDefn (defn) {\n      return ((defn.contextDep && contextDynamic) || defn.propDep)\n    }\n\n    function isOuterDefn (defn) {\n      return !isInnerDefn(defn)\n    }\n\n    if (args.needsContext) {\n      emitContext(env, inner, args.context);\n    }\n    if (args.needsFramebuffer) {\n      emitPollFramebuffer(env, inner, args.framebuffer);\n    }\n    emitSetOptions(env, inner, args.state, isInnerDefn);\n\n    if (args.profile && isInnerDefn(args.profile)) {\n      emitProfile(env, inner, args, false, true);\n    }\n\n    if (!program) {\n      var progCache = env.global.def('{}');\n      var PROGRAM = args.shader.progVar.append(env, inner);\n      var PROG_ID = inner.def(PROGRAM, '.id');\n      var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']');\n      inner(\n        env.shared.gl, '.useProgram(', PROGRAM, '.program);',\n        'if(!', CACHED_PROC, '){',\n        CACHED_PROC, '=', progCache, '[', PROG_ID, ']=',\n        env.link(function (program) {\n          return createBody(\n            emitBatchDynamicShaderBody, env, args, program, 2)\n        }), '(', PROGRAM, ');}',\n        CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');');\n    } else {\n      emitAttributes(env, outer, args, program.attributes, isOuterDefn);\n      emitAttributes(env, inner, args, program.attributes, isInnerDefn);\n      emitUniforms(env, outer, args, program.uniforms, isOuterDefn);\n      emitUniforms(env, inner, args, program.uniforms, isInnerDefn);\n      emitDraw(env, outer, inner, args);\n    }\n  }\n\n  function emitBatchProc (env, args) {\n    var batch = env.proc('batch', 2);\n    env.batchId = '0';\n\n    injectExtensions(env, batch);\n\n    // Check if any context variables depend on props\n    var contextDynamic = false;\n    var needsContext = true;\n    Object.keys(args.context).forEach(function (name) {\n      contextDynamic = contextDynamic || args.context[name].propDep;\n    });\n    if (!contextDynamic) {\n      emitContext(env, batch, args.context);\n      needsContext = false;\n    }\n\n    // framebuffer state affects framebufferWidth/height context vars\n    var framebuffer = args.framebuffer;\n    var needsFramebuffer = false;\n    if (framebuffer) {\n      if (framebuffer.propDep) {\n        contextDynamic = needsFramebuffer = true;\n      } else if (framebuffer.contextDep && contextDynamic) {\n        needsFramebuffer = true;\n      }\n      if (!needsFramebuffer) {\n        emitPollFramebuffer(env, batch, framebuffer);\n      }\n    } else {\n      emitPollFramebuffer(env, batch, null);\n    }\n\n    // viewport is weird because it can affect context vars\n    if (args.state.viewport && args.state.viewport.propDep) {\n      contextDynamic = true;\n    }\n\n    function isInnerDefn (defn) {\n      return (defn.contextDep && contextDynamic) || defn.propDep\n    }\n\n    // set webgl options\n    emitPollState(env, batch, args);\n    emitSetOptions(env, batch, args.state, function (defn) {\n      return !isInnerDefn(defn)\n    });\n\n    if (!args.profile || !isInnerDefn(args.profile)) {\n      emitProfile(env, batch, args, false, 'a1');\n    }\n\n    // Save these values to args so that the batch body routine can use them\n    args.contextDep = contextDynamic;\n    args.needsContext = needsContext;\n    args.needsFramebuffer = needsFramebuffer;\n\n    // determine if shader is dynamic\n    var progDefn = args.shader.progVar;\n    if ((progDefn.contextDep && contextDynamic) || progDefn.propDep) {\n      emitBatchBody(\n        env,\n        batch,\n        args,\n        null);\n    } else {\n      var PROGRAM = progDefn.append(env, batch);\n      batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);');\n      if (args.shader.program) {\n        emitBatchBody(\n          env,\n          batch,\n          args,\n          args.shader.program);\n      } else {\n        var batchCache = env.global.def('{}');\n        var PROG_ID = batch.def(PROGRAM, '.id');\n        var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']');\n        batch(\n          env.cond(CACHED_PROC)\n            .then(CACHED_PROC, '.call(this,a0,a1);')\n            .else(\n              CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=',\n              env.link(function (program) {\n                return createBody(emitBatchBody, env, args, program, 2)\n              }), '(', PROGRAM, ');',\n              CACHED_PROC, '.call(this,a0,a1);'));\n      }\n    }\n\n    if (Object.keys(args.state).length > 0) {\n      batch(env.shared.current, '.dirty=true;');\n    }\n  }\n\n  // ===================================================\n  // ===================================================\n  // SCOPE COMMAND\n  // ===================================================\n  // ===================================================\n  function emitScopeProc (env, args) {\n    var scope = env.proc('scope', 3);\n    env.batchId = 'a2';\n\n    var shared = env.shared;\n    var CURRENT_STATE = shared.current;\n\n    emitContext(env, scope, args.context);\n\n    if (args.framebuffer) {\n      args.framebuffer.append(env, scope);\n    }\n\n    sortState(Object.keys(args.state)).forEach(function (name) {\n      var defn = args.state[name];\n      var value = defn.append(env, scope);\n      if (isArrayLike(value)) {\n        value.forEach(function (v, i) {\n          scope.set(env.next[name], '[' + i + ']', v);\n        });\n      } else {\n        scope.set(shared.next, '.' + name, value);\n      }\n    });\n\n    emitProfile(env, scope, args, true, true)\n\n    ;[S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(\n      function (opt) {\n        var variable = args.draw[opt];\n        if (!variable) {\n          return\n        }\n        scope.set(shared.draw, '.' + opt, '' + variable.append(env, scope));\n      });\n\n    Object.keys(args.uniforms).forEach(function (opt) {\n      scope.set(\n        shared.uniforms,\n        '[' + stringStore.id(opt) + ']',\n        args.uniforms[opt].append(env, scope));\n    });\n\n    Object.keys(args.attributes).forEach(function (name) {\n      var record = args.attributes[name].append(env, scope);\n      var scopeAttrib = env.scopeAttrib(name);\n      Object.keys(new AttributeRecord()).forEach(function (prop) {\n        scope.set(scopeAttrib, '.' + prop, record[prop]);\n      });\n    });\n\n    function saveShader (name) {\n      var shader = args.shader[name];\n      if (shader) {\n        scope.set(shared.shader, '.' + name, shader.append(env, scope));\n      }\n    }\n    saveShader(S_VERT);\n    saveShader(S_FRAG);\n\n    if (Object.keys(args.state).length > 0) {\n      scope(CURRENT_STATE, '.dirty=true;');\n      scope.exit(CURRENT_STATE, '.dirty=true;');\n    }\n\n    scope('a1(', env.shared.context, ',a0,', env.batchId, ');');\n  }\n\n  function isDynamicObject (object) {\n    if (typeof object !== 'object' || isArrayLike(object)) {\n      return\n    }\n    var props = Object.keys(object);\n    for (var i = 0; i < props.length; ++i) {\n      if (dynamic.isDynamic(object[props[i]])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  function splatObject (env, options, name) {\n    var object = options.static[name];\n    if (!object || !isDynamicObject(object)) {\n      return\n    }\n\n    var globals = env.global;\n    var keys = Object.keys(object);\n    var thisDep = false;\n    var contextDep = false;\n    var propDep = false;\n    var objectRef = env.global.def('{}');\n    keys.forEach(function (key) {\n      var value = object[key];\n      if (dynamic.isDynamic(value)) {\n        if (typeof value === 'function') {\n          value = object[key] = dynamic.unbox(value);\n        }\n        var deps = createDynamicDecl(value, null);\n        thisDep = thisDep || deps.thisDep;\n        propDep = propDep || deps.propDep;\n        contextDep = contextDep || deps.contextDep;\n      } else {\n        globals(objectRef, '.', key, '=');\n        switch (typeof value) {\n          case 'number':\n            globals(value);\n            break\n          case 'string':\n            globals('\"', value, '\"');\n            break\n          case 'object':\n            if (Array.isArray(value)) {\n              globals('[', value.join(), ']');\n            }\n            break\n          default:\n            globals(env.link(value));\n            break\n        }\n        globals(';');\n      }\n    });\n\n    function appendBlock (env, block) {\n      keys.forEach(function (key) {\n        var value = object[key];\n        if (!dynamic.isDynamic(value)) {\n          return\n        }\n        var ref = env.invoke(block, value);\n        block(objectRef, '.', key, '=', ref, ';');\n      });\n    }\n\n    options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {\n      thisDep: thisDep,\n      contextDep: contextDep,\n      propDep: propDep,\n      ref: objectRef,\n      append: appendBlock\n    });\n    delete options.static[name];\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // MAIN DRAW COMMAND\n  // ===========================================================================\n  // ===========================================================================\n  function compileCommand (options, attributes, uniforms, context, stats) {\n    var env = createREGLEnvironment();\n\n    // link stats, so that we can easily access it in the program.\n    env.stats = env.link(stats);\n\n    // splat options and attributes to allow for dynamic nested properties\n    Object.keys(attributes.static).forEach(function (key) {\n      splatObject(env, attributes, key);\n    });\n    NESTED_OPTIONS.forEach(function (name) {\n      splatObject(env, options, name);\n    });\n\n    var args = parseArguments(options, attributes, uniforms, context, env);\n\n    emitDrawProc(env, args);\n    emitScopeProc(env, args);\n    emitBatchProc(env, args);\n\n    return env.compile()\n  }\n\n  // ===========================================================================\n  // ===========================================================================\n  // POLL / REFRESH\n  // ===========================================================================\n  // ===========================================================================\n  return {\n    next: nextState,\n    current: currentState,\n    procs: (function () {\n      var env = createREGLEnvironment();\n      var poll = env.proc('poll');\n      var refresh = env.proc('refresh');\n      var common = env.block();\n      poll(common);\n      refresh(common);\n\n      var shared = env.shared;\n      var GL = shared.gl;\n      var NEXT_STATE = shared.next;\n      var CURRENT_STATE = shared.current;\n\n      common(CURRENT_STATE, '.dirty=false;');\n\n      emitPollFramebuffer(env, poll);\n      emitPollFramebuffer(env, refresh, null, true);\n\n      // Refresh updates all attribute state changes\n      var extInstancing = gl.getExtension('angle_instanced_arrays');\n      var INSTANCING;\n      if (extInstancing) {\n        INSTANCING = env.link(extInstancing);\n      }\n      for (var i = 0; i < limits.maxAttributes; ++i) {\n        var BINDING = refresh.def(shared.attributes, '[', i, ']');\n        var ifte = env.cond(BINDING, '.buffer');\n        ifte.then(\n          GL, '.enableVertexAttribArray(', i, ');',\n          GL, '.bindBuffer(',\n            GL_ARRAY_BUFFER$1, ',',\n            BINDING, '.buffer.buffer);',\n          GL, '.vertexAttribPointer(',\n            i, ',',\n            BINDING, '.size,',\n            BINDING, '.type,',\n            BINDING, '.normalized,',\n            BINDING, '.stride,',\n            BINDING, '.offset);'\n        ).else(\n          GL, '.disableVertexAttribArray(', i, ');',\n          GL, '.vertexAttrib4f(',\n            i, ',',\n            BINDING, '.x,',\n            BINDING, '.y,',\n            BINDING, '.z,',\n            BINDING, '.w);',\n          BINDING, '.buffer=null;');\n        refresh(ifte);\n        if (extInstancing) {\n          refresh(\n            INSTANCING, '.vertexAttribDivisorANGLE(',\n            i, ',',\n            BINDING, '.divisor);');\n        }\n      }\n\n      Object.keys(GL_FLAGS).forEach(function (flag) {\n        var cap = GL_FLAGS[flag];\n        var NEXT = common.def(NEXT_STATE, '.', flag);\n        var block = env.block();\n        block('if(', NEXT, '){',\n          GL, '.enable(', cap, ')}else{',\n          GL, '.disable(', cap, ')}',\n          CURRENT_STATE, '.', flag, '=', NEXT, ';');\n        refresh(block);\n        poll(\n          'if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){',\n          block,\n          '}');\n      });\n\n      Object.keys(GL_VARIABLES).forEach(function (name) {\n        var func = GL_VARIABLES[name];\n        var init = currentState[name];\n        var NEXT, CURRENT;\n        var block = env.block();\n        block(GL, '.', func, '(');\n        if (isArrayLike(init)) {\n          var n = init.length;\n          NEXT = env.global.def(NEXT_STATE, '.', name);\n          CURRENT = env.global.def(CURRENT_STATE, '.', name);\n          block(\n            loop(n, function (i) {\n              return NEXT + '[' + i + ']'\n            }), ');',\n            loop(n, function (i) {\n              return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];'\n            }).join(''));\n          poll(\n            'if(', loop(n, function (i) {\n              return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']'\n            }).join('||'), '){',\n            block,\n            '}');\n        } else {\n          NEXT = common.def(NEXT_STATE, '.', name);\n          CURRENT = common.def(CURRENT_STATE, '.', name);\n          block(\n            NEXT, ');',\n            CURRENT_STATE, '.', name, '=', NEXT, ';');\n          poll(\n            'if(', NEXT, '!==', CURRENT, '){',\n            block,\n            '}');\n        }\n        refresh(block);\n      });\n\n      return env.compile()\n    })(),\n    compile: compileCommand\n  }\n}\n\nfunction stats () {\n  return {\n    bufferCount: 0,\n    elementsCount: 0,\n    framebufferCount: 0,\n    shaderCount: 0,\n    textureCount: 0,\n    cubeCount: 0,\n    renderbufferCount: 0,\n\n    maxTextureUnits: 0\n  }\n}\n\nvar GL_QUERY_RESULT_EXT = 0x8866;\nvar GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;\nvar GL_TIME_ELAPSED_EXT = 0x88BF;\n\nvar createTimer = function (gl, extensions) {\n  var extTimer = extensions.ext_disjoint_timer_query;\n\n  if (!extTimer) {\n    return null\n  }\n\n  // QUERY POOL BEGIN\n  var queryPool = [];\n  function allocQuery () {\n    return queryPool.pop() || extTimer.createQueryEXT()\n  }\n  function freeQuery (query) {\n    queryPool.push(query);\n  }\n  // QUERY POOL END\n\n  var pendingQueries = [];\n  function beginQuery (stats) {\n    var query = allocQuery();\n    extTimer.beginQueryEXT(GL_TIME_ELAPSED_EXT, query);\n    pendingQueries.push(query);\n    pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats);\n  }\n\n  function endQuery () {\n    extTimer.endQueryEXT(GL_TIME_ELAPSED_EXT);\n  }\n\n  //\n  // Pending stats pool.\n  //\n  function PendingStats () {\n    this.startQueryIndex = -1;\n    this.endQueryIndex = -1;\n    this.sum = 0;\n    this.stats = null;\n  }\n  var pendingStatsPool = [];\n  function allocPendingStats () {\n    return pendingStatsPool.pop() || new PendingStats()\n  }\n  function freePendingStats (pendingStats) {\n    pendingStatsPool.push(pendingStats);\n  }\n  // Pending stats pool end\n\n  var pendingStats = [];\n  function pushScopeStats (start, end, stats) {\n    var ps = allocPendingStats();\n    ps.startQueryIndex = start;\n    ps.endQueryIndex = end;\n    ps.sum = 0;\n    ps.stats = stats;\n    pendingStats.push(ps);\n  }\n\n  // we should call this at the beginning of the frame,\n  // in order to update gpuTime\n  var timeSum = [];\n  var queryPtr = [];\n  function update () {\n    var ptr, i;\n\n    var n = pendingQueries.length;\n    if (n === 0) {\n      return\n    }\n\n    // Reserve space\n    queryPtr.length = Math.max(queryPtr.length, n + 1);\n    timeSum.length = Math.max(timeSum.length, n + 1);\n    timeSum[0] = 0;\n    queryPtr[0] = 0;\n\n    // Update all pending timer queries\n    var queryTime = 0;\n    ptr = 0;\n    for (i = 0; i < pendingQueries.length; ++i) {\n      var query = pendingQueries[i];\n      if (extTimer.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {\n        queryTime += extTimer.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT);\n        freeQuery(query);\n      } else {\n        pendingQueries[ptr++] = query;\n      }\n      timeSum[i + 1] = queryTime;\n      queryPtr[i + 1] = ptr;\n    }\n    pendingQueries.length = ptr;\n\n    // Update all pending stat queries\n    ptr = 0;\n    for (i = 0; i < pendingStats.length; ++i) {\n      var stats = pendingStats[i];\n      var start = stats.startQueryIndex;\n      var end = stats.endQueryIndex;\n      stats.sum += timeSum[end] - timeSum[start];\n      var startPtr = queryPtr[start];\n      var endPtr = queryPtr[end];\n      if (endPtr === startPtr) {\n        stats.stats.gpuTime += stats.sum / 1e6;\n        freePendingStats(stats);\n      } else {\n        stats.startQueryIndex = startPtr;\n        stats.endQueryIndex = endPtr;\n        pendingStats[ptr++] = stats;\n      }\n    }\n    pendingStats.length = ptr;\n  }\n\n  return {\n    beginQuery: beginQuery,\n    endQuery: endQuery,\n    pushScopeStats: pushScopeStats,\n    update: update,\n    getNumPendingQueries: function () {\n      return pendingQueries.length\n    },\n    clear: function () {\n      queryPool.push.apply(queryPool, pendingQueries);\n      for (var i = 0; i < queryPool.length; i++) {\n        extTimer.deleteQueryEXT(queryPool[i]);\n      }\n      pendingQueries.length = 0;\n      queryPool.length = 0;\n    },\n    restore: function () {\n      pendingQueries.length = 0;\n      queryPool.length = 0;\n    }\n  }\n};\n\nvar GL_COLOR_BUFFER_BIT = 16384;\nvar GL_DEPTH_BUFFER_BIT = 256;\nvar GL_STENCIL_BUFFER_BIT = 1024;\n\nvar GL_ARRAY_BUFFER = 34962;\n\nvar CONTEXT_LOST_EVENT = 'webglcontextlost';\nvar CONTEXT_RESTORED_EVENT = 'webglcontextrestored';\n\nvar DYN_PROP = 1;\nvar DYN_CONTEXT = 2;\nvar DYN_STATE = 3;\n\nfunction find (haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction wrapREGL (args) {\n  var config = parseArgs(args);\n  if (!config) {\n    return null\n  }\n\n  var gl = config.gl;\n  var glAttributes = gl.getContextAttributes();\n  var contextLost = gl.isContextLost();\n\n  var extensionState = createExtensionCache(gl, config);\n  if (!extensionState) {\n    return null\n  }\n\n  var stringStore = createStringStore();\n  var stats$$1 = stats();\n  var extensions = extensionState.extensions;\n  var timer = createTimer(gl, extensions);\n\n  var START_TIME = clock();\n  var WIDTH = gl.drawingBufferWidth;\n  var HEIGHT = gl.drawingBufferHeight;\n\n  var contextState = {\n    tick: 0,\n    time: 0,\n    viewportWidth: WIDTH,\n    viewportHeight: HEIGHT,\n    framebufferWidth: WIDTH,\n    framebufferHeight: HEIGHT,\n    drawingBufferWidth: WIDTH,\n    drawingBufferHeight: HEIGHT,\n    pixelRatio: config.pixelRatio\n  };\n  var uniformState = {};\n  var drawState = {\n    elements: null,\n    primitive: 4, // GL_TRIANGLES\n    count: -1,\n    offset: 0,\n    instances: -1\n  };\n\n  var limits = wrapLimits(gl, extensions);\n  var bufferState = wrapBufferState(gl, stats$$1, config);\n  var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1);\n  var attributeState = wrapAttributeState(\n    gl,\n    extensions,\n    limits,\n    bufferState,\n    stringStore);\n  var shaderState = wrapShaderState(gl, stringStore, stats$$1, config);\n  var textureState = createTextureSet(\n    gl,\n    extensions,\n    limits,\n    function () { core.procs.poll(); },\n    contextState,\n    stats$$1,\n    config);\n  var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config);\n  var framebufferState = wrapFBOState(\n    gl,\n    extensions,\n    limits,\n    textureState,\n    renderbufferState,\n    stats$$1);\n  var core = reglCore(\n    gl,\n    stringStore,\n    extensions,\n    limits,\n    bufferState,\n    elementState,\n    textureState,\n    framebufferState,\n    uniformState,\n    attributeState,\n    shaderState,\n    drawState,\n    contextState,\n    timer,\n    config);\n  var readPixels = wrapReadPixels(\n    gl,\n    framebufferState,\n    core.procs.poll,\n    contextState,\n    glAttributes, extensions);\n\n  var nextState = core.next;\n  var canvas = gl.canvas;\n\n  var rafCallbacks = [];\n  var lossCallbacks = [];\n  var restoreCallbacks = [];\n  var destroyCallbacks = [config.onDestroy];\n\n  var activeRAF = null;\n  function handleRAF () {\n    if (rafCallbacks.length === 0) {\n      if (timer) {\n        timer.update();\n      }\n      activeRAF = null;\n      return\n    }\n\n    // schedule next animation frame\n    activeRAF = raf.next(handleRAF);\n\n    // poll for changes\n    poll();\n\n    // fire a callback for all pending rafs\n    for (var i = rafCallbacks.length - 1; i >= 0; --i) {\n      var cb = rafCallbacks[i];\n      if (cb) {\n        cb(contextState, null, 0);\n      }\n    }\n\n    // flush all pending webgl calls\n    gl.flush();\n\n    // poll GPU timers *after* gl.flush so we don't delay command dispatch\n    if (timer) {\n      timer.update();\n    }\n  }\n\n  function startRAF () {\n    if (!activeRAF && rafCallbacks.length > 0) {\n      activeRAF = raf.next(handleRAF);\n    }\n  }\n\n  function stopRAF () {\n    if (activeRAF) {\n      raf.cancel(handleRAF);\n      activeRAF = null;\n    }\n  }\n\n  function handleContextLoss (event) {\n    event.preventDefault();\n\n    // set context lost flag\n    contextLost = true;\n\n    // pause request animation frame\n    stopRAF();\n\n    // lose context\n    lossCallbacks.forEach(function (cb) {\n      cb();\n    });\n  }\n\n  function handleContextRestored (event) {\n    // clear error code\n    gl.getError();\n\n    // clear context lost flag\n    contextLost = false;\n\n    // refresh state\n    extensionState.restore();\n    shaderState.restore();\n    bufferState.restore();\n    textureState.restore();\n    renderbufferState.restore();\n    framebufferState.restore();\n    if (timer) {\n      timer.restore();\n    }\n\n    // refresh state\n    core.procs.refresh();\n\n    // restart RAF\n    startRAF();\n\n    // restore context\n    restoreCallbacks.forEach(function (cb) {\n      cb();\n    });\n  }\n\n  if (canvas) {\n    canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false);\n    canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false);\n  }\n\n  function destroy () {\n    rafCallbacks.length = 0;\n    stopRAF();\n\n    if (canvas) {\n      canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss);\n      canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored);\n    }\n\n    shaderState.clear();\n    framebufferState.clear();\n    renderbufferState.clear();\n    textureState.clear();\n    elementState.clear();\n    bufferState.clear();\n\n    if (timer) {\n      timer.clear();\n    }\n\n    destroyCallbacks.forEach(function (cb) {\n      cb();\n    });\n  }\n\n  function compileProcedure (options) {\n    check$1(!!options, 'invalid args to regl({...})');\n    check$1.type(options, 'object', 'invalid args to regl({...})');\n\n    function flattenNestedOptions (options) {\n      var result = extend({}, options);\n      delete result.uniforms;\n      delete result.attributes;\n      delete result.context;\n\n      if ('stencil' in result && result.stencil.op) {\n        result.stencil.opBack = result.stencil.opFront = result.stencil.op;\n        delete result.stencil.op;\n      }\n\n      function merge (name) {\n        if (name in result) {\n          var child = result[name];\n          delete result[name];\n          Object.keys(child).forEach(function (prop) {\n            result[name + '.' + prop] = child[prop];\n          });\n        }\n      }\n      merge('blend');\n      merge('depth');\n      merge('cull');\n      merge('stencil');\n      merge('polygonOffset');\n      merge('scissor');\n      merge('sample');\n\n      return result\n    }\n\n    function separateDynamic (object) {\n      var staticItems = {};\n      var dynamicItems = {};\n      Object.keys(object).forEach(function (option) {\n        var value = object[option];\n        if (dynamic.isDynamic(value)) {\n          dynamicItems[option] = dynamic.unbox(value, option);\n        } else {\n          staticItems[option] = value;\n        }\n      });\n      return {\n        dynamic: dynamicItems,\n        static: staticItems\n      }\n    }\n\n    // Treat context variables separate from other dynamic variables\n    var context = separateDynamic(options.context || {});\n    var uniforms = separateDynamic(options.uniforms || {});\n    var attributes = separateDynamic(options.attributes || {});\n    var opts = separateDynamic(flattenNestedOptions(options));\n\n    var stats$$1 = {\n      gpuTime: 0.0,\n      cpuTime: 0.0,\n      count: 0\n    };\n\n    var compiled = core.compile(opts, attributes, uniforms, context, stats$$1);\n\n    var draw = compiled.draw;\n    var batch = compiled.batch;\n    var scope = compiled.scope;\n\n    // FIXME: we should modify code generation for batch commands so this\n    // isn't necessary\n    var EMPTY_ARRAY = [];\n    function reserve (count) {\n      while (EMPTY_ARRAY.length < count) {\n        EMPTY_ARRAY.push(null);\n      }\n      return EMPTY_ARRAY\n    }\n\n    function REGLCommand (args, body) {\n      var i;\n      if (contextLost) {\n        check$1.raise('context lost');\n      }\n      if (typeof args === 'function') {\n        return scope.call(this, null, args, 0)\n      } else if (typeof body === 'function') {\n        if (typeof args === 'number') {\n          for (i = 0; i < args; ++i) {\n            scope.call(this, null, body, i);\n          }\n          return\n        } else if (Array.isArray(args)) {\n          for (i = 0; i < args.length; ++i) {\n            scope.call(this, args[i], body, i);\n          }\n          return\n        } else {\n          return scope.call(this, args, body, 0)\n        }\n      } else if (typeof args === 'number') {\n        if (args > 0) {\n          return batch.call(this, reserve(args | 0), args | 0)\n        }\n      } else if (Array.isArray(args)) {\n        if (args.length) {\n          return batch.call(this, args, args.length)\n        }\n      } else {\n        return draw.call(this, args)\n      }\n    }\n\n    return extend(REGLCommand, {\n      stats: stats$$1\n    })\n  }\n\n  var setFBO = framebufferState.setFBO = compileProcedure({\n    framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')\n  });\n\n  function clearImpl (_, options) {\n    var clearFlags = 0;\n    core.procs.poll();\n\n    var c = options.color;\n    if (c) {\n      gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0);\n      clearFlags |= GL_COLOR_BUFFER_BIT;\n    }\n    if ('depth' in options) {\n      gl.clearDepth(+options.depth);\n      clearFlags |= GL_DEPTH_BUFFER_BIT;\n    }\n    if ('stencil' in options) {\n      gl.clearStencil(options.stencil | 0);\n      clearFlags |= GL_STENCIL_BUFFER_BIT;\n    }\n\n    check$1(!!clearFlags, 'called regl.clear with no buffer specified');\n    gl.clear(clearFlags);\n  }\n\n  function clear (options) {\n    check$1(\n      typeof options === 'object' && options,\n      'regl.clear() takes an object as input');\n    if ('framebuffer' in options) {\n      if (options.framebuffer &&\n          options.framebuffer_reglType === 'framebufferCube') {\n        for (var i = 0; i < 6; ++i) {\n          setFBO(extend({\n            framebuffer: options.framebuffer.faces[i]\n          }, options), clearImpl);\n        }\n      } else {\n        setFBO(options, clearImpl);\n      }\n    } else {\n      clearImpl(null, options);\n    }\n  }\n\n  function frame (cb) {\n    check$1.type(cb, 'function', 'regl.frame() callback must be a function');\n    rafCallbacks.push(cb);\n\n    function cancel () {\n      // FIXME:  should we check something other than equals cb here?\n      // what if a user calls frame twice with the same callback...\n      //\n      var i = find(rafCallbacks, cb);\n      check$1(i >= 0, 'cannot cancel a frame twice');\n      function pendingCancel () {\n        var index = find(rafCallbacks, pendingCancel);\n        rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1];\n        rafCallbacks.length -= 1;\n        if (rafCallbacks.length <= 0) {\n          stopRAF();\n        }\n      }\n      rafCallbacks[i] = pendingCancel;\n    }\n\n    startRAF();\n\n    return {\n      cancel: cancel\n    }\n  }\n\n  // poll viewport\n  function pollViewport () {\n    var viewport = nextState.viewport;\n    var scissorBox = nextState.scissor_box;\n    viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0;\n    contextState.viewportWidth =\n      contextState.framebufferWidth =\n      contextState.drawingBufferWidth =\n      viewport[2] =\n      scissorBox[2] = gl.drawingBufferWidth;\n    contextState.viewportHeight =\n      contextState.framebufferHeight =\n      contextState.drawingBufferHeight =\n      viewport[3] =\n      scissorBox[3] = gl.drawingBufferHeight;\n  }\n\n  function poll () {\n    contextState.tick += 1;\n    contextState.time = now();\n    pollViewport();\n    core.procs.poll();\n  }\n\n  function refresh () {\n    pollViewport();\n    core.procs.refresh();\n    if (timer) {\n      timer.update();\n    }\n  }\n\n  function now () {\n    return (clock() - START_TIME) / 1000.0\n  }\n\n  refresh();\n\n  function addListener (event, callback) {\n    check$1.type(callback, 'function', 'listener callback must be a function');\n\n    var callbacks;\n    switch (event) {\n      case 'frame':\n        return frame(callback)\n      case 'lost':\n        callbacks = lossCallbacks;\n        break\n      case 'restore':\n        callbacks = restoreCallbacks;\n        break\n      case 'destroy':\n        callbacks = destroyCallbacks;\n        break\n      default:\n        check$1.raise('invalid event, must be one of frame,lost,restore,destroy');\n    }\n\n    callbacks.push(callback);\n    return {\n      cancel: function () {\n        for (var i = 0; i < callbacks.length; ++i) {\n          if (callbacks[i] === callback) {\n            callbacks[i] = callbacks[callbacks.length - 1];\n            callbacks.pop();\n            return\n          }\n        }\n      }\n    }\n  }\n\n  var regl = extend(compileProcedure, {\n    // Clear current FBO\n    clear: clear,\n\n    // Short cuts for dynamic variables\n    prop: dynamic.define.bind(null, DYN_PROP),\n    context: dynamic.define.bind(null, DYN_CONTEXT),\n    this: dynamic.define.bind(null, DYN_STATE),\n\n    // executes an empty draw command\n    draw: compileProcedure({}),\n\n    // Resources\n    buffer: function (options) {\n      return bufferState.create(options, GL_ARRAY_BUFFER, false, false)\n    },\n    elements: function (options) {\n      return elementState.create(options, false)\n    },\n    texture: textureState.create2D,\n    cube: textureState.createCube,\n    renderbuffer: renderbufferState.create,\n    framebuffer: framebufferState.create,\n    framebufferCube: framebufferState.createCube,\n\n    // Expose context attributes\n    attributes: glAttributes,\n\n    // Frame rendering\n    frame: frame,\n    on: addListener,\n\n    // System limits\n    limits: limits,\n    hasExtension: function (name) {\n      return limits.extensions.indexOf(name.toLowerCase()) >= 0\n    },\n\n    // Read pixels\n    read: readPixels,\n\n    // Destroy regl and all associated resources\n    destroy: destroy,\n\n    // Direct GL state manipulation\n    _gl: gl,\n    _refresh: refresh,\n\n    poll: function () {\n      poll();\n      if (timer) {\n        timer.update();\n      }\n    },\n\n    // Current time\n    now: now,\n\n    // regl Statistics Information\n    stats: stats$$1\n  });\n\n  config.onDone(null, regl);\n\n  return regl\n}\n\nreturn wrapREGL;\n\n})));\n//# sourceMappingURL=regl.js.map\n","import regl from 'regl'\nimport {Rect, Vec2, AffineTransform} from './math'\nimport {Color} from './color'\n\nexport class RectangleBatch {\n  private rectCapacity = 1000\n  private rectCount = 0\n\n  private configSpaceOffsets = new Float32Array(this.rectCapacity * 2)\n  private configSpaceSizes = new Float32Array(this.rectCapacity * 2)\n  private colors = new Float32Array(this.rectCapacity * 3)\n\n  constructor(private gl: regl.Instance) {}\n\n  getRectCount() {\n    return this.rectCount\n  }\n\n  private configSpaceOffsetBuffer: regl.Buffer | null = null\n  getConfigSpaceOffsetBuffer() {\n    if (!this.configSpaceOffsetBuffer)\n      this.configSpaceOffsetBuffer = this.gl.buffer(this.configSpaceOffsets)\n    return this.configSpaceOffsetBuffer\n  }\n\n  private configSpaceSizeBuffer: regl.Buffer | null = null\n  getConfigSpaceSizeBuffer() {\n    if (!this.configSpaceSizeBuffer)\n      this.configSpaceSizeBuffer = this.gl.buffer(this.configSpaceSizes)\n    return this.configSpaceSizeBuffer\n  }\n\n  private colorBuffer: regl.Buffer | null = null\n  getColorBuffer() {\n    if (!this.colorBuffer) this.colorBuffer = this.gl.buffer(this.colors)\n    return this.colorBuffer\n  }\n\n  uploadToGPU() {\n    this.getConfigSpaceOffsetBuffer()\n    this.getConfigSpaceSizeBuffer()\n    this.getColorBuffer()\n  }\n\n  addRect(rect: Rect, color: Color) {\n    const index = this.rectCount++\n    if (index >= this.rectCapacity) {\n      // Not enough capacity, time to resize! We'll double the capacity each time.\n      this.rectCapacity *= 2\n      const configSpaceOffsets = new Float32Array(this.rectCapacity * 2)\n      const configSpaceSizes = new Float32Array(this.rectCapacity * 2)\n      const colors = new Float32Array(this.rectCapacity * 3)\n\n      configSpaceOffsets.set(this.configSpaceOffsets)\n      configSpaceSizes.set(this.configSpaceSizes)\n      colors.set(this.colors)\n\n      this.configSpaceOffsets = configSpaceOffsets\n      this.configSpaceSizes = configSpaceSizes\n      this.colors = colors\n    }\n    this.configSpaceOffsets[index * 2] = rect.origin.x\n    this.configSpaceOffsets[index * 2 + 1] = rect.origin.y\n\n    this.configSpaceSizes[index * 2] = rect.size.x\n    this.configSpaceSizes[index * 2 + 1] = rect.size.y\n\n    this.colors[index * 3] = color.r\n    this.colors[index * 3 + 1] = color.g\n    this.colors[index * 3 + 2] = color.b\n  }\n}\n\nexport interface RectangleBatchRendererProps {\n  batch: RectangleBatch\n  configSpaceSrcRect: Rect\n  physicalSpaceDstRect: Rect\n  parityMin?: number\n  parityOffset?: number\n}\n\nexport class RectangleBatchRenderer {\n  private command: regl.Command<RectangleBatchRendererProps>\n  constructor(gl: regl.Instance) {\n    // We draw the parity / 5 into the depth channel so it can be used in a\n    // post-processing step to draw boundaries between rectangles. We use 5\n    // different values (2 per row) + one for the background, so we can\n    // distingish both between adjacent rectangles on a row and between rows!\n    this.command = gl({\n      vert: `\n      uniform mat3 configSpaceToNDC;\n\n      // Non-instanced\n      attribute vec2 corner;\n\n      // Instanced\n      attribute vec2 configSpaceOffset;\n      attribute vec2 configSpaceSize;\n      attribute vec3 color;\n      attribute float index;\n\n      varying vec3 vColor;\n\n      void main() {\n        vColor = color;\n        vec2 configSpacePos = configSpaceOffset + corner * configSpaceSize;\n        vec2 position = (configSpaceToNDC * vec3(configSpacePos, 1)).xy;\n        gl_Position = vec4(position, 1, 1);\n      }\n    `,\n\n      depth: {\n        enable: false,\n      },\n\n      frag: `\n      precision mediump float;\n      varying vec3 vColor;\n      varying float vParity;\n\n      void main() {\n        gl_FragColor = vec4(vColor.rgb, 1);\n      }\n    `,\n\n      attributes: {\n        // Non-instanced attributes\n        corner: gl.buffer([[0, 0], [1, 0], [0, 1], [1, 1]]),\n\n        // Instanced attributes\n        configSpaceOffset: (context, props) => {\n          return {\n            buffer: props.batch.getConfigSpaceOffsetBuffer(),\n            offset: 0,\n            stride: 2 * 4,\n            size: 2,\n            divisor: 1,\n          }\n        },\n        configSpaceSize: (context, props) => {\n          return {\n            buffer: props.batch.getConfigSpaceSizeBuffer(),\n            offset: 0,\n            stride: 2 * 4,\n            size: 2,\n            divisor: 1,\n          }\n        },\n        color: (context, props) => {\n          return {\n            buffer: props.batch.getColorBuffer(),\n            offset: 0,\n            stride: 3 * 4,\n            size: 3,\n            divisor: 1,\n          }\n        },\n      },\n\n      uniforms: {\n        configSpaceToNDC: (context, props) => {\n          const configToPhysical = AffineTransform.betweenRects(\n            props.configSpaceSrcRect,\n            props.physicalSpaceDstRect,\n          )\n\n          const viewportSize = new Vec2(context.viewportWidth, context.viewportHeight)\n\n          const physicalToNDC = AffineTransform.withTranslation(new Vec2(-1, 1)).times(\n            AffineTransform.withScale(new Vec2(2, -2).dividedByPointwise(viewportSize)),\n          )\n\n          return physicalToNDC.times(configToPhysical).flatten()\n        },\n\n        parityOffset: (context, props) => {\n          return props.parityOffset == null ? 0 : props.parityOffset\n        },\n\n        parityMin: (context, props) => {\n          return props.parityMin == null ? 0 : 1 + props.parityMin\n        },\n      },\n\n      instances: (context, props) => {\n        return props.batch.getRectCount()\n      },\n\n      count: 4,\n\n      primitive: 'triangle strip',\n    })\n  }\n\n  render(props: RectangleBatchRendererProps) {\n    this.command(props)\n  }\n\n  resetStats() {\n    return Object.assign(this.command.stats, {cpuTime: 0, gpuTime: 0, count: 0})\n  }\n  stats() {\n    return this.command.stats\n  }\n}\n","import regl from 'regl'\nimport {AffineTransform, Rect} from './math'\n\nexport interface ViewportRectangleRendererProps {\n  configSpaceToPhysicalViewSpace: AffineTransform\n  configSpaceViewportRect: Rect\n}\n\nexport class ViewportRectangleRenderer {\n  private command: regl.Command<ViewportRectangleRendererProps>\n  constructor(regl: regl.Instance) {\n    this.command = regl<ViewportRectangleRendererProps>({\n      vert: `\n        attribute vec2 position;\n\n        void main() {\n          gl_Position = vec4(position, 0, 1);\n        }\n      `,\n\n      frag: `\n        precision mediump float;\n\n        uniform mat3 configSpaceToPhysicalViewSpace;\n        uniform vec2 physicalSize;\n        uniform vec2 physicalOrigin;\n        uniform vec2 configSpaceViewportOrigin;\n        uniform vec2 configSpaceViewportSize;\n        uniform float framebufferHeight;\n\n        void main() {\n          vec2 origin = (configSpaceToPhysicalViewSpace * vec3(configSpaceViewportOrigin, 1.0)).xy;\n          vec2 size = (configSpaceToPhysicalViewSpace * vec3(configSpaceViewportSize, 0.0)).xy;\n\n          vec2 halfSize = physicalSize / 2.0;\n\n          float borderWidth = 2.0;\n\n          origin = floor(origin * halfSize) / halfSize + borderWidth * vec2(1.0, 1.0);\n          size = floor(size * halfSize) / halfSize - 2.0 * borderWidth * vec2(1.0, 1.0);\n\n          vec2 coord = gl_FragCoord.xy;\n          coord.x = coord.x - physicalOrigin.x;\n          coord.y = framebufferHeight - coord.y - physicalOrigin.y;\n          vec2 clamped = clamp(coord, origin, origin + size);\n          vec2 gap = clamped - coord;\n          float maxdist = max(abs(gap.x), abs(gap.y));\n\n          // TOOD(jlfwong): Could probably optimize this to use mix somehow.\n          if (maxdist == 0.0) {\n            // Inside viewport rectangle\n            gl_FragColor = vec4(0, 0, 0, 0);\n          } else if (maxdist < borderWidth) {\n            // Inside viewport rectangle at border\n            gl_FragColor = vec4(0.7, 0.7, 0.7, 0.8);\n          } else {\n            // Outside viewport rectangle\n            gl_FragColor = vec4(0.7, 0.7, 0.7, 0.5);\n          }\n        }\n      `,\n\n      blend: {\n        enable: true,\n        func: {\n          srcRGB: 'src alpha',\n          srcAlpha: 'one',\n          dstRGB: 'one minus src alpha',\n          dstAlpha: 'one',\n        },\n      },\n\n      depth: {\n        enable: false,\n      },\n\n      attributes: {\n        // Cover full canvas with a rectangle\n        // with 2 triangles using a triangle\n        // strip.\n        //\n        // 0 +--+ 1\n        //   | /|\n        //   |/ |\n        // 2 +--+ 3\n        position: [[-1, 1], [1, 1], [-1, -1], [1, -1]],\n      },\n\n      uniforms: {\n        configSpaceToPhysicalViewSpace: (context, props) => {\n          return props.configSpaceToPhysicalViewSpace.flatten()\n        },\n        configSpaceViewportOrigin: (context, props) => {\n          return props.configSpaceViewportRect.origin.flatten()\n        },\n        configSpaceViewportSize: (context, props) => {\n          return props.configSpaceViewportRect.size.flatten()\n        },\n        physicalSize: (context, props) => {\n          return [context.viewportWidth, context.viewportHeight]\n        },\n        physicalOrigin: (context, props) => {\n          return [context.viewportX, context.viewportY]\n        },\n        framebufferHeight: (context, props) => {\n          return context.framebufferHeight\n        },\n      },\n\n      primitive: 'triangle strip',\n\n      count: 4,\n    })\n  }\n\n  render(props: ViewportRectangleRendererProps) {\n    this.command(props)\n  }\n\n  resetStats() {\n    return Object.assign(this.command.stats, {cpuTime: 0, gpuTime: 0, count: 0})\n  }\n  stats() {\n    return this.command.stats\n  }\n}\n","import regl from 'regl'\nimport {Vec2, Rect, AffineTransform} from './math'\n\nexport interface TextureRendererProps {\n  texture: regl.Texture\n  srcRect: Rect\n  dstRect: Rect\n}\n\nexport class TextureRenderer {\n  private command: regl.Command<TextureRendererProps>\n  constructor(gl: regl.Instance) {\n    this.command = gl({\n      vert: `\n        uniform mat3 uvTransform;\n        uniform mat3 positionTransform;\n\n        attribute vec2 position;\n        attribute vec2 uv;\n        varying vec2 vUv;\n\n        void main() {\n          vUv = (uvTransform * vec3(uv, 1)).xy;\n          gl_Position = vec4((positionTransform * vec3(position, 1)).xy, 0, 1);\n        }\n      `,\n      frag: `\n        precision mediump float;\n\n        varying vec2 vUv;\n        uniform sampler2D texture;\n\n        void main() {\n          gl_FragColor = texture2D(texture, vUv);\n        }\n      `,\n\n      depth: {\n        enable: false,\n      },\n\n      attributes: {\n        // Cover full canvas with a rectangle\n        // with 2 triangles using a triangle\n        // strip.\n        //\n        // 0 +--+ 1\n        //   | /|\n        //   |/ |\n        // 2 +--+ 3\n        position: gl.buffer([[-1, 1], [1, 1], [-1, -1], [1, -1]]),\n        uv: gl.buffer([[0, 1], [1, 1], [0, 0], [1, 0]]),\n      },\n\n      uniforms: {\n        texture: (context, props) => props.texture,\n        uvTransform: (context, props) => {\n          const {srcRect, texture} = props\n          const physicalToUV = AffineTransform.withTranslation(new Vec2(0, 1))\n            .times(AffineTransform.withScale(new Vec2(1, -1)))\n            .times(\n              AffineTransform.betweenRects(\n                new Rect(Vec2.zero, new Vec2(texture.width, texture.height)),\n                Rect.unit,\n              ),\n            )\n          const uvRect = physicalToUV.transformRect(srcRect)\n          return AffineTransform.betweenRects(Rect.unit, uvRect).flatten()\n        },\n        positionTransform: (context, props) => {\n          const {dstRect} = props\n\n          const viewportSize = new Vec2(context.viewportWidth, context.viewportHeight)\n\n          const physicalToNDC = AffineTransform.withScale(new Vec2(1, -1)).times(\n            AffineTransform.betweenRects(new Rect(Vec2.zero, viewportSize), Rect.NDC),\n          )\n          const ndcRect = physicalToNDC.transformRect(dstRect)\n          return AffineTransform.betweenRects(Rect.NDC, ndcRect).flatten()\n        },\n      },\n\n      primitive: 'triangle strip',\n\n      count: 4,\n    })\n  }\n\n  render(props: TextureRendererProps) {\n    this.command(props)\n  }\n\n  resetStats() {\n    return Object.assign(this.command.stats, {cpuTime: 0, gpuTime: 0, count: 0})\n  }\n  stats() {\n    return this.command.stats\n  }\n}\n\nexport interface TextureCachedRendererOptions<T> {\n  textureRenderer: TextureRenderer\n  render(t: T): void\n  shouldUpdate(oldProps: T, newProps: T): boolean\n}\n\nexport class TextureCachedRenderer<T> {\n  private renderUncached: (t: T) => void\n  private shouldUpdate: (oldProps: T, newProps: T) => boolean\n  private texture: regl.Texture\n  private framebuffer: regl.Framebuffer\n  private textureRenderer: TextureRenderer\n  private withContext: regl.Command<{}>\n\n  constructor(private gl: regl.Instance, options: TextureCachedRendererOptions<T>) {\n    this.renderUncached = options.render\n    this.shouldUpdate = options.shouldUpdate\n    this.textureRenderer = options.textureRenderer\n\n    this.texture = gl.texture(1, 1)\n    this.framebuffer = gl.framebuffer({color: [this.texture]})\n    this.withContext = gl({})\n  }\n\n  private lastRenderProps: T | null = null\n\n  private dirty: boolean = false\n  setDirty() {\n    this.dirty = true\n  }\n\n  render(props: T) {\n    this.withContext((context: regl.Context) => {\n      let needsRender = false\n      if (\n        this.texture.width !== context.viewportWidth ||\n        this.texture.height !== context.viewportHeight\n      ) {\n        // TODO(jlfwong): Can probably just use this.framebuffer.resize\n        this.texture({width: context.viewportWidth, height: context.viewportHeight})\n        this.framebuffer({color: [this.texture]})\n        needsRender = true\n      } else if (this.lastRenderProps == null) {\n        needsRender = true\n      } else if (this.shouldUpdate(this.lastRenderProps, props)) {\n        needsRender = true\n      } else if (this.dirty) {\n        needsRender = true\n      }\n\n      if (needsRender) {\n        this.gl({\n          viewport: (context, props) => {\n            return {\n              x: 0,\n              y: 0,\n              width: context.viewportWidth,\n              height: context.viewportHeight,\n            }\n          },\n          framebuffer: this.framebuffer,\n        })(() => {\n          this.gl.clear({color: [0, 0, 0, 0]})\n          this.renderUncached(props)\n        })\n      }\n\n      const glViewportRect = new Rect(\n        Vec2.zero,\n        new Vec2(context.viewportWidth, context.viewportHeight),\n      )\n\n      // Render from texture\n      this.textureRenderer.render({\n        texture: this.texture,\n        srcRect: glViewportRect,\n        dstRect: glViewportRect,\n      })\n      this.lastRenderProps = props\n      this.dirty = false\n    })\n  }\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n * Heavily modified port of https://github.com/mrdoob/stats.js\n */\n\nexport class StatsPanel {\n  private container: HTMLElement = document.createElement('div')\n  private shown: number = 0\n  private panels: Panel[] = []\n  private msPanel: Panel = new Panel('MS', '#0f0', '#020')\n  private fpsPanel: Panel = new Panel('FPS', '#0ff', '#002')\n\n  constructor() {\n    this.container.style.cssText = `\n      position:fixed;\n      bottom:0;\n      right:0;\n      cursor:pointer;\n      opacity:0.9;\n      z-index:10000\n    `\n    this.container.addEventListener('click', () => {\n      this.showPanel((this.shown + 1) % this.panels.length)\n    })\n    this.addPanel(this.msPanel)\n    this.addPanel(this.fpsPanel)\n    document.body.appendChild(this.container)\n  }\n\n  addPanel(panel: Panel) {\n    panel.appendTo(this.container)\n    this.panels.push(panel)\n    this.showPanel(this.panels.length - 1)\n  }\n\n  showPanel(id: number) {\n    for (var i = 0; i < this.container.children.length; i++) {\n      ;(this.container.children[i] as HTMLElement).style.display = i === id ? 'block' : 'none'\n    }\n    this.shown = id\n  }\n\n  private beginTime: number = 0\n  begin() {\n    this.beginTime = (performance || Date).now()\n  }\n\n  private frames = 0\n  private prevTime = 0\n  end() {\n    this.frames++\n    var time = (performance || Date).now()\n    this.msPanel.update(time - this.beginTime, 200)\n\n    if (time >= this.prevTime + 1000) {\n      this.fpsPanel.update(this.frames * 1000 / (time - this.prevTime), 100)\n      this.prevTime = time\n      this.frames = 0\n    }\n  }\n}\n\nconst PR = Math.round(window.devicePixelRatio || 1)\n\nclass Panel {\n  private min: number = Infinity\n  private max: number = 0\n  private canvas: HTMLCanvasElement = document.createElement('canvas')\n  private context = this.canvas.getContext('2d')!\n  private WIDTH = 80 * PR\n  private HEIGHT = 48 * PR\n  private TEXT_X = 3 * PR\n  private TEXT_Y = 2 * PR\n  private GRAPH_X = 3 * PR\n  private GRAPH_Y = 15 * PR\n  private GRAPH_WIDTH = 74 * PR\n  private GRAPH_HEIGHT = 30 * PR\n\n  constructor(private name: string, private fg: string, private bg: string) {\n    this.canvas.width = this.WIDTH\n    this.canvas.height = this.HEIGHT\n    this.canvas.style.cssText = 'width:80px;height:48px'\n\n    this.context.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif'\n    this.context.textBaseline = 'top'\n    this.context.fillStyle = bg\n    this.context.fillRect(0, 0, this.WIDTH, this.HEIGHT)\n    this.context.fillStyle = fg\n    this.context.fillText(this.name, this.TEXT_X, this.TEXT_Y)\n    this.context.fillRect(this.GRAPH_X, this.GRAPH_Y, this.GRAPH_WIDTH, this.GRAPH_HEIGHT)\n    this.context.fillStyle = bg\n    this.context.globalAlpha = 0.9\n    this.context.fillRect(this.GRAPH_X, this.GRAPH_Y, this.GRAPH_WIDTH, this.GRAPH_HEIGHT)\n  }\n\n  appendTo(el: HTMLElement) {\n    el.appendChild(this.canvas)\n  }\n\n  update(value: number, maxValue: number) {\n    this.min = Math.min(this.min, value)\n    this.max = Math.max(this.max, value)\n\n    this.context.fillStyle = this.bg\n    this.context.globalAlpha = 1\n    this.context.fillRect(0, 0, this.WIDTH, this.GRAPH_Y)\n    this.context.fillStyle = this.fg\n    this.context.fillText(\n      Math.round(value) +\n        ' ' +\n        name +\n        ' (' +\n        Math.round(this.min) +\n        '-' +\n        Math.round(this.max) +\n        ')',\n      this.TEXT_X,\n      this.TEXT_Y,\n    )\n    this.context.drawImage(\n      this.canvas,\n      this.GRAPH_X + PR,\n      this.GRAPH_Y,\n      this.GRAPH_WIDTH - PR,\n      this.GRAPH_HEIGHT,\n      this.GRAPH_X,\n      this.GRAPH_Y,\n      this.GRAPH_WIDTH - PR,\n      this.GRAPH_HEIGHT,\n    )\n    this.context.fillRect(this.GRAPH_X + this.GRAPH_WIDTH - PR, this.GRAPH_Y, PR, this.GRAPH_HEIGHT)\n    this.context.fillStyle = this.bg\n    this.context.globalAlpha = 0.9\n    this.context.fillRect(\n      this.GRAPH_X + this.GRAPH_WIDTH - PR,\n      this.GRAPH_Y,\n      PR,\n      Math.round((1 - value / maxValue) * this.GRAPH_HEIGHT),\n    )\n  }\n}\n","import regl from 'regl'\nimport {Vec2, Rect, AffineTransform} from './math'\n\nexport interface FlamechartColorPassRenderProps {\n  rectInfoTexture: regl.Texture\n  renderOutlines: boolean\n  srcRect: Rect\n  dstRect: Rect\n}\nexport class FlamechartColorPassRenderer {\n  private command: regl.Command<FlamechartColorPassRenderProps>\n  constructor(gl: regl.Instance) {\n    this.command = gl({\n      vert: `\n        uniform mat3 uvTransform;\n        uniform mat3 positionTransform;\n\n        attribute vec2 position;\n        attribute vec2 uv;\n        varying vec2 vUv;\n\n        void main() {\n          vUv = (uvTransform * vec3(uv, 1)).xy;\n          gl_Position = vec4((positionTransform * vec3(position, 1)).xy, 0, 1);\n        }\n      `,\n\n      frag: `\n        precision mediump float;\n\n        uniform vec2 uvSpacePixelSize;\n        uniform float renderOutlines;\n\n        varying vec2 vUv;\n        uniform sampler2D colorTexture;\n\n        // https://en.wikipedia.org/wiki/HSL_and_HSV#From_luma/chroma/hue\n        vec3 hcl2rgb(float H, float C, float L) {\n          float hPrime = H / 60.0;\n          float X = C * (1.0 - abs(mod(hPrime, 2.0) - 1.0));\n          vec3 RGB =\n            hPrime < 1.0 ? vec3(C, X, 0) :\n            hPrime < 2.0 ? vec3(X, C, 0) :\n            hPrime < 3.0 ? vec3(0, C, X) :\n            hPrime < 4.0 ? vec3(0, X, C) :\n            hPrime < 5.0 ? vec3(X, 0, C) :\n            vec3(C, 0, X);\n\n          float m = L - dot(RGB, vec3(0.30, 0.59, 0.11));\n          return RGB + vec3(m, m, m);\n        }\n\n        float triangle(float x) {\n          return 2.0 * abs(fract(x) - 0.5) - 1.0;\n        }\n\n        vec3 colorForBucket(float t) {\n          float x = triangle(30.0 * t);\n          float H = 360.0 * (0.9 * t);\n          float C = 0.25 + 0.2 * x;\n          float L = 0.80 - 0.15 * x;\n          return hcl2rgb(H, C, L);\n        }\n\n        void main() {\n          vec4 here = texture2D(colorTexture, vUv);\n\n          if (here.z == 0.0) {\n            // Background color\n            gl_FragColor = vec4(0, 0, 0, 0);\n            return;\n          }\n\n          // Sample the 4 surrounding pixels in the depth texture to determine\n          // if we should draw a boundary here or not.\n          vec4 N = texture2D(colorTexture, vUv + vec2(0, uvSpacePixelSize.y));\n          vec4 E = texture2D(colorTexture, vUv + vec2(uvSpacePixelSize.x, 0));\n          vec4 S = texture2D(colorTexture, vUv + vec2(0, -uvSpacePixelSize.y));\n          vec4 W = texture2D(colorTexture, vUv + vec2(-uvSpacePixelSize.x, 0));\n\n          // NOTE: For outline checks, we intentionally check both the right\n          // and the left to determine if we're an edge. If a rectangle is a single\n          // pixel wide, we don't want to render it as an outline, so this method\n          // of checking ensures that we don't outline single physical-space\n          // pixel width rectangles.\n          if (\n            renderOutlines > 0.0 &&\n            (\n              here.y == N.y && here.y != S.y || // Top edge\n              here.y == S.y && here.y != N.y || // Bottom edge\n              here.x == E.x && here.x != W.x || // Left edge\n              here.x == W.x && here.x != E.x\n            )\n          ) {\n            // We're on an edge! Draw transparent.\n            gl_FragColor = vec4(0, 0, 0, 0);\n          } else {\n            // Not on an edge. Draw the appropriate color;\n            gl_FragColor = vec4(colorForBucket(here.z), here.a);\n          }\n        }\n      `,\n\n      depth: {\n        enable: false,\n      },\n\n      attributes: {\n        // Cover full canvas with a rectangle\n        // with 2 triangles using a triangle\n        // strip.\n        //\n        // 0 +--+ 1\n        //   | /|\n        //   |/ |\n        // 2 +--+ 3\n        position: gl.buffer([[-1, 1], [1, 1], [-1, -1], [1, -1]]),\n        uv: gl.buffer([[0, 1], [1, 1], [0, 0], [1, 0]]),\n      },\n\n      count: 4,\n\n      primitive: 'triangle strip',\n\n      uniforms: {\n        colorTexture: (context, props) => props.rectInfoTexture,\n        uvTransform: (context, props) => {\n          const {srcRect, rectInfoTexture} = props\n          const physicalToUV = AffineTransform.withTranslation(new Vec2(0, 1))\n            .times(AffineTransform.withScale(new Vec2(1, -1)))\n            .times(\n              AffineTransform.betweenRects(\n                new Rect(Vec2.zero, new Vec2(rectInfoTexture.width, rectInfoTexture.height)),\n                Rect.unit,\n              ),\n            )\n          const uvRect = physicalToUV.transformRect(srcRect)\n          return AffineTransform.betweenRects(Rect.unit, uvRect).flatten()\n        },\n        renderOutlines: (context, props) => {\n          return props.renderOutlines ? 1.0 : 0.0\n        },\n        uvSpacePixelSize: (context, props) => {\n          return Vec2.unit\n            .dividedByPointwise(new Vec2(props.rectInfoTexture.width, props.rectInfoTexture.height))\n            .flatten()\n        },\n        positionTransform: (context, props) => {\n          const {dstRect} = props\n          const viewportSize = new Vec2(context.viewportWidth, context.viewportHeight)\n\n          const physicalToNDC = AffineTransform.withScale(new Vec2(1, -1)).times(\n            AffineTransform.betweenRects(new Rect(Vec2.zero, viewportSize), Rect.NDC),\n          )\n          const ndcRect = physicalToNDC.transformRect(dstRect)\n          return AffineTransform.betweenRects(Rect.NDC, ndcRect).flatten()\n        },\n      },\n    })\n  }\n\n  render(props: FlamechartColorPassRenderProps) {\n    this.command(props)\n  }\n}\n","import regl from 'regl'\nimport {\n  RectangleBatchRenderer,\n  RectangleBatch,\n  RectangleBatchRendererProps,\n} from './rectangle-batch-renderer'\nimport {\n  ViewportRectangleRenderer,\n  ViewportRectangleRendererProps,\n} from './overlay-rectangle-renderer'\nimport {\n  TextureCachedRenderer,\n  TextureRenderer,\n  TextureRendererProps,\n} from './texture-cached-renderer'\nimport {StatsPanel} from './stats'\n\nimport {Vec2, Rect} from './math'\nimport {\n  FlamechartColorPassRenderer,\n  FlamechartColorPassRenderProps,\n} from './flamechart-color-pass-renderer'\n\ntype FrameCallback = () => void\n\ninterface SetViewportScopeProps {\n  physicalBounds: Rect\n}\n\nexport class CanvasContext {\n  public gl: regl.Instance\n  private rectangleBatchRenderer: RectangleBatchRenderer\n  private viewportRectangleRenderer: ViewportRectangleRenderer\n  private textureRenderer: TextureRenderer\n  private flamechartColorPassRenderer: FlamechartColorPassRenderer\n  private setViewportScope: regl.Command<{physicalBounds: Rect}>\n  private setScissor: regl.Command<{}>\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.gl = regl({\n      canvas: canvas,\n      attributes: {\n        antialias: false,\n      },\n      extensions: ['ANGLE_instanced_arrays', 'WEBGL_depth_texture'],\n      optionalExtensions: ['EXT_disjoint_timer_query'],\n      profile: true,\n    })\n    ;(window as any)['CanvasContext'] = this\n    this.rectangleBatchRenderer = new RectangleBatchRenderer(this.gl)\n    this.viewportRectangleRenderer = new ViewportRectangleRenderer(this.gl)\n    this.textureRenderer = new TextureRenderer(this.gl)\n    this.flamechartColorPassRenderer = new FlamechartColorPassRenderer(this.gl)\n    this.setScissor = this.gl({scissor: {enable: true}})\n    this.setViewportScope = this.gl<SetViewportScopeProps>({\n      context: {\n        viewportX: (context: regl.Context, props: SetViewportScopeProps) => {\n          return props.physicalBounds.left()\n        },\n        viewportY: (context: regl.Context, props: SetViewportScopeProps) => {\n          return props.physicalBounds.top()\n        },\n      },\n      viewport: (context, props) => {\n        const {physicalBounds} = props\n        return {\n          x: physicalBounds.left(),\n          y:\n            window.devicePixelRatio * window.innerHeight -\n            physicalBounds.top() -\n            physicalBounds.height(),\n          width: physicalBounds.width(),\n          height: physicalBounds.height(),\n        }\n      },\n      scissor: (context, props) => {\n        const {physicalBounds} = props\n        return {\n          enable: true,\n          box: {\n            x: physicalBounds.left(),\n            y:\n              window.devicePixelRatio * window.innerHeight -\n              physicalBounds.top() -\n              physicalBounds.height(),\n            width: physicalBounds.width(),\n            height: physicalBounds.height(),\n          },\n        }\n      },\n    })\n  }\n\n  private tick: regl.Tick | null = null\n  private tickNeeded: boolean = false\n  private beforeFrameHandlers = new Set<FrameCallback>()\n  addBeforeFrameHandler(callback: FrameCallback) {\n    this.beforeFrameHandlers.add(callback)\n  }\n  removeBeforeFrameHandler(callback: FrameCallback) {\n    this.beforeFrameHandlers.delete(callback)\n  }\n  requestFrame() {\n    this.tickNeeded = true\n    if (!this.tick) {\n      this.tick = this.gl.frame(this.onBeforeFrame)\n    }\n  }\n\n  private perfDebug = window.location.href.indexOf('perf-debug=1') !== -1\n  private statsPanel: StatsPanel | null = this.perfDebug ? new StatsPanel() : null\n\n  private onBeforeFrame = (context: regl.Context) => {\n    this.setScissor(() => {\n      this.gl.clear({color: [0, 0, 0, 0]})\n    })\n\n    this.tickNeeded = false\n\n    this.statsPanel && this.statsPanel.begin()\n    for (const handler of this.beforeFrameHandlers) {\n      handler()\n    }\n    this.statsPanel && this.statsPanel.end()\n\n    if (this.tick && !this.tickNeeded) {\n      if (!this.perfDebug) {\n        this.tick.cancel()\n        this.tick = null\n      }\n    }\n\n    // TODO(jlfwong): It would be really nice to have GPU\n    // stats here, but I can't figure out how to interpret\n    // the gpuTime. I suspect this is caused by executing the same\n    // program multiple times without flushing.\n    // I'll investigate this at some point and report a bug to regl.\n  }\n\n  drawRectangleBatch(props: RectangleBatchRendererProps) {\n    this.rectangleBatchRenderer.render(props)\n  }\n\n  drawTexture(props: TextureRendererProps) {\n    this.textureRenderer.render(props)\n  }\n\n  drawFlamechartColorPass(props: FlamechartColorPassRenderProps) {\n    this.flamechartColorPassRenderer.render(props)\n  }\n\n  createRectangleBatch(): RectangleBatch {\n    return new RectangleBatch(this.gl)\n  }\n\n  createTextureCachedRenderer<T>(options: {\n    render(t: T): void\n    shouldUpdate(oldProps: T, newProps: T): boolean\n  }): TextureCachedRenderer<T> {\n    return new TextureCachedRenderer(this.gl, {\n      ...options,\n      textureRenderer: this.textureRenderer,\n    })\n  }\n\n  drawViewportRectangle(props: ViewportRectangleRendererProps) {\n    this.viewportRectangleRenderer.render(props)\n  }\n\n  renderInto(el: Element, cb: (context: regl.Context) => void) {\n    const bounds = el.getBoundingClientRect()\n    const physicalBounds = new Rect(\n      new Vec2(bounds.left * window.devicePixelRatio, bounds.top * window.devicePixelRatio),\n      new Vec2(bounds.width * window.devicePixelRatio, bounds.height * window.devicePixelRatio),\n    )\n    this.setViewportScope({physicalBounds}, cb)\n  }\n\n  setViewport(physicalBounds: Rect, cb: (context: regl.Context) => void) {\n    this.setViewportScope({physicalBounds}, cb)\n  }\n\n  getMaxTextureSize() {\n    return this.gl.limits.maxTextureSize\n  }\n}\n","import {Frame, CallTreeNode} from './profile'\n\nimport {lastOf} from './utils'\n\nexport interface FlamechartFrame {\n  node: CallTreeNode\n  start: number\n  end: number\n  parent: FlamechartFrame | null\n  children: FlamechartFrame[]\n}\n\ntype StackLayer = FlamechartFrame[]\n\ninterface FlamechartDataSource {\n  getTotalWeight(): number\n\n  formatValue(v: number): string\n\n  forEachCall(\n    openFrame: (node: CallTreeNode, value: number) => void,\n    closeFrame: (node: CallTreeNode, value: number) => void,\n  ): void\n\n  getColorBucketForFrame(f: Frame): number\n}\n\nexport class Flamechart {\n  // Bottom to top\n  private layers: StackLayer[] = []\n  private totalWeight: number = 0\n  private minFrameWidth: number = 1\n\n  getTotalWeight() {\n    return this.totalWeight\n  }\n  getLayers() {\n    return this.layers\n  }\n  getColorBucketForFrame(frame: Frame) {\n    return this.source.getColorBucketForFrame(frame)\n  }\n  getMinFrameWidth() {\n    return this.minFrameWidth\n  }\n  formatValue(v: number) {\n    return this.source.formatValue(v)\n  }\n\n  constructor(private source: FlamechartDataSource) {\n    const stack: FlamechartFrame[] = []\n    const openFrame = (node: CallTreeNode, value: number) => {\n      const parent = lastOf(stack)\n      const frame: FlamechartFrame = {\n        node,\n        parent,\n        children: [],\n        start: value,\n        end: value,\n      }\n      if (parent) {\n        parent.children.push(frame)\n      }\n      stack.push(frame)\n    }\n\n    this.minFrameWidth = Infinity\n    const closeFrame = (node: CallTreeNode, value: number) => {\n      console.assert(stack.length > 0)\n      const stackTop = stack.pop()!\n      stackTop.end = value\n      if (stackTop.end - stackTop.start === 0) return\n      const layerIndex = stack.length\n      while (this.layers.length <= layerIndex) this.layers.push([])\n      this.layers[layerIndex].push(stackTop)\n      this.minFrameWidth = Math.min(this.minFrameWidth, stackTop.end - stackTop.start)\n    }\n\n    this.totalWeight = source.getTotalWeight()\n    source.forEachCall(openFrame, closeFrame)\n\n    if (!isFinite(this.minFrameWidth)) this.minFrameWidth = 1\n  }\n}\n","import {StyleSheet} from 'aphrodite'\n\nexport enum FontFamily {\n  MONOSPACE = '\"Source Code Pro\", Courier, monospace',\n}\n\nexport enum FontSize {\n  LABEL = 10,\n  TITLE = 12,\n  BIG_BUTTON = 36,\n}\n\nexport enum Colors {\n  WHITE = '#FFFFFF',\n  OFF_WHITE = '#F6F6F6',\n  LIGHT_GRAY = '#BDBDBD',\n  GRAY = '#666666',\n  DARK_GRAY = '#222222',\n  BLACK = '#000000',\n  BRIGHT_BLUE = '#56CCF2',\n  DARK_BLUE = '#2F80ED',\n  PALE_DARK_BLUE = '#8EB7ED',\n  GREEN = '#6FCF97',\n  TRANSPARENT_GREEN = 'rgba(111, 207, 151, 0.2)',\n}\n\nexport enum Sizes {\n  MINIMAP_HEIGHT = 100,\n  DETAIL_VIEW_HEIGHT = 150,\n  TOOLTIP_WIDTH_MAX = 300,\n  TOOLTIP_HEIGHT_MAX = 80,\n  SEPARATOR_HEIGHT = 2,\n  FRAME_HEIGHT = 20,\n  TOOLBAR_HEIGHT = 20,\n  TOOLBAR_TAB_HEIGHT = TOOLBAR_HEIGHT - SEPARATOR_HEIGHT,\n}\n\nexport enum ZIndex {\n  HOVERTIP = 1,\n}\n\nexport const commonStyle = StyleSheet.create({\n  fillY: {\n    height: '100%',\n  },\n  fillX: {\n    width: '100%',\n  },\n  hbox: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  vbox: {\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    overflow: 'hidden',\n  },\n})\n","import {StyleSheet} from 'aphrodite'\nimport {FontSize, Colors, Sizes} from './style'\n\nexport const style = StyleSheet.create({\n  hoverCount: {\n    color: Colors.GREEN,\n  },\n  fill: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  },\n  minimap: {\n    height: Sizes.MINIMAP_HEIGHT,\n    borderBottom: `${Sizes.SEPARATOR_HEIGHT}px solid ${Colors.LIGHT_GRAY}`,\n  },\n  panZoomView: {\n    flex: 1,\n  },\n\n  detailView: {\n    display: 'grid',\n    height: Sizes.DETAIL_VIEW_HEIGHT,\n    overflow: 'hidden',\n    gridTemplateColumns: '120px 120px 1fr',\n    gridTemplateRows: 'repeat(4, 1fr)',\n    borderTop: `${Sizes.SEPARATOR_HEIGHT}px solid ${Colors.LIGHT_GRAY}`,\n    fontSize: FontSize.LABEL,\n    position: 'absolute',\n    background: Colors.WHITE,\n    width: '100vw',\n    bottom: 0,\n  },\n  stackTraceViewPadding: {\n    padding: 5,\n  },\n  stackTraceView: {\n    height: Sizes.DETAIL_VIEW_HEIGHT,\n    lineHeight: `${FontSize.LABEL + 2}px`,\n    overflow: 'auto',\n  },\n  stackLine: {\n    whiteSpace: 'nowrap',\n  },\n  stackFileLine: {\n    color: Colors.LIGHT_GRAY,\n  },\n  statsTable: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridTemplateRows: `repeat(3, ${FontSize.LABEL + 10}px)`,\n    gridGap: '1px 1px',\n    textAlign: 'center',\n    paddingRight: 1,\n  },\n  statsTableHeader: {\n    gridColumn: '1 / 3',\n  },\n  statsTableCell: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  thisInstanceCell: {\n    background: Colors.DARK_BLUE,\n    color: Colors.WHITE,\n  },\n  allInstancesCell: {\n    background: Colors.PALE_DARK_BLUE,\n    color: Colors.WHITE,\n  },\n  barDisplay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    background: 'rgba(0, 0, 0, 0.2)',\n    width: '100%',\n  },\n})\n","import {binarySearch} from './utils'\n\nexport const ELLIPSIS = '\\u2026'\n\n// NOTE: This blindly assumes the same result across contexts.\nconst measureTextCache = new Map<string, number>()\n\nlet lastDevicePixelRatio = -1\nexport function cachedMeasureTextWidth(ctx: CanvasRenderingContext2D, text: string): number {\n  if (window.devicePixelRatio !== lastDevicePixelRatio) {\n    // This cache is no longer valid!\n    measureTextCache.clear()\n    lastDevicePixelRatio = window.devicePixelRatio\n  }\n  if (!measureTextCache.has(text)) {\n    measureTextCache.set(text, ctx.measureText(text).width)\n  }\n  return measureTextCache.get(text)!\n}\n\nfunction buildTrimmedText(text: string, length: number) {\n  const prefixLength = Math.floor(length / 2)\n  const prefix = text.substr(0, prefixLength)\n  const suffix = text.substr(text.length - prefixLength, prefixLength)\n  return prefix + ELLIPSIS + suffix\n}\n\nexport function trimTextMid(ctx: CanvasRenderingContext2D, text: string, maxWidth: number) {\n  if (cachedMeasureTextWidth(ctx, text) <= maxWidth) return text\n  const [lo] = binarySearch(\n    0,\n    text.length,\n    n => {\n      return cachedMeasureTextWidth(ctx, buildTrimmedText(text, n))\n    },\n    maxWidth,\n  )\n  return buildTrimmedText(text, lo)\n}\n","import {h, Component} from 'preact'\nimport {css} from 'aphrodite'\nimport {Flamechart} from './flamechart'\nimport {Rect, Vec2, AffineTransform, clamp} from './math'\nimport {FlamechartRenderer} from './flamechart-renderer'\nimport {style} from './flamechart-style'\nimport {FontFamily, FontSize, Colors, Sizes, commonStyle} from './style'\nimport {CanvasContext} from './canvas-context'\nimport {TextureCachedRenderer} from './texture-cached-renderer'\nimport {cachedMeasureTextWidth} from './text-utils'\n\ninterface FlamechartMinimapViewProps {\n  flamechart: Flamechart\n  configSpaceViewportRect: Rect\n\n  canvasContext: CanvasContext\n  flamechartRenderer: FlamechartRenderer\n\n  transformViewport: (transform: AffineTransform) => void\n  setConfigSpaceViewportRect: (rect: Rect) => void\n}\n\nenum DraggingMode {\n  DRAW_NEW_VIEWPORT,\n  TRANSLATE_VIEWPORT,\n}\n\nexport class FlamechartMinimapView extends Component<FlamechartMinimapViewProps, {}> {\n  container: Element | null = null\n  containerRef = (element?: Element) => {\n    this.container = element || null\n  }\n\n  overlayCanvas: HTMLCanvasElement | null = null\n  overlayCtx: CanvasRenderingContext2D | null = null\n\n  private physicalViewSize() {\n    return new Vec2(\n      this.overlayCanvas ? this.overlayCanvas.width : 0,\n      this.overlayCanvas ? this.overlayCanvas.height : 0,\n    )\n  }\n\n  private minimapOrigin() {\n    return new Vec2(0, Sizes.FRAME_HEIGHT * window.devicePixelRatio)\n  }\n\n  private configSpaceSize() {\n    return new Vec2(\n      this.props.flamechart.getTotalWeight(),\n      this.props.flamechart.getLayers().length,\n    )\n  }\n\n  private configSpaceToPhysicalViewSpace() {\n    const minimapOrigin = this.minimapOrigin()\n\n    return AffineTransform.betweenRects(\n      new Rect(new Vec2(0, 0), this.configSpaceSize()),\n      new Rect(minimapOrigin, this.physicalViewSize().minus(minimapOrigin)),\n    )\n  }\n\n  private logicalToPhysicalViewSpace() {\n    return AffineTransform.withScale(new Vec2(window.devicePixelRatio, window.devicePixelRatio))\n  }\n\n  private windowToLogicalViewSpace() {\n    if (!this.container) return new AffineTransform()\n    const bounds = this.container.getBoundingClientRect()\n    return AffineTransform.withTranslation(new Vec2(-bounds.left, -bounds.top))\n  }\n\n  private cachedRenderer: TextureCachedRenderer<{\n    physicalSize: Vec2\n  }> | null = null\n  private renderRects() {\n    if (!this.container) return\n\n    // Hasn't resized yet -- no point in rendering yet\n    if (this.physicalViewSize().x < 2) return\n\n    if (!this.cachedRenderer) {\n      this.cachedRenderer = this.props.canvasContext.createTextureCachedRenderer({\n        shouldUpdate(oldProps, newProps) {\n          if (!oldProps.physicalSize.equals(newProps.physicalSize)) {\n            return true\n          }\n          return false\n        },\n        render: props => {\n          this.props.flamechartRenderer.render({\n            physicalSpaceDstRect: new Rect(\n              this.minimapOrigin(),\n              this.physicalViewSize().minus(this.minimapOrigin()),\n            ),\n            configSpaceSrcRect: new Rect(new Vec2(0, 0), this.configSpaceSize()),\n            renderOutlines: false,\n          })\n        },\n      })\n    }\n\n    this.props.canvasContext.renderInto(this.container, context => {\n      // TODO(jlfwong): Switch back to the texture cached renderer once I figure out\n      // how to resize a framebuffer while another framebuffer is active. It seems\n      // to crash regl. I should submit a reduced repro case and hopefully get it fixed?\n      /*\n      this.cachedRenderer!.render({\n        physicalSize: this.physicalViewSize()\n      })\n      */\n      this.props.flamechartRenderer.render({\n        configSpaceSrcRect: new Rect(new Vec2(0, 0), this.configSpaceSize()),\n        physicalSpaceDstRect: new Rect(\n          this.minimapOrigin(),\n          this.physicalViewSize().minus(this.minimapOrigin()),\n        ),\n        renderOutlines: false,\n      })\n      this.props.canvasContext.drawViewportRectangle({\n        configSpaceViewportRect: this.props.configSpaceViewportRect,\n        configSpaceToPhysicalViewSpace: this.configSpaceToPhysicalViewSpace(),\n      })\n    })\n  }\n\n  private renderOverlays() {\n    const ctx = this.overlayCtx\n    if (!ctx) return\n    const physicalViewSize = this.physicalViewSize()\n    ctx.clearRect(0, 0, physicalViewSize.x, physicalViewSize.y)\n\n    this.resizeOverlayCanvasIfNeeded()\n\n    const configToPhysical = this.configSpaceToPhysicalViewSpace()\n\n    const left = 0\n    const right = this.configSpaceSize().x\n\n    // TODO(jlfwong): There's a huge amount of code duplication here between\n    // this and the FlamechartView.renderOverlays(). Consolidate.\n\n    // We want about 10 gridlines to be visible, and want the unit to be\n    // 1eN, 2eN, or 5eN for some N\n\n    // Ideally, we want an interval every 100 logical screen pixels\n    const logicalToConfig = (\n      this.configSpaceToPhysicalViewSpace().inverted() || new AffineTransform()\n    ).times(this.logicalToPhysicalViewSpace())\n    const targetInterval = logicalToConfig.transformVector(new Vec2(200, 1)).x\n\n    const physicalViewSpaceFrameHeight = Sizes.FRAME_HEIGHT * window.devicePixelRatio\n    const physicalViewSpaceFontSize = FontSize.LABEL * window.devicePixelRatio\n    const labelPaddingPx = (physicalViewSpaceFrameHeight - physicalViewSpaceFontSize) / 2\n\n    ctx.font = `${physicalViewSpaceFontSize}px/${physicalViewSpaceFrameHeight}px ${\n      FontFamily.MONOSPACE\n    }`\n    ctx.textBaseline = 'top'\n\n    const minInterval = Math.pow(10, Math.floor(Math.log10(targetInterval)))\n    let interval = minInterval\n\n    if (targetInterval / interval > 5) {\n      interval *= 5\n    } else if (targetInterval / interval > 2) {\n      interval *= 2\n    }\n\n    {\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.8)'\n      ctx.fillRect(0, 0, physicalViewSize.x, physicalViewSpaceFrameHeight)\n      ctx.textBaseline = 'top'\n\n      ctx.fillStyle = Colors.DARK_GRAY\n      for (let x = Math.ceil(left / interval) * interval; x < right; x += interval) {\n        // TODO(jlfwong): Ensure that labels do not overlap\n        const pos = Math.round(configToPhysical.transformPosition(new Vec2(x, 0)).x)\n        const labelText = this.props.flamechart.formatValue(x)\n        const textWidth = Math.ceil(cachedMeasureTextWidth(ctx, labelText))\n\n        ctx.fillText(labelText, pos - textWidth - labelPaddingPx, labelPaddingPx)\n        ctx.fillRect(pos, 0, 1, physicalViewSize.y)\n      }\n    }\n  }\n\n  onWindowResize = () => {\n    this.onBeforeFrame()\n  }\n\n  componentWillReceiveProps(nextProps: FlamechartMinimapViewProps) {\n    if (this.props.flamechart !== nextProps.flamechart) {\n      if (this.cachedRenderer) {\n        this.cachedRenderer.setDirty()\n      }\n      this.renderCanvas()\n    } else if (this.props.configSpaceViewportRect != nextProps.configSpaceViewportRect) {\n      this.renderCanvas()\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onWindowResize)\n    this.props.canvasContext.addBeforeFrameHandler(this.onBeforeFrame)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n    this.props.canvasContext.removeBeforeFrameHandler(this.onBeforeFrame)\n  }\n\n  private resizeOverlayCanvasIfNeeded() {\n    if (!this.overlayCanvas) return\n    let {width, height} = this.overlayCanvas.getBoundingClientRect()\n    {\n      /*\n      We render text at a higher resolution then scale down to\n      ensure we're rendering at 1:1 device pixel ratio.\n      This ensures our text is rendered crisply.\n    */\n    }\n    width = Math.floor(width)\n    height = Math.floor(height)\n\n    // Still initializing: don't resize yet\n    if (width === 0 || height === 0) return\n\n    const scaledWidth = width * window.devicePixelRatio\n    const scaledHeight = height * window.devicePixelRatio\n\n    if (scaledWidth === this.overlayCanvas.width && scaledHeight === this.overlayCanvas.height)\n      return\n\n    this.overlayCanvas.width = scaledWidth\n    this.overlayCanvas.height = scaledHeight\n  }\n\n  private onBeforeFrame = () => {\n    this.maybeClearInteractionLock()\n    this.renderRects()\n    this.renderOverlays()\n  }\n\n  private renderCanvas = () => {\n    this.props.canvasContext.requestFrame()\n  }\n\n  // Inertial scrolling introduces tricky interaction problems.\n  // Namely, if you start panning, and hit the edge of the scrollable\n  // area, the browser continues to receive WheelEvents from inertial\n  // scrolling. If we start zooming by holding Cmd + scrolling, then\n  // release the Cmd key, this can cause us to interpret the incoming\n  // inertial scrolling events as panning. To prevent this, we introduce\n  // a concept of an \"Interaction Lock\". Once a certain interaction has\n  // begun, we don't allow the other type of interaction to begin until\n  // we've received two frames with no inertial wheel events. This\n  // prevents us from accidentally switching between panning & zooming.\n  private frameHadWheelEvent = false\n  private framesWithoutWheelEvents = 0\n  private interactionLock: 'pan' | 'zoom' | null = null\n  private maybeClearInteractionLock = () => {\n    if (this.interactionLock) {\n      if (!this.frameHadWheelEvent) {\n        this.framesWithoutWheelEvents++\n        if (this.framesWithoutWheelEvents >= 2) {\n          this.interactionLock = null\n          this.framesWithoutWheelEvents = 0\n        }\n      }\n      this.props.canvasContext.requestFrame()\n    }\n    this.frameHadWheelEvent = false\n  }\n\n  private pan(logicalViewSpaceDelta: Vec2) {\n    this.interactionLock = 'pan'\n    const physicalDelta = this.logicalToPhysicalViewSpace().transformVector(logicalViewSpaceDelta)\n    const configDelta = this.configSpaceToPhysicalViewSpace().inverseTransformVector(physicalDelta)\n\n    if (!configDelta) return\n    this.props.transformViewport(AffineTransform.withTranslation(configDelta))\n  }\n\n  private zoom(multiplier: number) {\n    this.interactionLock = 'zoom'\n    const configSpaceViewport = this.props.configSpaceViewportRect\n    const configSpaceCenter = configSpaceViewport.origin.plus(configSpaceViewport.size.times(1 / 2))\n    if (!configSpaceCenter) return\n\n    const zoomTransform = AffineTransform.withTranslation(configSpaceCenter.times(-1))\n      .scaledBy(new Vec2(multiplier, 1))\n      .translatedBy(configSpaceCenter)\n\n    this.props.transformViewport(zoomTransform)\n  }\n\n  private onWheel = (ev: WheelEvent) => {\n    ev.preventDefault()\n\n    this.frameHadWheelEvent = true\n\n    const isZoom = ev.metaKey || ev.ctrlKey\n\n    if (isZoom && this.interactionLock !== 'pan') {\n      let multiplier = 1 + ev.deltaY / 100\n\n      // On Chrome & Firefox, pinch-to-zoom maps to\n      // WheelEvent + Ctrl Key. We'll accelerate it in\n      // this case, since it feels a bit sluggish otherwise.\n      if (ev.ctrlKey) {\n        multiplier = 1 + ev.deltaY / 40\n      }\n\n      multiplier = clamp(multiplier, 0.1, 10.0)\n\n      this.zoom(multiplier)\n    } else if (this.interactionLock !== 'zoom') {\n      this.pan(new Vec2(ev.deltaX, ev.deltaY))\n    }\n\n    this.renderCanvas()\n  }\n\n  private configSpaceMouse(ev: MouseEvent): Vec2 | null {\n    const logicalSpaceMouse = this.windowToLogicalViewSpace().transformPosition(\n      new Vec2(ev.clientX, ev.clientY),\n    )\n    const physicalSpaceMouse = this.logicalToPhysicalViewSpace().transformPosition(\n      logicalSpaceMouse,\n    )\n    return this.configSpaceToPhysicalViewSpace().inverseTransformPosition(physicalSpaceMouse)\n  }\n\n  private dragStartConfigSpaceMouse: Vec2 | null = null\n  private dragConfigSpaceViewportOffset: Vec2 | null = null\n  private draggingMode: DraggingMode | null = null\n  private onMouseDown = (ev: MouseEvent) => {\n    const configSpaceMouse = this.configSpaceMouse(ev)\n\n    if (configSpaceMouse) {\n      if (this.props.configSpaceViewportRect.contains(configSpaceMouse)) {\n        // If dragging starting inside the viewport rectangle,\n        // we'll move the existing viewport\n        this.draggingMode = DraggingMode.TRANSLATE_VIEWPORT\n        this.dragConfigSpaceViewportOffset = configSpaceMouse.minus(\n          this.props.configSpaceViewportRect.origin,\n        )\n      } else {\n        // If dragging starts outside the the viewport rectangle,\n        // we'll start drawing a new viewport\n        this.draggingMode = DraggingMode.DRAW_NEW_VIEWPORT\n      }\n\n      this.dragStartConfigSpaceMouse = configSpaceMouse\n      window.addEventListener('mousemove', this.onWindowMouseMove)\n      window.addEventListener('mouseup', this.onWindowMouseUp)\n      this.updateCursor(configSpaceMouse)\n    }\n  }\n\n  private onWindowMouseMove = (ev: MouseEvent) => {\n    if (!this.dragStartConfigSpaceMouse) return\n    let configSpaceMouse = this.configSpaceMouse(ev)\n\n    if (!configSpaceMouse) return\n    this.updateCursor(configSpaceMouse)\n\n    // Clamp the mouse position to avoid weird behavior when outside the canvas bounds\n    configSpaceMouse = new Rect(new Vec2(0, 0), this.configSpaceSize()).closestPointTo(\n      configSpaceMouse,\n    )\n\n    if (this.draggingMode === DraggingMode.DRAW_NEW_VIEWPORT) {\n      const configStart = this.dragStartConfigSpaceMouse\n      let configEnd = configSpaceMouse\n\n      if (!configStart || !configEnd) return\n      const left = Math.min(configStart.x, configEnd.x)\n      const right = Math.max(configStart.x, configEnd.x)\n\n      const width = right - left\n      const height = this.props.configSpaceViewportRect.height()\n\n      this.props.setConfigSpaceViewportRect(\n        new Rect(new Vec2(left, configEnd.y - height / 2), new Vec2(width, height)),\n      )\n    } else if (this.draggingMode === DraggingMode.TRANSLATE_VIEWPORT) {\n      if (!this.dragConfigSpaceViewportOffset) return\n\n      const newOrigin = configSpaceMouse.minus(this.dragConfigSpaceViewportOffset)\n      this.props.setConfigSpaceViewportRect(\n        this.props.configSpaceViewportRect.withOrigin(newOrigin),\n      )\n    }\n  }\n\n  private updateCursor = (configSpaceMouse: Vec2) => {\n    if (this.draggingMode === DraggingMode.TRANSLATE_VIEWPORT) {\n      document.body.style.cursor = 'grabbing'\n      document.body.style.cursor = '-webkit-grabbing'\n    } else if (this.draggingMode === DraggingMode.DRAW_NEW_VIEWPORT) {\n      document.body.style.cursor = 'col-resize'\n    } else if (this.props.configSpaceViewportRect.contains(configSpaceMouse)) {\n      document.body.style.cursor = 'grab'\n      document.body.style.cursor = '-webkit-grab'\n    } else {\n      document.body.style.cursor = 'col-resize'\n    }\n  }\n\n  private onMouseMove = (ev: MouseEvent) => {\n    const configSpaceMouse = this.configSpaceMouse(ev)\n    if (!configSpaceMouse) return\n    this.updateCursor(configSpaceMouse)\n  }\n\n  private onWindowMouseUp = (ev: MouseEvent) => {\n    this.draggingMode = null\n    window.removeEventListener('mousemove', this.onWindowMouseMove)\n    window.removeEventListener('mouseup', this.onWindowMouseUp)\n\n    const configSpaceMouse = this.configSpaceMouse(ev)\n    if (!configSpaceMouse) return\n    this.updateCursor(configSpaceMouse)\n  }\n\n  private overlayCanvasRef = (element?: Element) => {\n    if (element) {\n      this.overlayCanvas = element as HTMLCanvasElement\n      this.overlayCtx = this.overlayCanvas.getContext('2d')\n      this.renderCanvas()\n    } else {\n      this.overlayCanvas = null\n      this.overlayCtx = null\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.containerRef}\n        onWheel={this.onWheel}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        className={css(style.minimap, commonStyle.vbox)}\n      >\n        <canvas width={1} height={1} ref={this.overlayCanvasRef} className={css(style.fill)} />\n      </div>\n    )\n  }\n}\n","import {h, Component} from 'preact'\nimport {StyleSheet, css} from 'aphrodite'\nimport {Colors, FontSize} from './style'\n\ninterface ColorChitProps {\n  color: string\n}\n\nexport class ColorChit extends Component<ColorChitProps, {}> {\n  render() {\n    return <span className={css(style.stackChit)} style={{backgroundColor: this.props.color}} />\n  }\n}\n\nconst style = StyleSheet.create({\n  stackChit: {\n    position: 'relative',\n    top: -1,\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    marginRight: '0.5em',\n    border: `1px solid ${Colors.LIGHT_GRAY}`,\n    width: FontSize.LABEL - 2,\n    height: FontSize.LABEL - 2,\n  },\n})\n","import {StyleDeclarationValue, css} from 'aphrodite'\nimport {ReloadableComponent} from './reloadable'\nimport {h} from 'preact'\nimport {style} from './flamechart-style'\nimport {formatPercent} from './utils'\nimport {Frame, CallTreeNode} from './profile'\nimport {ColorChit} from './color-chit'\nimport {Flamechart} from './flamechart'\n\ninterface StatisticsTableProps {\n  title: string\n  grandTotal: number\n  selectedTotal: number\n  selectedSelf: number\n  cellStyle: StyleDeclarationValue\n  formatter: (v: number) => string\n}\n\nclass StatisticsTable extends ReloadableComponent<StatisticsTableProps, {}> {\n  render() {\n    const total = this.props.formatter(this.props.selectedTotal)\n    const self = this.props.formatter(this.props.selectedSelf)\n    const totalPerc = 100.0 * this.props.selectedTotal / this.props.grandTotal\n    const selfPerc = 100.0 * this.props.selectedSelf / this.props.grandTotal\n\n    return (\n      <div className={css(style.statsTable)}>\n        <div className={css(this.props.cellStyle, style.statsTableCell, style.statsTableHeader)}>\n          {this.props.title}\n        </div>\n\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>Total</div>\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>Self</div>\n\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>{total}</div>\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>{self}</div>\n\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>\n          {formatPercent(totalPerc)}\n          <div className={css(style.barDisplay)} style={{height: `${totalPerc}%`}} />\n        </div>\n        <div className={css(this.props.cellStyle, style.statsTableCell)}>\n          {formatPercent(selfPerc)}\n          <div className={css(style.barDisplay)} style={{height: `${selfPerc}%`}} />\n        </div>\n      </div>\n    )\n  }\n}\n\ninterface StackTraceViewProps {\n  getFrameColor: (frame: Frame) => string\n  node: CallTreeNode\n}\nclass StackTraceView extends ReloadableComponent<StackTraceViewProps, {}> {\n  render() {\n    const rows: JSX.Element[] = []\n    let node: CallTreeNode | null = this.props.node\n    for (; node && !node.isRoot(); node = node.parent) {\n      const row: (JSX.Element | string)[] = []\n      const {frame} = node\n\n      row.push(<ColorChit color={this.props.getFrameColor(frame)} />)\n\n      if (rows.length) {\n        row.push(<span className={css(style.stackFileLine)}>> </span>)\n      }\n      row.push(frame.name)\n\n      if (frame.file) {\n        let pos = frame.file\n        if (frame.line) {\n          pos += `:${frame.line}`\n          if (frame.col) {\n            pos += `:${frame.col}`\n          }\n        }\n        row.push(<span className={css(style.stackFileLine)}> ({pos})</span>)\n      }\n      rows.push(<div className={css(style.stackLine)}>{row}</div>)\n    }\n    return (\n      <div className={css(style.stackTraceView)}>\n        <div className={css(style.stackTraceViewPadding)}>{rows}</div>\n      </div>\n    )\n  }\n}\n\ninterface FlamechartDetailViewProps {\n  flamechart: Flamechart\n  getCSSColorForFrame: (frame: Frame) => string\n  selectedNode: CallTreeNode\n}\n\nexport class FlamechartDetailView extends ReloadableComponent<FlamechartDetailViewProps, {}> {\n  render() {\n    const {flamechart, selectedNode} = this.props\n    const {frame} = selectedNode\n\n    return (\n      <div className={css(style.detailView)}>\n        <StatisticsTable\n          title={'This Instance'}\n          cellStyle={style.thisInstanceCell}\n          grandTotal={flamechart.getTotalWeight()}\n          selectedTotal={selectedNode.getTotalWeight()}\n          selectedSelf={selectedNode.getSelfWeight()}\n          formatter={flamechart.formatValue.bind(flamechart)}\n        />\n        <StatisticsTable\n          title={'All Instances'}\n          cellStyle={style.allInstancesCell}\n          grandTotal={flamechart.getTotalWeight()}\n          selectedTotal={frame.getTotalWeight()}\n          selectedSelf={frame.getSelfWeight()}\n          formatter={flamechart.formatValue.bind(flamechart)}\n        />\n        <StackTraceView node={selectedNode} getFrameColor={this.props.getCSSColorForFrame} />\n      </div>\n    )\n  }\n}\n","import {Rect, AffineTransform, Vec2, clamp} from './math'\nimport {CallTreeNode} from './profile'\nimport {Flamechart, FlamechartFrame} from './flamechart'\nimport {CanvasContext} from './canvas-context'\nimport {FlamechartRenderer} from './flamechart-renderer'\nimport {ReloadableComponent} from './reloadable'\nimport {Sizes, FontSize, Colors, FontFamily, commonStyle} from './style'\nimport {cachedMeasureTextWidth, ELLIPSIS, trimTextMid} from './text-utils'\nimport {style} from './flamechart-style'\nimport {h} from 'preact'\nimport {css} from 'aphrodite'\n\ninterface FlamechartFrameLabel {\n  configSpaceBounds: Rect\n  node: CallTreeNode\n}\n\n/**\n * Component to visualize a Flamechart and interact with it via hovering,\n * zooming, and panning.\n *\n * There are 3 vector spaces involved:\n * - Configuration Space: In this space, the horizontal unit is ms, and the\n *   vertical unit is stack depth. Each stack frame is one unit high.\n * - Logical view space: Origin is top-left, with +y downwards. This represents\n *   the coordinate space of the view as specified in CSS: horizontal and vertical\n *   units are both \"logical\" pixels.\n * - Physical view space: Origin is top-left, with +y downwards. This represents\n *   the coordinate space of the view as specified in hardware pixels: horizontal\n *   and vertical units are both \"physical\" pixels.\n *\n * We use two canvases to draw the flamechart itself: one for the rectangles,\n * which we render via WebGL, and one for the labels, which we render via 2D\n * canvas primitives.\n */\nexport interface FlamechartPanZoomViewProps {\n  flamechart: Flamechart\n  canvasContext: CanvasContext\n  flamechartRenderer: FlamechartRenderer\n  renderInverted: boolean\n  selectedNode: CallTreeNode | null\n\n  onNodeHover: (hover: {node: CallTreeNode; event: MouseEvent} | null) => void\n  onNodeSelect: (node: CallTreeNode | null) => void\n  configSpaceViewportRect: Rect\n  transformViewport: (transform: AffineTransform) => void\n  setConfigSpaceViewportRect: (rect: Rect) => void\n}\n\nexport class FlamechartPanZoomView extends ReloadableComponent<FlamechartPanZoomViewProps, {}> {\n  private container: Element | null = null\n  private containerRef = (element?: Element) => {\n    this.container = element || null\n  }\n\n  private overlayCanvas: HTMLCanvasElement | null = null\n  private overlayCtx: CanvasRenderingContext2D | null = null\n\n  private hoveredLabel: FlamechartFrameLabel | null = null\n\n  private setConfigSpaceViewportRect(r: Rect) {\n    this.props.setConfigSpaceViewportRect(r)\n  }\n\n  private overlayCanvasRef = (element?: Element) => {\n    if (element) {\n      this.overlayCanvas = element as HTMLCanvasElement\n      this.overlayCtx = this.overlayCanvas.getContext('2d')\n      this.renderCanvas()\n    } else {\n      this.overlayCanvas = null\n      this.overlayCtx = null\n    }\n  }\n\n  private configSpaceSize() {\n    return new Vec2(\n      this.props.flamechart.getTotalWeight(),\n      this.props.flamechart.getLayers().length,\n    )\n  }\n\n  private physicalViewSize() {\n    return new Vec2(\n      this.overlayCanvas ? this.overlayCanvas.width : 0,\n      this.overlayCanvas ? this.overlayCanvas.height : 0,\n    )\n  }\n\n  private physicalBounds(): Rect {\n    if (this.props.renderInverted) {\n      // If we're rendering inverted and the flamegraph won't fill the viewport,\n      // we want to stick the flamegraph to the bottom of the viewport, not the top.\n\n      const physicalViewportHeight = this.physicalViewSize().y\n      const physicalFlamegraphHeight =\n        (this.configSpaceSize().y + 1) *\n        this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT *\n        window.devicePixelRatio\n\n      if (physicalFlamegraphHeight < physicalViewportHeight) {\n        return new Rect(\n          new Vec2(0, physicalViewportHeight - physicalFlamegraphHeight),\n          this.physicalViewSize(),\n        )\n      }\n    }\n\n    return new Rect(new Vec2(0, 0), this.physicalViewSize())\n  }\n\n  private LOGICAL_VIEW_SPACE_FRAME_HEIGHT = Sizes.FRAME_HEIGHT\n\n  private configSpaceToPhysicalViewSpace() {\n    return AffineTransform.betweenRects(this.props.configSpaceViewportRect, this.physicalBounds())\n  }\n\n  private logicalToPhysicalViewSpace() {\n    return AffineTransform.withScale(new Vec2(window.devicePixelRatio, window.devicePixelRatio))\n  }\n\n  private resizeOverlayCanvasIfNeeded() {\n    if (!this.overlayCanvas) return\n    let {width, height} = this.overlayCanvas.getBoundingClientRect()\n    {\n      /*\n      We render text at a higher resolution then scale down to\n      ensure we're rendering at 1:1 device pixel ratio.\n      This ensures our text is rendered crisply.\n    */\n    }\n    width = Math.floor(width)\n    height = Math.floor(height)\n\n    // Still initializing: don't resize yet\n    if (width === 0 || height === 0) return\n\n    const scaledWidth = width * window.devicePixelRatio\n    const scaledHeight = height * window.devicePixelRatio\n\n    if (scaledWidth === this.overlayCanvas.width && scaledHeight === this.overlayCanvas.height)\n      return\n\n    this.overlayCanvas.width = scaledWidth\n    this.overlayCanvas.height = scaledHeight\n  }\n\n  private renderOverlays() {\n    const ctx = this.overlayCtx\n    if (!ctx) return\n    this.resizeOverlayCanvasIfNeeded()\n    if (this.props.configSpaceViewportRect.isEmpty()) return\n\n    const configToPhysical = this.configSpaceToPhysicalViewSpace()\n\n    const physicalViewSpaceFontSize = FontSize.LABEL * window.devicePixelRatio\n    const physicalViewSpaceFrameHeight =\n      this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT * window.devicePixelRatio\n\n    const physicalViewSize = this.physicalViewSize()\n\n    ctx.clearRect(0, 0, physicalViewSize.x, physicalViewSize.y)\n\n    if (this.hoveredLabel) {\n      let color = Colors.DARK_GRAY\n      if (this.props.selectedNode === this.hoveredLabel.node) {\n        color = Colors.DARK_BLUE\n      }\n\n      ctx.lineWidth = 2 * devicePixelRatio\n      ctx.strokeStyle = color\n\n      const physicalViewBounds = configToPhysical.transformRect(this.hoveredLabel.configSpaceBounds)\n      ctx.strokeRect(\n        Math.round(physicalViewBounds.left()),\n        Math.round(physicalViewBounds.top()),\n        Math.round(Math.max(0, physicalViewBounds.width())),\n        Math.round(Math.max(0, physicalViewBounds.height())),\n      )\n    }\n\n    ctx.font = `${physicalViewSpaceFontSize}px/${physicalViewSpaceFrameHeight}px ${\n      FontFamily.MONOSPACE\n    }`\n    ctx.textBaseline = 'alphabetic'\n    ctx.fillStyle = Colors.DARK_GRAY\n\n    const minWidthToRender = cachedMeasureTextWidth(ctx, 'M' + ELLIPSIS + 'M')\n    const minConfigSpaceWidthToRender = (\n      configToPhysical.inverseTransformVector(new Vec2(minWidthToRender, 0)) || new Vec2(0, 0)\n    ).x\n\n    const LABEL_PADDING_PX = 5 * window.devicePixelRatio\n\n    const renderFrameLabelAndChildren = (frame: FlamechartFrame, depth = 0) => {\n      const width = frame.end - frame.start\n      const y = this.props.renderInverted ? this.configSpaceSize().y - 1 - depth : depth\n      const configSpaceBounds = new Rect(new Vec2(frame.start, y), new Vec2(width, 1))\n\n      if (width < minConfigSpaceWidthToRender) return\n      if (configSpaceBounds.left() > this.props.configSpaceViewportRect.right()) return\n      if (configSpaceBounds.right() < this.props.configSpaceViewportRect.left()) return\n\n      if (this.props.renderInverted) {\n        if (configSpaceBounds.bottom() < this.props.configSpaceViewportRect.top()) return\n      } else {\n        if (configSpaceBounds.top() > this.props.configSpaceViewportRect.bottom()) return\n      }\n\n      if (configSpaceBounds.hasIntersectionWith(this.props.configSpaceViewportRect)) {\n        let physicalLabelBounds = configToPhysical.transformRect(configSpaceBounds)\n\n        if (physicalLabelBounds.left() < 0) {\n          physicalLabelBounds = physicalLabelBounds\n            .withOrigin(physicalLabelBounds.origin.withX(0))\n            .withSize(\n              physicalLabelBounds.size.withX(\n                physicalLabelBounds.size.x + physicalLabelBounds.left(),\n              ),\n            )\n        }\n        if (physicalLabelBounds.right() > physicalViewSize.x) {\n          physicalLabelBounds = physicalLabelBounds.withSize(\n            physicalLabelBounds.size.withX(physicalViewSize.x - physicalLabelBounds.left()),\n          )\n        }\n\n        const trimmedText = trimTextMid(\n          ctx,\n          frame.node.frame.name,\n          physicalLabelBounds.width() - 2 * LABEL_PADDING_PX,\n        )\n\n        // Note that this is specifying the position of the starting text\n        // baseline.\n        ctx.fillText(\n          trimmedText,\n          physicalLabelBounds.left() + LABEL_PADDING_PX,\n          Math.round(\n            physicalLabelBounds.bottom() -\n              (physicalViewSpaceFrameHeight - physicalViewSpaceFontSize) / 2,\n          ),\n        )\n      }\n      for (let child of frame.children) {\n        renderFrameLabelAndChildren(child, depth + 1)\n      }\n    }\n\n    for (let frame of this.props.flamechart.getLayers()[0] || []) {\n      renderFrameLabelAndChildren(frame)\n    }\n\n    const frameOutlineWidth = 2 * window.devicePixelRatio\n    ctx.strokeStyle = Colors.PALE_DARK_BLUE\n    ctx.lineWidth = frameOutlineWidth\n    const minConfigSpaceWidthToRenderOutline = (\n      configToPhysical.inverseTransformVector(new Vec2(1, 0)) || new Vec2(0, 0)\n    ).x\n    const renderIndirectlySelectedFrameOutlines = (frame: FlamechartFrame, depth = 0) => {\n      if (!this.props.selectedNode) return\n      const width = frame.end - frame.start\n      const y = this.props.renderInverted ? this.configSpaceSize().y - 1 - depth : depth\n      const configSpaceBounds = new Rect(new Vec2(frame.start, y), new Vec2(width, 1))\n\n      if (width < minConfigSpaceWidthToRenderOutline) return\n      if (configSpaceBounds.left() > this.props.configSpaceViewportRect.right()) return\n      if (configSpaceBounds.right() < this.props.configSpaceViewportRect.left()) return\n      if (configSpaceBounds.top() > this.props.configSpaceViewportRect.bottom()) return\n\n      if (configSpaceBounds.hasIntersectionWith(this.props.configSpaceViewportRect)) {\n        const physicalRectBounds = configToPhysical.transformRect(configSpaceBounds)\n\n        if (frame.node.frame === this.props.selectedNode.frame) {\n          if (frame.node === this.props.selectedNode) {\n            if (ctx.strokeStyle !== Colors.DARK_BLUE) {\n              ctx.stroke()\n              ctx.beginPath()\n              ctx.strokeStyle = Colors.DARK_BLUE\n            }\n          } else {\n            if (ctx.strokeStyle !== Colors.PALE_DARK_BLUE) {\n              ctx.stroke()\n              ctx.beginPath()\n              ctx.strokeStyle = Colors.PALE_DARK_BLUE\n            }\n          }\n\n          // Identify the flamechart frames with a function that matches the\n          // selected flamechart frame.\n          ctx.rect(\n            Math.round(physicalRectBounds.left() + 1 + frameOutlineWidth / 2),\n            Math.round(physicalRectBounds.top() + 1 + frameOutlineWidth / 2),\n            Math.round(Math.max(0, physicalRectBounds.width() - 2 - frameOutlineWidth)),\n            Math.round(Math.max(0, physicalRectBounds.height() - 2 - frameOutlineWidth)),\n          )\n        }\n      }\n\n      for (let child of frame.children) {\n        renderIndirectlySelectedFrameOutlines(child, depth + 1)\n      }\n    }\n\n    ctx.beginPath()\n    for (let frame of this.props.flamechart.getLayers()[0] || []) {\n      renderIndirectlySelectedFrameOutlines(frame)\n    }\n    ctx.stroke()\n\n    this.renderTimeIndicators()\n  }\n\n  private renderTimeIndicators() {\n    const ctx = this.overlayCtx\n    if (!ctx) return\n\n    const physicalViewSpaceFrameHeight =\n      this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT * window.devicePixelRatio\n    const physicalViewSize = this.physicalViewSize()\n    const configToPhysical = this.configSpaceToPhysicalViewSpace()\n    const physicalViewSpaceFontSize = FontSize.LABEL * window.devicePixelRatio\n    const labelPaddingPx = (physicalViewSpaceFrameHeight - physicalViewSpaceFontSize) / 2\n\n    const left = this.props.configSpaceViewportRect.left()\n    const right = this.props.configSpaceViewportRect.right()\n    // We want about 10 gridlines to be visible, and want the unit to be\n    // 1eN, 2eN, or 5eN for some N\n    // Ideally, we want an interval every 100 logical screen pixels\n    const logicalToConfig = (\n      this.configSpaceToPhysicalViewSpace().inverted() || new AffineTransform()\n    ).times(this.logicalToPhysicalViewSpace())\n    const targetInterval = logicalToConfig.transformVector(new Vec2(200, 1)).x\n    const minInterval = Math.pow(10, Math.floor(Math.log10(targetInterval)))\n    let interval = minInterval\n    if (targetInterval / interval > 5) {\n      interval *= 5\n    } else if (targetInterval / interval > 2) {\n      interval *= 2\n    }\n\n    {\n      const y = this.props.renderInverted ? physicalViewSize.y - physicalViewSpaceFrameHeight : 0\n\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.8)'\n      ctx.fillRect(0, y, physicalViewSize.x, physicalViewSpaceFrameHeight)\n      ctx.fillStyle = Colors.DARK_GRAY\n      ctx.textBaseline = 'top'\n      for (let x = Math.ceil(left / interval) * interval; x < right; x += interval) {\n        // TODO(jlfwong): Ensure that labels do not overlap\n        const pos = Math.round(configToPhysical.transformPosition(new Vec2(x, 0)).x)\n        const labelText = this.props.flamechart.formatValue(x)\n        const textWidth = cachedMeasureTextWidth(ctx, labelText)\n        ctx.fillText(labelText, pos - textWidth - labelPaddingPx, y + labelPaddingPx)\n        ctx.fillRect(pos, 0, 1, physicalViewSize.y)\n      }\n    }\n  }\n\n  private lastBounds: ClientRect | null = null\n  private updateConfigSpaceViewport() {\n    if (!this.container) return\n    const bounds = this.container.getBoundingClientRect()\n    const {width, height} = bounds\n\n    // Still initializing: don't resize yet\n    if (width < 2 || height < 2) return\n\n    if (this.lastBounds == null) {\n      const configSpaceViewportHeight = height / this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT\n      if (this.props.renderInverted) {\n        this.setConfigSpaceViewportRect(\n          new Rect(\n            new Vec2(0, this.configSpaceSize().y - configSpaceViewportHeight + 1),\n            new Vec2(this.configSpaceSize().x, configSpaceViewportHeight),\n          ),\n        )\n      } else {\n        this.setConfigSpaceViewportRect(\n          new Rect(new Vec2(0, -1), new Vec2(this.configSpaceSize().x, configSpaceViewportHeight)),\n        )\n      }\n    } else if (this.lastBounds.width !== width || this.lastBounds.height !== height) {\n      // Resize the viewport rectangle to match the window size aspect\n      // ratio.\n      this.setConfigSpaceViewportRect(\n        this.props.configSpaceViewportRect.withSize(\n          this.props.configSpaceViewportRect.size.timesPointwise(\n            new Vec2(width / this.lastBounds.width, height / this.lastBounds.height),\n          ),\n        ),\n      )\n    }\n    this.lastBounds = bounds\n  }\n\n  onWindowResize = () => {\n    this.updateConfigSpaceViewport()\n    this.onBeforeFrame()\n  }\n\n  private renderRects() {\n    if (!this.container) return\n    this.updateConfigSpaceViewport()\n\n    if (this.props.configSpaceViewportRect.isEmpty()) return\n\n    this.props.canvasContext.renderInto(this.container, context => {\n      this.props.flamechartRenderer.render({\n        physicalSpaceDstRect: this.physicalBounds(),\n        configSpaceSrcRect: this.props.configSpaceViewportRect,\n        renderOutlines: true,\n      })\n    })\n  }\n\n  // Inertial scrolling introduces tricky interaction problems.\n  // Namely, if you start panning, and hit the edge of the scrollable\n  // area, the browser continues to receive WheelEvents from inertial\n  // scrolling. If we start zooming by holding Cmd + scrolling, then\n  // release the Cmd key, this can cause us to interpret the incoming\n  // inertial scrolling events as panning. To prevent this, we introduce\n  // a concept of an \"Interaction Lock\". Once a certain interaction has\n  // begun, we don't allow the other type of interaction to begin until\n  // we've received two frames with no inertial wheel events. This\n  // prevents us from accidentally switching between panning & zooming.\n  private frameHadWheelEvent = false\n  private framesWithoutWheelEvents = 0\n  private interactionLock: 'pan' | 'zoom' | null = null\n  private maybeClearInteractionLock = () => {\n    if (this.interactionLock) {\n      if (!this.frameHadWheelEvent) {\n        this.framesWithoutWheelEvents++\n        if (this.framesWithoutWheelEvents >= 2) {\n          this.interactionLock = null\n          this.framesWithoutWheelEvents = 0\n        }\n      }\n      this.props.canvasContext.requestFrame()\n    }\n    this.frameHadWheelEvent = false\n  }\n\n  private onBeforeFrame = () => {\n    this.renderRects()\n    this.renderOverlays()\n    this.maybeClearInteractionLock()\n  }\n\n  private renderCanvas = () => {\n    this.props.canvasContext.requestFrame()\n  }\n\n  private pan(logicalViewSpaceDelta: Vec2) {\n    this.interactionLock = 'pan'\n\n    const physicalDelta = this.logicalToPhysicalViewSpace().transformVector(logicalViewSpaceDelta)\n    const configDelta = this.configSpaceToPhysicalViewSpace().inverseTransformVector(physicalDelta)\n\n    if (this.hoveredLabel) {\n      this.props.onNodeHover(null)\n    }\n\n    if (!configDelta) return\n    this.props.transformViewport(AffineTransform.withTranslation(configDelta))\n  }\n\n  private zoom(logicalViewSpaceCenter: Vec2, multiplier: number) {\n    this.interactionLock = 'zoom'\n\n    const physicalCenter = this.logicalToPhysicalViewSpace().transformPosition(\n      logicalViewSpaceCenter,\n    )\n    const configSpaceCenter = this.configSpaceToPhysicalViewSpace().inverseTransformPosition(\n      physicalCenter,\n    )\n    if (!configSpaceCenter) return\n\n    const zoomTransform = AffineTransform.withTranslation(configSpaceCenter.times(-1))\n      .scaledBy(new Vec2(multiplier, 1))\n      .translatedBy(configSpaceCenter)\n\n    this.props.transformViewport(zoomTransform)\n  }\n\n  private lastDragPos: Vec2 | null = null\n  private onMouseDown = (ev: MouseEvent) => {\n    this.lastDragPos = new Vec2(ev.offsetX, ev.offsetY)\n    this.updateCursor()\n    window.addEventListener('mouseup', this.onWindowMouseUp)\n  }\n\n  private onMouseDrag = (ev: MouseEvent) => {\n    if (!this.lastDragPos) return\n    const logicalMousePos = new Vec2(ev.offsetX, ev.offsetY)\n    this.pan(this.lastDragPos.minus(logicalMousePos))\n    this.lastDragPos = logicalMousePos\n\n    // When panning by scrolling, the element under\n    // the cursor will change, so clear the hovered label.\n    if (this.hoveredLabel) {\n      this.props.onNodeHover(null)\n    }\n  }\n\n  private onDblClick = (ev: MouseEvent) => {\n    if (this.hoveredLabel) {\n      const hoveredBounds = this.hoveredLabel.configSpaceBounds\n      const viewportRect = new Rect(\n        hoveredBounds.origin.minus(new Vec2(0, 1)),\n        hoveredBounds.size.withY(this.props.configSpaceViewportRect.height()),\n      )\n      this.props.setConfigSpaceViewportRect(viewportRect)\n    }\n  }\n\n  private onClick = (ev: MouseEvent) => {\n    if (this.hoveredLabel) {\n      this.props.onNodeSelect(this.hoveredLabel.node)\n      this.renderCanvas()\n    } else {\n      this.props.onNodeSelect(null)\n    }\n  }\n\n  private updateCursor() {\n    if (this.lastDragPos) {\n      document.body.style.cursor = 'grabbing'\n      document.body.style.cursor = '-webkit-grabbing'\n    } else {\n      document.body.style.cursor = 'default'\n    }\n  }\n\n  private onWindowMouseUp = (ev: MouseEvent) => {\n    this.lastDragPos = null\n    this.updateCursor()\n    window.removeEventListener('mouseup', this.onWindowMouseUp)\n  }\n\n  private onMouseMove = (ev: MouseEvent) => {\n    this.updateCursor()\n    if (this.lastDragPos) {\n      ev.preventDefault()\n      this.onMouseDrag(ev)\n      return\n    }\n    this.hoveredLabel = null\n    const logicalViewSpaceMouse = new Vec2(ev.offsetX, ev.offsetY)\n    const physicalViewSpaceMouse = this.logicalToPhysicalViewSpace().transformPosition(\n      logicalViewSpaceMouse,\n    )\n    const configSpaceMouse = this.configSpaceToPhysicalViewSpace().inverseTransformPosition(\n      physicalViewSpaceMouse,\n    )\n\n    if (!configSpaceMouse) return\n\n    const setHoveredLabel = (frame: FlamechartFrame, depth = 0) => {\n      const width = frame.end - frame.start\n      const y = this.props.renderInverted ? this.configSpaceSize().y - 1 - depth : depth\n      const configSpaceBounds = new Rect(new Vec2(frame.start, y), new Vec2(width, 1))\n      if (configSpaceMouse.x < configSpaceBounds.left()) return null\n      if (configSpaceMouse.x > configSpaceBounds.right()) return null\n\n      if (configSpaceBounds.contains(configSpaceMouse)) {\n        this.hoveredLabel = {\n          configSpaceBounds,\n          node: frame.node,\n        }\n      }\n\n      for (let child of frame.children) {\n        setHoveredLabel(child, depth + 1)\n      }\n    }\n\n    for (let frame of this.props.flamechart.getLayers()[0] || []) {\n      setHoveredLabel(frame)\n    }\n\n    if (this.hoveredLabel) {\n      this.props.onNodeHover({node: this.hoveredLabel!.node, event: ev})\n    } else {\n      this.props.onNodeHover(null)\n    }\n\n    this.renderCanvas()\n  }\n\n  private onMouseLeave = (ev: MouseEvent) => {\n    this.hoveredLabel = null\n    this.props.onNodeHover(null)\n    this.renderCanvas()\n  }\n\n  private onWheel = (ev: WheelEvent) => {\n    ev.preventDefault()\n    this.frameHadWheelEvent = true\n\n    const isZoom = ev.metaKey || ev.ctrlKey\n\n    let deltaY = ev.deltaY\n    let deltaX = ev.deltaX\n    if (ev.deltaMode === ev.DOM_DELTA_LINE) {\n      deltaY *= this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT\n      deltaX *= this.LOGICAL_VIEW_SPACE_FRAME_HEIGHT\n    }\n\n    if (isZoom && this.interactionLock !== 'pan') {\n      let multiplier = 1 + deltaY / 100\n\n      // On Chrome & Firefox, pinch-to-zoom maps to\n      // WheelEvent + Ctrl Key. We'll accelerate it in\n      // this case, since it feels a bit sluggish otherwise.\n      if (ev.ctrlKey) {\n        multiplier = 1 + deltaY / 40\n      }\n\n      multiplier = clamp(multiplier, 0.1, 10.0)\n\n      this.zoom(new Vec2(ev.offsetX, ev.offsetY), multiplier)\n    } else if (this.interactionLock !== 'zoom') {\n      this.pan(new Vec2(deltaX, deltaY))\n    }\n\n    this.renderCanvas()\n  }\n\n  onWindowKeyPress = (ev: KeyboardEvent) => {\n    if (!this.container) return\n    const {width, height} = this.container.getBoundingClientRect()\n\n    if (ev.key === '=' || ev.key === '+') {\n      this.zoom(new Vec2(width / 2, height / 2), 0.5)\n      ev.preventDefault()\n    } else if (ev.key === '-' || ev.key === '_') {\n      this.zoom(new Vec2(width / 2, height / 2), 2)\n      ev.preventDefault()\n    } else if (ev.key === '0') {\n      this.zoom(new Vec2(width / 2, height / 2), 1e9)\n    } else if (ev.key === 'ArrowRight' || ev.key === 'd') {\n      this.pan(new Vec2(100, 0))\n    } else if (ev.key === 'ArrowLeft' || ev.key === 'a') {\n      this.pan(new Vec2(-100, 0))\n    } else if (ev.key === 'ArrowUp' || ev.key === 'w') {\n      this.pan(new Vec2(0, -100))\n    } else if (ev.key === 'ArrowDown' || ev.key === 's') {\n      this.pan(new Vec2(0, 100))\n    } else if (ev.key === 'Escape') {\n      this.props.onNodeSelect(null)\n      this.renderCanvas()\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false\n  }\n  componentWillReceiveProps(nextProps: FlamechartPanZoomViewProps) {\n    if (this.props.flamechart !== nextProps.flamechart) {\n      this.hoveredLabel = null\n      this.lastBounds = null\n      this.renderCanvas()\n    } else if (this.props.selectedNode !== nextProps.selectedNode) {\n      this.renderCanvas()\n    } else if (this.props.configSpaceViewportRect !== nextProps.configSpaceViewportRect) {\n      this.renderCanvas()\n    }\n  }\n  componentDidMount() {\n    this.props.canvasContext.addBeforeFrameHandler(this.onBeforeFrame)\n    window.addEventListener('resize', this.onWindowResize)\n    window.addEventListener('keydown', this.onWindowKeyPress)\n  }\n  componentWillUnmount() {\n    this.props.canvasContext.removeBeforeFrameHandler(this.onBeforeFrame)\n    window.removeEventListener('resize', this.onWindowResize)\n    window.removeEventListener('keydown', this.onWindowKeyPress)\n  }\n\n  render() {\n    return (\n      <div\n        className={css(style.panZoomView, commonStyle.vbox)}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseLeave={this.onMouseLeave}\n        onClick={this.onClick}\n        onDblClick={this.onDblClick}\n        onWheel={this.onWheel}\n        ref={this.containerRef}\n      >\n        <canvas width={1} height={1} ref={this.overlayCanvasRef} className={css(style.fill)} />\n      </div>\n    )\n  }\n}\n","import {ReloadableComponent} from './reloadable'\nimport {Vec2} from './math'\nimport {Sizes, Colors, FontSize, FontFamily, ZIndex} from './style'\nimport {css, StyleSheet} from 'aphrodite'\nimport {h} from 'preact'\n\ninterface HovertipProps {\n  containerSize: Vec2\n  offset: Vec2\n}\n\nexport class Hovertip extends ReloadableComponent<HovertipProps, {}> {\n  render() {\n    const {containerSize, offset} = this.props\n    const width = containerSize.x\n    const height = containerSize.y\n\n    const positionStyle: {\n      left?: number\n      right?: number\n      top?: number\n      bottom?: number\n    } = {}\n\n    const OFFSET_FROM_MOUSE = 7\n    if (offset.x + OFFSET_FROM_MOUSE + Sizes.TOOLTIP_WIDTH_MAX < width) {\n      positionStyle.left = offset.x + OFFSET_FROM_MOUSE\n    } else {\n      positionStyle.right = width - offset.x + 1\n    }\n\n    if (offset.y + OFFSET_FROM_MOUSE + Sizes.TOOLTIP_HEIGHT_MAX < height) {\n      positionStyle.top = offset.y + OFFSET_FROM_MOUSE\n    } else {\n      positionStyle.bottom = height - offset.y + 1\n    }\n\n    return (\n      <div className={css(style.hoverTip)} style={positionStyle}>\n        <div className={css(style.hoverTipRow)}>{this.props.children}</div>\n      </div>\n    )\n  }\n}\n\nconst HOVERTIP_PADDING = 2\n\nconst style = StyleSheet.create({\n  hoverTip: {\n    position: 'absolute',\n    background: Colors.WHITE,\n    border: '1px solid black',\n    maxWidth: Sizes.TOOLTIP_WIDTH_MAX,\n    paddingTop: HOVERTIP_PADDING,\n    paddingBottom: HOVERTIP_PADDING,\n    pointerEvents: 'none',\n    userSelect: 'none',\n    fontSize: FontSize.LABEL,\n    fontFamily: FontFamily.MONOSPACE,\n    zIndex: ZIndex.HOVERTIP,\n  },\n  hoverTipRow: {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflowX: 'hidden',\n    paddingLeft: HOVERTIP_PADDING,\n    paddingRight: HOVERTIP_PADDING,\n    maxWidth: Sizes.TOOLTIP_WIDTH_MAX,\n  },\n})\n","import {h} from 'preact'\nimport {css} from 'aphrodite'\nimport {ReloadableComponent} from './reloadable'\n\nimport {CallTreeNode, Frame} from './profile'\nimport {Flamechart} from './flamechart'\n\nimport {Rect, Vec2, AffineTransform} from './math'\nimport {formatPercent} from './utils'\nimport {FlamechartMinimapView} from './flamechart-minimap-view'\n\nimport {style} from './flamechart-style'\nimport {Sizes, commonStyle} from './style'\nimport {CanvasContext} from './canvas-context'\nimport {FlamechartRenderer} from './flamechart-renderer'\nimport {FlamechartDetailView} from './flamechart-detail-view'\nimport {FlamechartPanZoomView} from './flamechart-pan-zoom-view'\nimport {Hovertip} from './hovertip'\n\ninterface FlamechartViewProps {\n  flamechart: Flamechart\n  canvasContext: CanvasContext\n  flamechartRenderer: FlamechartRenderer\n  getCSSColorForFrame: (frame: Frame) => string\n}\n\ninterface FlamechartViewState {\n  hover: {\n    node: CallTreeNode\n    event: MouseEvent\n  } | null\n  selectedNode: CallTreeNode | null\n  configSpaceViewportRect: Rect\n}\n\nexport class FlamechartView extends ReloadableComponent<FlamechartViewProps, FlamechartViewState> {\n  constructor() {\n    super()\n    this.state = {\n      hover: null,\n      selectedNode: null,\n      configSpaceViewportRect: Rect.empty,\n    }\n  }\n\n  private configSpaceSize() {\n    return new Vec2(\n      this.props.flamechart.getTotalWeight(),\n      this.props.flamechart.getLayers().length,\n    )\n  }\n\n  private minConfigSpaceViewportRectWidth() {\n    return Math.min(\n      this.props.flamechart.getTotalWeight(),\n      3 * this.props.flamechart.getMinFrameWidth(),\n    )\n  }\n\n  private setConfigSpaceViewportRect = (viewportRect: Rect): void => {\n    const configSpaceDetailViewHeight = Sizes.DETAIL_VIEW_HEIGHT / Sizes.FRAME_HEIGHT\n\n    const configSpaceOriginBounds = new Rect(\n      new Vec2(0, -1),\n      Vec2.max(\n        new Vec2(0, 0),\n        this.configSpaceSize()\n          .minus(viewportRect.size)\n          .plus(new Vec2(0, configSpaceDetailViewHeight + 1)),\n      ),\n    )\n\n    const configSpaceSizeBounds = new Rect(\n      new Vec2(this.minConfigSpaceViewportRectWidth(), viewportRect.height()),\n      new Vec2(this.configSpaceSize().x, viewportRect.height()),\n    )\n\n    this.setState({\n      configSpaceViewportRect: new Rect(\n        configSpaceOriginBounds.closestPointTo(viewportRect.origin),\n        configSpaceSizeBounds.closestPointTo(viewportRect.size),\n      ),\n    })\n  }\n\n  private transformViewport = (transform: AffineTransform): void => {\n    const viewportRect = transform.transformRect(this.state.configSpaceViewportRect)\n    this.setConfigSpaceViewportRect(viewportRect)\n  }\n\n  onNodeHover = (hover: {node: CallTreeNode; event: MouseEvent} | null) => {\n    this.setState({hover})\n  }\n\n  onNodeClick = (node: CallTreeNode | null) => {\n    this.setState({\n      selectedNode: node,\n    })\n  }\n\n  formatValue(weight: number) {\n    const totalWeight = this.props.flamechart.getTotalWeight()\n    const percent = 100 * weight / totalWeight\n    const formattedPercent = formatPercent(percent)\n    return `${this.props.flamechart.formatValue(weight)} (${formattedPercent})`\n  }\n\n  renderTooltip() {\n    if (!this.container) return null\n\n    const {hover} = this.state\n    if (!hover) return null\n    const {width, height, left, top} = this.container.getBoundingClientRect()\n    const offset = new Vec2(hover.event.clientX - left, hover.event.clientY - top)\n\n    return (\n      <Hovertip containerSize={new Vec2(width, height)} offset={offset}>\n        <span className={css(style.hoverCount)}>\n          {this.formatValue(hover.node.getTotalWeight())}\n        </span>{' '}\n        {hover.node.frame.name}\n      </Hovertip>\n    )\n  }\n\n  container: HTMLDivElement | null = null\n  containerRef = (container?: Element) => {\n    this.container = (container as HTMLDivElement) || null\n  }\n\n  panZoomView: FlamechartPanZoomView | null = null\n  panZoomRef = (view: FlamechartPanZoomView | null) => {\n    this.panZoomView = view\n  }\n  subcomponents() {\n    return {\n      panZoom: this.panZoomView,\n    }\n  }\n\n  render() {\n    return (\n      <div className={css(style.fill, commonStyle.vbox)} ref={this.containerRef}>\n        <FlamechartMinimapView\n          configSpaceViewportRect={this.state.configSpaceViewportRect}\n          transformViewport={this.transformViewport}\n          flamechart={this.props.flamechart}\n          flamechartRenderer={this.props.flamechartRenderer}\n          canvasContext={this.props.canvasContext}\n          setConfigSpaceViewportRect={this.setConfigSpaceViewportRect}\n        />\n        <FlamechartPanZoomView\n          ref={this.panZoomRef}\n          canvasContext={this.props.canvasContext}\n          flamechart={this.props.flamechart}\n          flamechartRenderer={this.props.flamechartRenderer}\n          renderInverted={false}\n          onNodeHover={this.onNodeHover}\n          onNodeSelect={this.onNodeClick}\n          selectedNode={this.state.selectedNode}\n          transformViewport={this.transformViewport}\n          configSpaceViewportRect={this.state.configSpaceViewportRect}\n          setConfigSpaceViewportRect={this.setConfigSpaceViewportRect}\n        />\n        {this.renderTooltip()}\n        {this.state.selectedNode && (\n          <FlamechartDetailView\n            flamechart={this.props.flamechart}\n            getCSSColorForFrame={this.props.getCSSColorForFrame}\n            selectedNode={this.state.selectedNode}\n          />\n        )}\n      </div>\n    )\n  }\n}\n","export interface HashParams {\n  profileURL?: string\n  title?: string\n}\n\nexport function getHashParams(): HashParams {\n  try {\n    const hashContents = window.location.hash\n    if (!hashContents.startsWith('#')) {\n      return {}\n    }\n    const components = hashContents.substr(1).split('&')\n    const result: HashParams = {}\n    for (const component of components) {\n      const [key, value] = component.split('=')\n      if (key === 'profileURL') {\n        result.profileURL = decodeURIComponent(value)\n      } else if (key === 'title') {\n        result.title = decodeURIComponent(value)\n      }\n    }\n    return result\n  } catch (e) {\n    console.error(`Error when loading hash fragment.`)\n    console.error(e)\n    return {}\n  }\n}\n","// A simple implementation of an efficient scrolling list view which\n// renders only items within the viewport + a couple extra items.\n\nimport {h} from 'preact'\nimport {ReloadableComponent} from './reloadable'\n\nexport interface ListItem {\n  size: number\n}\n\ninterface ScrollableListViewProps {\n  items: ListItem[]\n  renderItems: (firstVisibleIndex: number, lastVisibleIndex: number) => JSX.Element | JSX.Element[]\n  className?: string\n}\n\ninterface ScrollableListViewState {\n  firstVisibleIndex: number | null\n  lastVisibleIndex: number | null\n  invisiblePrefixSize: number | null\n  viewportSize: number | null\n  cachedTotalSize: number\n}\n\nexport class ScrollableListView extends ReloadableComponent<\n  ScrollableListViewProps,\n  ScrollableListViewState\n> {\n  constructor(props: ScrollableListViewProps) {\n    super(props)\n    this.state = {\n      firstVisibleIndex: null,\n      lastVisibleIndex: null,\n      invisiblePrefixSize: null,\n      viewportSize: null,\n      cachedTotalSize: props.items.reduce((a, b) => a + b.size, 0),\n    }\n  }\n\n  private viewport: HTMLDivElement | null = null\n  private viewportRef = (viewport?: Element) => {\n    this.viewport = (viewport as HTMLDivElement) || null\n  }\n\n  private recomputeVisibleIndices(props: ScrollableListViewProps) {\n    if (!this.viewport) return\n    const {items} = props\n\n    const viewportSize = this.viewport.getBoundingClientRect().height\n\n    // We render items up to a quarter viewport height outside of the\n    // viewport both above and below to prevent flickering.\n    const minY = this.viewport.scrollTop - viewportSize / 4\n    const maxY = this.viewport.scrollTop + viewportSize + viewportSize / 4\n\n    let total = 0\n    let invisiblePrefixSize = 0\n\n    let i = 0\n    for (; i < items.length; i++) {\n      const item = items[i]\n      invisiblePrefixSize = total\n      total += item.size\n      if (total >= minY) {\n        break\n      }\n    }\n\n    const firstVisibleIndex = i\n\n    for (; i < items.length; i++) {\n      const item = items[i]\n      total += item.size\n      if (total >= maxY) {\n        break\n      }\n    }\n\n    const lastVisibleIndex = Math.min(i, items.length - 1)\n    this.setState({invisiblePrefixSize, firstVisibleIndex, lastVisibleIndex})\n  }\n\n  componentWillReceiveProps(nextProps: ScrollableListViewProps) {\n    if (this.props.items !== nextProps.items) {\n      this.recomputeVisibleIndices(nextProps)\n    }\n  }\n\n  componentDidMount() {\n    this.recomputeVisibleIndices(this.props)\n    window.addEventListener('resize', this.onWindowResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n  }\n\n  onWindowResize = () => {\n    this.recomputeVisibleIndices(this.props)\n  }\n\n  onViewportScroll = (ev: UIEvent) => {\n    this.recomputeVisibleIndices(this.props)\n  }\n\n  render() {\n    const {cachedTotalSize, firstVisibleIndex, lastVisibleIndex, invisiblePrefixSize} = this.state\n\n    return (\n      <div className={this.props.className} ref={this.viewportRef} onScroll={this.onViewportScroll}>\n        <div style={{height: cachedTotalSize}}>\n          <div style={{transform: `translateY(${invisiblePrefixSize}px)`}}>\n            {firstVisibleIndex != null &&\n              lastVisibleIndex != null &&\n              this.props.renderItems(firstVisibleIndex, lastVisibleIndex)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import {h, Component} from 'preact'\nimport {StyleSheet, css} from 'aphrodite'\nimport {ReloadableComponent} from './reloadable'\nimport {Profile, Frame} from './profile'\nimport {sortBy, formatPercent} from './utils'\nimport {FontSize, Colors, Sizes, commonStyle} from './style'\nimport {ColorChit} from './color-chit'\nimport {ScrollableListView, ListItem} from './scrollable-list-view'\n\nexport enum SortField {\n  SYMBOL_NAME,\n  SELF,\n  TOTAL,\n}\n\nexport enum SortDirection {\n  ASCENDING,\n  DESCENDING,\n}\n\nexport interface SortMethod {\n  field: SortField\n  direction: SortDirection\n}\n\ninterface HBarProps {\n  perc: number\n}\n\nclass HBarDisplay extends Component<HBarProps, {}> {\n  render() {\n    return (\n      <div className={css(style.hBarDisplay)}>\n        <div className={css(style.hBarDisplayFilled)} style={{width: `${this.props.perc}%`}} />\n      </div>\n    )\n  }\n}\n\ninterface SortIconProps {\n  activeDirection: SortDirection | null\n}\n\nclass SortIcon extends Component<SortIconProps, {}> {\n  render() {\n    const {activeDirection} = this.props\n    const upFill = activeDirection === SortDirection.ASCENDING ? Colors.GRAY : Colors.LIGHT_GRAY\n    const downFill = activeDirection === SortDirection.DESCENDING ? Colors.GRAY : Colors.LIGHT_GRAY\n\n    return (\n      <svg\n        width=\"8\"\n        height=\"10\"\n        viewBox=\"0 0 8 10\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={css(style.sortIcon)}\n      >\n        <path d=\"M0 4L4 0L8 4H0Z\" fill={upFill} />\n        <path d=\"M0 4L4 0L8 4H0Z\" transform=\"translate(0 10) scale(1 -1)\" fill={downFill} />\n      </svg>\n    )\n  }\n}\n\ninterface ProfileTableViewProps {\n  profile: Profile\n  selectedFrame: Frame | null\n  setSelectedFrame: (frame: Frame | null) => void\n  getCSSColorForFrame: (frame: Frame) => string\n  sortMethod: SortMethod\n  setSortMethod: (sortMethod: SortMethod) => void\n}\n\nexport class ProfileTableView extends ReloadableComponent<ProfileTableViewProps, void> {\n  setSelectedFrame = (frame: Frame | null) => {\n    this.props.setSelectedFrame(frame)\n  }\n\n  renderRow(frame: Frame, index: number) {\n    const {profile, selectedFrame} = this.props\n\n    const totalWeight = frame.getTotalWeight()\n    const selfWeight = frame.getSelfWeight()\n    const totalPerc = 100.0 * totalWeight / profile.getTotalNonIdleWeight()\n    const selfPerc = 100.0 * selfWeight / profile.getTotalNonIdleWeight()\n\n    const selected = frame === selectedFrame\n\n    // We intentionally use index rather than frame.key here as the tr key\n    // in order to re-use rows when sorting rather than creating all new elements.\n    return (\n      <tr\n        key={`${index}`}\n        onClick={this.setSelectedFrame.bind(null, frame)}\n        className={css(\n          style.tableRow,\n          index % 2 == 0 && style.tableRowEven,\n          selected && style.tableRowSelected,\n        )}\n      >\n        <td className={css(style.numericCell)}>\n          {profile.formatValue(totalWeight)} ({formatPercent(totalPerc)})\n          <HBarDisplay perc={totalPerc} />\n        </td>\n        <td className={css(style.numericCell)}>\n          {profile.formatValue(selfWeight)} ({formatPercent(selfPerc)})\n          <HBarDisplay perc={selfPerc} />\n        </td>\n        <td title={frame.file} className={css(style.textCell)}>\n          <ColorChit color={this.props.getCSSColorForFrame(frame)} />\n          {frame.name}\n        </td>\n      </tr>\n    )\n  }\n\n  onSortClick = (field: SortField, ev: MouseEvent) => {\n    ev.preventDefault()\n\n    const {sortMethod} = this.props\n\n    if (sortMethod.field == field) {\n      // Toggle\n      this.props.setSortMethod({\n        field,\n        direction:\n          sortMethod.direction === SortDirection.ASCENDING\n            ? SortDirection.DESCENDING\n            : SortDirection.ASCENDING,\n      })\n    } else {\n      // Set a sane default\n      switch (field) {\n        case SortField.SYMBOL_NAME: {\n          this.props.setSortMethod({field, direction: SortDirection.ASCENDING})\n          break\n        }\n        case SortField.SELF: {\n          this.props.setSortMethod({field, direction: SortDirection.DESCENDING})\n          break\n        }\n        case SortField.TOTAL: {\n          this.props.setSortMethod({field, direction: SortDirection.DESCENDING})\n          break\n        }\n      }\n    }\n  }\n\n  render() {\n    const {profile, sortMethod} = this.props\n\n    const frameList: Frame[] = []\n\n    profile.forEachFrame(f => frameList.push(f))\n\n    // TODO(jlfwong): This is pretty inefficient to do this on every render, but doesn't\n    // seem to be a bottleneck, so we'll leave it alone.\n    switch (sortMethod.field) {\n      case SortField.SYMBOL_NAME: {\n        sortBy(frameList, f => f.name.toLowerCase())\n        break\n      }\n      case SortField.SELF: {\n        sortBy(frameList, f => f.getSelfWeight())\n        break\n      }\n      case SortField.TOTAL: {\n        sortBy(frameList, f => f.getTotalWeight())\n        break\n      }\n    }\n    if (sortMethod.direction === SortDirection.DESCENDING) {\n      frameList.reverse()\n    }\n\n    const renderItems = (firstIndex: number, lastIndex: number) => {\n      const rows: JSX.Element[] = []\n\n      for (let i = firstIndex; i <= lastIndex; i++) {\n        rows.push(this.renderRow(frameList[i], i))\n      }\n\n      return <table className={css(style.tableView)}>{rows}</table>\n    }\n\n    const listItems: ListItem[] = frameList.map(f => ({size: Sizes.FRAME_HEIGHT}))\n\n    return (\n      <div className={css(commonStyle.vbox, style.profileTableView)}>\n        <table className={css(style.tableView)}>\n          <thead className={css(style.tableHeader)}>\n            <tr>\n              <th\n                className={css(style.numericCell)}\n                onClick={ev => this.onSortClick(SortField.TOTAL, ev)}\n              >\n                <SortIcon\n                  activeDirection={\n                    sortMethod.field === SortField.TOTAL ? sortMethod.direction : null\n                  }\n                />\n                Total\n              </th>\n              <th\n                className={css(style.numericCell)}\n                onClick={ev => this.onSortClick(SortField.SELF, ev)}\n              >\n                <SortIcon\n                  activeDirection={\n                    sortMethod.field === SortField.SELF ? sortMethod.direction : null\n                  }\n                />\n                Self\n              </th>\n              <th\n                className={css(style.textCell)}\n                onClick={ev => this.onSortClick(SortField.SYMBOL_NAME, ev)}\n              >\n                <SortIcon\n                  activeDirection={\n                    sortMethod.field === SortField.SYMBOL_NAME ? sortMethod.direction : null\n                  }\n                />\n                Symbol Name\n              </th>\n            </tr>\n          </thead>\n        </table>\n        <ScrollableListView\n          items={listItems}\n          className={css(style.scrollView)}\n          renderItems={renderItems}\n        />\n      </div>\n    )\n  }\n}\n\nconst style = StyleSheet.create({\n  profileTableView: {\n    background: Colors.WHITE,\n    height: '100%',\n  },\n  scrollView: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n  },\n  tableView: {\n    width: '100%',\n    fontSize: FontSize.LABEL,\n    background: Colors.WHITE,\n    cursor: 'default',\n  },\n  tableHeader: {\n    borderBottom: `2px solid ${Colors.LIGHT_GRAY}`,\n    textAlign: 'left',\n    color: Colors.GRAY,\n    userSelect: 'none',\n  },\n  sortIcon: {\n    position: 'relative',\n    top: 1,\n    marginRight: Sizes.FRAME_HEIGHT / 4,\n  },\n  tableRow: {\n    height: Sizes.FRAME_HEIGHT,\n  },\n  tableRowEven: {\n    background: Colors.OFF_WHITE,\n  },\n  tableRowSelected: {\n    background: Colors.DARK_BLUE,\n    color: Colors.WHITE,\n  },\n  numericCell: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    textAlign: 'right',\n    paddingRight: Sizes.FRAME_HEIGHT,\n    width: 6 * Sizes.FRAME_HEIGHT,\n    minWidth: 6 * Sizes.FRAME_HEIGHT,\n  },\n  textCell: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    width: '100%',\n    maxWidth: 0,\n  },\n  hBarDisplay: {\n    position: 'absolute',\n    background: Colors.TRANSPARENT_GREEN,\n    bottom: 2,\n    height: 2,\n    width: `calc(100% - ${2 * Sizes.FRAME_HEIGHT}px)`,\n    right: Sizes.FRAME_HEIGHT,\n  },\n  hBarDisplayFilled: {\n    height: '100%',\n    position: 'absolute',\n    background: Colors.GREEN,\n    right: 0,\n  },\n})\n","class ListNode<V> {\n  prev: ListNode<V> | null = null\n  next: ListNode<V> | null = null\n  constructor(readonly data: V) {}\n}\n\nexport class List<V> {\n  private head: ListNode<V> | null = null\n  private tail: ListNode<V> | null = null\n  private size: number = 0\n  constructor() {}\n\n  getHead(): ListNode<V> | null {\n    return this.head\n  }\n  getTail(): ListNode<V> | null {\n    return this.tail\n  }\n  getSize(): number {\n    return this.size\n  }\n\n  append(node: ListNode<V>): void {\n    if (!this.tail) {\n      this.head = this.tail = node\n    } else {\n      this.tail.next = node\n      node.prev = this.tail\n      this.tail = node\n    }\n    this.size++\n  }\n\n  prepend(node: ListNode<V>): ListNode<V> {\n    if (!this.head) {\n      this.head = this.tail = node\n    } else {\n      this.head.prev = node\n      node.next = this.head\n      this.head = node\n    }\n    this.size++\n    return node\n  }\n\n  pop(): ListNode<V> | null {\n    if (!this.tail) {\n      return null\n    } else {\n      const ret = this.tail\n      if (ret.prev) {\n        this.tail = ret.prev\n        this.tail.next = null\n      } else {\n        this.head = this.tail = null\n      }\n      this.size--\n      ret.prev = null\n      return ret\n    }\n  }\n\n  dequeue(): ListNode<V> | null {\n    if (!this.head) {\n      return null\n    } else {\n      const ret = this.head\n      if (ret.next) {\n        this.head = ret.next\n        this.head.prev = null\n      } else {\n        this.head = this.tail = null\n      }\n      this.size--\n      ret.next = null\n      return ret\n    }\n  }\n\n  remove(node: ListNode<V>): void {\n    if (node.prev == null) {\n      this.dequeue()\n    } else if (node.next == null) {\n      this.pop()\n    } else {\n      // Neither first nor last, should be safe to just link\n      // neighbours.\n      node.next.prev = node.prev\n      node.prev.next = node.next\n      node.next = null\n      node.prev = null\n      this.size--\n    }\n  }\n}\n\ninterface LRUCacheNode<K, V> {\n  value: V\n  listNode: ListNode<K>\n}\n\nexport class LRUCache<K, V> {\n  private list = new List<K>()\n  private map = new Map<K, LRUCacheNode<K, V>>()\n\n  constructor(private capacity: number) {}\n\n  has(key: K): boolean {\n    return this.map.has(key)\n  }\n\n  get(key: K): V | null {\n    const node = this.map.get(key)\n    if (!node) {\n      return null\n    }\n    // Bring node to the front of the list\n    this.list.remove(node.listNode)\n    this.list.prepend(node.listNode)\n\n    return node ? node.value : null\n  }\n\n  getSize() {\n    return this.list.getSize()\n  }\n\n  getCapacity() {\n    return this.capacity\n  }\n\n  insert(key: K, value: V) {\n    const node = this.map.get(key)\n    if (node) {\n      this.list.remove(node.listNode)\n    }\n    // Evict old entries when out of capacity\n    while (this.list.getSize() >= this.capacity) {\n      this.map.delete(this.list.pop()!.data)\n    }\n    const listNode = this.list.prepend(new ListNode(key))\n    this.map.set(key, {value, listNode})\n  }\n\n  getOrInsert(key: K, f: (key: K) => V): V {\n    let value = this.get(key)\n    if (value == null) {\n      value = f(key)\n      this.insert(key, value)\n    }\n    return value\n  }\n\n  removeLRU(): [K, V] | null {\n    const oldest = this.list.pop()\n    if (!oldest) return null\n    const key = oldest.data\n    const value = this.map.get(key)!.value\n    this.map.delete(key)\n    return [key, value]\n  }\n}\n","import regl from 'regl'\nimport {LRUCache} from './lru-cache'\nimport {RectangleBatch} from './rectangle-batch-renderer'\nimport {CanvasContext} from './canvas-context'\nimport {Rect, Vec2} from './math'\nimport {Color} from './color'\n\nexport class RowAtlas<K> {\n  texture: regl.Texture\n  private framebuffer: regl.Framebuffer\n  private renderToFramebuffer: regl.Command<{}>\n  private rowCache: LRUCache<K, number>\n  private clearLineBatch: RectangleBatch\n\n  constructor(private canvasContext: CanvasContext) {\n    this.texture = canvasContext.gl.texture({\n      width: Math.min(canvasContext.getMaxTextureSize(), 4096),\n      height: Math.min(canvasContext.getMaxTextureSize(), 4096),\n      wrapS: 'clamp',\n      wrapT: 'clamp',\n    })\n    this.framebuffer = canvasContext.gl.framebuffer({color: [this.texture]})\n    this.rowCache = new LRUCache(this.texture.height)\n    this.renderToFramebuffer = canvasContext.gl({\n      framebuffer: this.framebuffer,\n    })\n    this.clearLineBatch = canvasContext.createRectangleBatch()\n    this.clearLineBatch.addRect(Rect.unit, new Color(0, 0, 0, 0))\n  }\n\n  has(key: K) {\n    return this.rowCache.has(key)\n  }\n  getResolution() {\n    return this.texture.width\n  }\n  getCapacity() {\n    return this.texture.height\n  }\n\n  private allocateLine(key: K): number {\n    if (this.rowCache.getSize() < this.rowCache.getCapacity()) {\n      // Not in cache, but cache isn't full\n      const row = this.rowCache.getSize()\n      this.rowCache.insert(key, row)\n      return row\n    } else {\n      // Not in cache, and cache is full. Evict something.\n      const [, row] = this.rowCache.removeLRU()!\n      this.rowCache.insert(key, row)\n      return row\n    }\n  }\n\n  writeToAtlasIfNeeded(keys: K[], render: (textureDstRect: Rect, key: K) => void) {\n    this.renderToFramebuffer((context: regl.Context) => {\n      for (let key of keys) {\n        let row = this.rowCache.get(key)\n        if (row != null) {\n          // Already cached!\n          continue\n        }\n        // Not cached -- we'll have to actually render\n        row = this.allocateLine(key)\n\n        const textureRect = new Rect(new Vec2(0, row), new Vec2(this.texture.width, 1))\n        this.canvasContext.drawRectangleBatch({\n          batch: this.clearLineBatch,\n          configSpaceSrcRect: Rect.unit,\n          physicalSpaceDstRect: textureRect,\n        })\n        render(textureRect, key)\n      }\n    })\n  }\n\n  renderViaAtlas(key: K, dstRect: Rect): boolean {\n    let row = this.rowCache.get(key)\n    if (row == null) {\n      return false\n    }\n\n    const textureRect = new Rect(new Vec2(0, row), new Vec2(this.texture.width, 1))\n\n    // At this point, we have the row in cache, and we can\n    // paint directly from it into the framebuffer.\n    this.canvasContext.drawTexture({\n      texture: this.texture,\n      srcRect: textureRect,\n      dstRect: dstRect,\n    })\n    return true\n  }\n}\n","type AsmJsSymbolMap = Map<string, string>\n\n// This imports symbol maps generated by emscripten using the \"--emit-symbol-map\" flag.\n// It allows you to visualize a profile captured in a release build as long as you also\n// have the associated symbol map. To do this, first drop the profile into speedscope\n// and then drop the symbol map. After the second drop, the symbols will be remapped to\n// their original names.\nexport function importAsmJsSymbolMap(contents: string): AsmJsSymbolMap | null {\n  const lines = contents.split('\\n')\n  if (!lines.length) return null\n\n  // Remove a trailing blank line if there is one\n  if (lines[lines.length - 1] === '') lines.pop()\n  if (!lines.length) return null\n\n  const map: AsmJsSymbolMap = new Map()\n  const regex = /^([\\$\\w]+):([\\$\\w]+)$/\n\n  for (const line of lines) {\n    const match = regex.exec(line)\n    if (!match) return null\n    map.set(match[1], match[2])\n  }\n\n  return map\n}\n","import {ReloadableComponent} from './reloadable'\nimport {Profile, Frame, CallTreeNode} from './profile'\nimport {StyleSheet, css} from 'aphrodite'\nimport {SortMethod, ProfileTableView} from './profile-table-view'\nimport {h} from 'preact'\nimport {commonStyle, Sizes, Colors, FontSize} from './style'\nimport {CanvasContext} from './canvas-context'\nimport {FlamechartRenderer, FlamechartRowAtlasKey} from './flamechart-renderer'\nimport {Flamechart} from './flamechart'\nimport {RowAtlas} from './row-atlas'\nimport {Rect, AffineTransform, Vec2} from './math'\nimport {FlamechartPanZoomView, FlamechartPanZoomViewProps} from './flamechart-pan-zoom-view'\nimport {noop, formatPercent} from './utils'\nimport {Hovertip} from './hovertip'\n\ninterface FlamechartWrapperProps {\n  flamechart: Flamechart\n  canvasContext: CanvasContext\n  flamechartRenderer: FlamechartRenderer\n  renderInverted: boolean\n}\n\ninterface FlamechartWrapperState {\n  hover: {\n    node: CallTreeNode\n    event: MouseEvent\n  } | null\n  configSpaceViewportRect: Rect\n}\n\nexport class FlamechartWrapper extends ReloadableComponent<\n  FlamechartWrapperProps,\n  FlamechartWrapperState\n> {\n  constructor(props: FlamechartWrapperProps) {\n    super(props)\n    this.state = {\n      hover: null,\n      configSpaceViewportRect: Rect.empty,\n    }\n  }\n\n  private clampViewportToFlamegraph(viewportRect: Rect, flamegraph: Flamechart, inverted: boolean) {\n    const configSpaceSize = new Vec2(flamegraph.getTotalWeight(), flamegraph.getLayers().length)\n\n    let configSpaceOriginBounds = new Rect(\n      new Vec2(0, inverted ? 0 : -1),\n      Vec2.max(new Vec2(0, 0), configSpaceSize.minus(viewportRect.size).plus(new Vec2(0, 1))),\n    )\n\n    const minConfigSpaceViewportRectWidth = Math.min(\n      flamegraph.getTotalWeight(),\n      3 * flamegraph.getMinFrameWidth(),\n    )\n\n    const configSpaceSizeBounds = new Rect(\n      new Vec2(minConfigSpaceViewportRectWidth, viewportRect.height()),\n      new Vec2(configSpaceSize.x, viewportRect.height()),\n    )\n\n    return new Rect(\n      configSpaceOriginBounds.closestPointTo(viewportRect.origin),\n      configSpaceSizeBounds.closestPointTo(viewportRect.size),\n    )\n  }\n\n  private setConfigSpaceViewportRect = (viewportRect: Rect) => {\n    this.setState({\n      configSpaceViewportRect: this.clampViewportToFlamegraph(\n        viewportRect,\n        this.props.flamechart,\n        this.props.renderInverted,\n      ),\n    })\n  }\n\n  private transformViewport = (transform: AffineTransform) => {\n    this.setConfigSpaceViewportRect(transform.transformRect(this.state.configSpaceViewportRect))\n  }\n\n  private formatValue(weight: number) {\n    const totalWeight = this.props.flamechart.getTotalWeight()\n    const percent = 100 * weight / totalWeight\n    const formattedPercent = formatPercent(percent)\n    return `${this.props.flamechart.formatValue(weight)} (${formattedPercent})`\n  }\n\n  private renderTooltip() {\n    if (!this.container) return null\n\n    const {hover} = this.state\n    if (!hover) return null\n    const {width, height, left, top} = this.container.getBoundingClientRect()\n    const offset = new Vec2(hover.event.clientX - left, hover.event.clientY - top)\n\n    return (\n      <Hovertip containerSize={new Vec2(width, height)} offset={offset}>\n        <span className={css(style.hoverCount)}>\n          {this.formatValue(hover.node.getTotalWeight())}\n        </span>{' '}\n        Hello\n        {hover.node.frame.name}\n      </Hovertip>\n    )\n  }\n\n  container: HTMLDivElement | null = null\n  containerRef = (container?: Element) => {\n    this.container = (container as HTMLDivElement) || null\n  }\n\n  private setNodeHover = (hover: {node: CallTreeNode; event: MouseEvent} | null) => {\n    this.setState({hover})\n  }\n\n  render() {\n    const props: FlamechartPanZoomViewProps = {\n      ...(this.props as FlamechartWrapperProps),\n      selectedNode: null,\n      onNodeHover: this.setNodeHover,\n      onNodeSelect: noop,\n      configSpaceViewportRect: this.state.configSpaceViewportRect,\n      setConfigSpaceViewportRect: this.setConfigSpaceViewportRect,\n      transformViewport: this.transformViewport,\n    }\n    return (\n      <div\n        className={css(commonStyle.fillY, commonStyle.fillX, commonStyle.vbox)}\n        ref={this.containerRef}\n      >\n        <FlamechartPanZoomView {...props} />\n        {this.renderTooltip()}\n      </div>\n    )\n  }\n}\n\ninterface SandwichViewProps {\n  profile: Profile\n  flattenRecursion: boolean\n\n  // TODO(jlfwong): It's kind of awkward requiring both of these\n  getColorBucketForFrame: (frame: Frame) => number\n  getCSSColorForFrame: (frame: Frame) => string\n\n  sortMethod: SortMethod\n  setSortMethod: (sortMethod: SortMethod) => void\n  canvasContext: CanvasContext\n  rowAtlas: RowAtlas<FlamechartRowAtlasKey>\n}\n\ninterface CallerCalleeState {\n  selectedFrame: Frame\n\n  invertedCallerFlamegraph: Flamechart\n  invertedCallerFlamegraphRenderer: FlamechartRenderer\n\n  calleeFlamegraph: Flamechart\n  calleeFlamegraphRenderer: FlamechartRenderer\n}\n\ninterface SandwichViewState {\n  callerCallee: CallerCalleeState | null\n}\n\nexport class SandwichView extends ReloadableComponent<SandwichViewProps, SandwichViewState> {\n  constructor(props: SandwichViewProps) {\n    super(props)\n    this.state = {\n      callerCallee: null,\n    }\n  }\n\n  private setSelectedFrame = (\n    selectedFrame: Frame | null,\n    props: SandwichViewProps = this.props,\n  ) => {\n    const {profile, canvasContext, rowAtlas, getColorBucketForFrame, flattenRecursion} = props\n\n    if (!selectedFrame) {\n      this.setState({callerCallee: null})\n      return\n    }\n\n    let invertedCallerProfile = profile.getInvertedProfileForCallersOf(selectedFrame)\n    if (flattenRecursion) {\n      invertedCallerProfile = invertedCallerProfile.getProfileWithRecursionFlattened()\n    }\n\n    const invertedCallerFlamegraph = new Flamechart({\n      getTotalWeight: invertedCallerProfile.getTotalNonIdleWeight.bind(invertedCallerProfile),\n      forEachCall: invertedCallerProfile.forEachCallGrouped.bind(invertedCallerProfile),\n      formatValue: invertedCallerProfile.formatValue.bind(invertedCallerProfile),\n      getColorBucketForFrame,\n    })\n    const invertedCallerFlamegraphRenderer = new FlamechartRenderer(\n      canvasContext,\n      rowAtlas,\n      invertedCallerFlamegraph,\n      {inverted: true},\n    )\n\n    let calleeProfile = profile.getProfileForCalleesOf(selectedFrame)\n\n    if (flattenRecursion) {\n      calleeProfile = calleeProfile.getProfileWithRecursionFlattened()\n    }\n\n    const calleeFlamegraph = new Flamechart({\n      getTotalWeight: calleeProfile.getTotalNonIdleWeight.bind(calleeProfile),\n      forEachCall: calleeProfile.forEachCallGrouped.bind(calleeProfile),\n      formatValue: calleeProfile.formatValue.bind(calleeProfile),\n      getColorBucketForFrame,\n    })\n    const calleeFlamegraphRenderer = new FlamechartRenderer(\n      canvasContext,\n      rowAtlas,\n      calleeFlamegraph,\n    )\n\n    this.setState({\n      callerCallee: {\n        selectedFrame,\n        invertedCallerFlamegraph,\n        invertedCallerFlamegraphRenderer,\n        calleeFlamegraph,\n        calleeFlamegraphRenderer,\n      },\n    })\n  }\n\n  onWindowKeyPress = (ev: KeyboardEvent) => {\n    if (ev.key === 'Escape') {\n      this.setState({callerCallee: null})\n    }\n  }\n\n  componentWillReceiveProps(nextProps: SandwichViewProps) {\n    if (this.props.flattenRecursion !== nextProps.flattenRecursion) {\n      if (this.state.callerCallee) {\n        this.setSelectedFrame(this.state.callerCallee.selectedFrame, nextProps)\n      }\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onWindowKeyPress)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onWindowKeyPress)\n  }\n\n  render() {\n    const {canvasContext} = this.props\n    const {callerCallee} = this.state\n\n    let selectedFrame: Frame | null = null\n    let flamegraphViews: JSX.Element | null = null\n\n    if (callerCallee) {\n      selectedFrame = callerCallee.selectedFrame\n      flamegraphViews = (\n        <div className={css(commonStyle.fillY, style.callersAndCallees, commonStyle.vbox)}>\n          <div className={css(commonStyle.hbox, style.panZoomViewWraper)}>\n            <div className={css(style.flamechartLabelParent)}>\n              <div className={css(style.flamechartLabel)}>Callers</div>\n            </div>\n            <FlamechartWrapper\n              flamechart={callerCallee.invertedCallerFlamegraph}\n              canvasContext={canvasContext}\n              flamechartRenderer={callerCallee.invertedCallerFlamegraphRenderer}\n              renderInverted={true}\n            />\n          </div>\n          <div className={css(style.divider)} />\n          <div className={css(commonStyle.hbox, style.panZoomViewWraper)}>\n            <div className={css(style.flamechartLabelParent, style.flamechartLabelParentBottom)}>\n              <div className={css(style.flamechartLabel, style.flamechartLabelBottom)}>Callees</div>\n            </div>\n            <FlamechartWrapper\n              flamechart={callerCallee.calleeFlamegraph}\n              canvasContext={canvasContext}\n              flamechartRenderer={callerCallee.calleeFlamegraphRenderer}\n              renderInverted={false}\n            />\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className={css(commonStyle.hbox, commonStyle.fillY)}>\n        <div className={css(style.tableView)}>\n          <ProfileTableView\n            selectedFrame={selectedFrame}\n            setSelectedFrame={this.setSelectedFrame}\n            profile={this.props.profile}\n            getCSSColorForFrame={this.props.getCSSColorForFrame}\n            sortMethod={this.props.sortMethod}\n            setSortMethod={this.props.setSortMethod}\n          />\n        </div>\n        {flamegraphViews}\n      </div>\n    )\n  }\n}\n\nconst style = StyleSheet.create({\n  tableView: {\n    flex: 1,\n  },\n  panZoomViewWraper: {\n    flex: 1,\n  },\n  flamechartLabelParent: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    fontSize: FontSize.TITLE,\n    width: FontSize.TITLE * 1.2,\n    borderRight: `1px solid ${Colors.LIGHT_GRAY}`,\n  },\n  flamechartLabelParentBottom: {\n    justifyContent: 'flex-start',\n  },\n  flamechartLabel: {\n    transform: 'rotate(-90deg)',\n    transformOrigin: '50% 50% 0',\n    width: FontSize.TITLE * 1.2,\n    flexShrink: 1,\n  },\n  flamechartLabelBottom: {\n    transform: 'rotate(-90deg)',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  callersAndCallees: {\n    flex: 1,\n    borderLeft: `${Sizes.SEPARATOR_HEIGHT}px solid ${Colors.LIGHT_GRAY}`,\n  },\n  divider: {\n    height: 2,\n    background: Colors.LIGHT_GRAY,\n  },\n  hoverCount: {\n    color: Colors.GREEN,\n  },\n})\n","import {h} from 'preact'\nimport {StyleSheet, css} from 'aphrodite'\nimport {ReloadableComponent, SerializedComponent} from './reloadable'\n\n// TODO(jlfwong): Load these async, since none of them are required for initial render\nimport {importFromBGFlameGraph} from './import/bg-flamegraph'\nimport {importFromStackprof} from './import/stackprof'\nimport {importFromChromeTimeline, importFromChromeCPUProfile} from './import/chrome'\nimport {importFromFirefox} from './import/firefox'\nimport {\n  importFromInstrumentsDeepCopy,\n  importFromInstrumentsTrace,\n  FileSystemDirectoryEntry,\n} from './import/instruments'\n\nimport {FlamechartRenderer, FlamechartRowAtlasKey} from './flamechart-renderer'\nimport {CanvasContext} from './canvas-context'\n\nimport {Profile, Frame} from './profile'\nimport {Flamechart} from './flamechart'\nimport {FlamechartView} from './flamechart-view'\nimport {FontFamily, FontSize, Colors, Sizes} from './style'\nimport {getHashParams, HashParams} from './hash-params'\nimport {SortMethod, SortField, SortDirection} from './profile-table-view'\nimport {triangle} from './utils'\nimport {Color} from './color'\nimport {RowAtlas} from './row-atlas'\nimport {importAsmJsSymbolMap} from './asm-js'\nimport {SandwichView} from './sandwich-view'\n\ndeclare function require(x: string): any\nconst exampleProfileURL = require('./sample/profiles/stackcollapse/perf-vertx-stacks-01-collapsed-all.txt')\n\nconst enum ViewMode {\n  CHRONO_FLAME_CHART,\n  LEFT_HEAVY_FLAME_GRAPH,\n  SANDWICH_VIEW,\n}\n\ninterface ApplicationState {\n  profile: Profile | null\n  activeProfile: Profile | null\n  flattenRecursion: boolean\n\n  chronoFlamechart: Flamechart | null\n  chronoFlamechartRenderer: FlamechartRenderer | null\n\n  leftHeavyFlamegraph: Flamechart | null\n  leftHeavyFlamegraphRenderer: FlamechartRenderer | null\n\n  tableSortMethod: SortMethod\n\n  viewMode: ViewMode\n  dragActive: boolean\n  loading: boolean\n  error: boolean\n}\n\ninterface ToolbarProps extends ApplicationState {\n  setViewMode(order: ViewMode): void\n}\n\nfunction importProfile(fileName: string, contents: string): Profile | null {\n  try {\n    // First pass: Check known file format names to infer the file type\n    if (fileName.endsWith('.cpuprofile')) {\n      console.log('Importing as Chrome CPU Profile')\n      return importFromChromeCPUProfile(JSON.parse(contents))\n    } else if (fileName.endsWith('.chrome.json') || /Profile-\\d{8}T\\d{6}/.exec(fileName)) {\n      console.log('Importing as Chrome Timeline')\n      return importFromChromeTimeline(JSON.parse(contents))\n    } else if (fileName.endsWith('.stackprof.json')) {\n      console.log('Importing as stackprof profile')\n      return importFromStackprof(JSON.parse(contents))\n    } else if (fileName.endsWith('.instruments.txt')) {\n      console.log('Importing as Instruments.app deep copy')\n      return importFromInstrumentsDeepCopy(contents)\n    } else if (fileName.endsWith('.collapsedstack.txt')) {\n      console.log('Importing as collapsed stack format')\n      return importFromBGFlameGraph(contents)\n    }\n\n    // Second pass: Try to guess what file format it is based on structure\n    try {\n      const parsed = JSON.parse(contents)\n      if (parsed['systemHost'] && parsed['systemHost']['name'] == 'Firefox') {\n        console.log('Importing as Firefox profile')\n        return importFromFirefox(parsed)\n      } else if (Array.isArray(parsed) && parsed[parsed.length - 1].name === 'CpuProfile') {\n        console.log('Importing as Chrome CPU Profile')\n        return importFromChromeTimeline(parsed)\n      } else if ('nodes' in parsed && 'samples' in parsed && 'timeDeltas' in parsed) {\n        console.log('Importing as Chrome Timeline')\n        return importFromChromeCPUProfile(parsed)\n      } else if ('mode' in parsed && 'frames' in parsed) {\n        console.log('Importing as stackprof profile')\n        return importFromStackprof(parsed)\n      }\n    } catch (e) {\n      // Format is not JSON\n\n      // If the first line contains \"Symbol Name\", preceded by a tab, it's probably\n      // a deep copy from OS X Instruments.app\n      if (/^[\\w \\t\\(\\)]*\\tSymbol Name/.exec(contents)) {\n        console.log('Importing as Instruments.app deep copy')\n        return importFromInstrumentsDeepCopy(contents)\n      }\n\n      // If every line ends with a space followed by a number, it's probably\n      // the collapsed stack format.\n      const lineCount = contents.split(/\\n/).length\n      if (lineCount >= 1 && lineCount === contents.split(/ \\d+\\n/).length) {\n        console.log('Importing as collapsed stack format')\n        return importFromBGFlameGraph(contents)\n      }\n    }\n\n    return null\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n\nexport class Toolbar extends ReloadableComponent<ToolbarProps, void> {\n  setTimeOrder = () => {\n    this.props.setViewMode(ViewMode.CHRONO_FLAME_CHART)\n  }\n\n  setLeftHeavyOrder = () => {\n    this.props.setViewMode(ViewMode.LEFT_HEAVY_FLAME_GRAPH)\n  }\n\n  setSandwichView = () => {\n    this.props.setViewMode(ViewMode.SANDWICH_VIEW)\n  }\n\n  render() {\n    const help = (\n      <div className={css(style.toolbarTab)}>\n        <a\n          href=\"https://github.com/jlfwong/speedscope#usage\"\n          className={css(style.noLinkStyle)}\n          target=\"_blank\"\n        >\n          <span className={css(style.emoji)}>❓</span>Help\n        </a>\n      </div>\n    )\n\n    if (!this.props.profile) {\n      return (\n        <div className={css(style.toolbar)}>\n          <div className={css(style.toolbarLeft)}>{help}</div>\n          🔬speedscope\n        </div>\n      )\n    }\n    return (\n      <div className={css(style.toolbar)}>\n        <div className={css(style.toolbarLeft)}>\n          <div\n            className={css(\n              style.toolbarTab,\n              this.props.viewMode === ViewMode.CHRONO_FLAME_CHART && style.toolbarTabActive,\n            )}\n            onClick={this.setTimeOrder}\n          >\n            <span className={css(style.emoji)}>🕰</span>Time Order\n          </div>\n          <div\n            className={css(\n              style.toolbarTab,\n              this.props.viewMode === ViewMode.LEFT_HEAVY_FLAME_GRAPH && style.toolbarTabActive,\n            )}\n            onClick={this.setLeftHeavyOrder}\n          >\n            <span className={css(style.emoji)}>⬅️</span>Left Heavy\n          </div>\n          <div\n            className={css(\n              style.toolbarTab,\n              this.props.viewMode === ViewMode.SANDWICH_VIEW && style.toolbarTabActive,\n            )}\n            onClick={this.setSandwichView}\n          >\n            <span className={css(style.emoji)}>🥪</span>Sandwich\n          </div>\n          {help}\n        </div>\n        {this.props.profile.getName()}\n      </div>\n    )\n  }\n}\n\ninterface GLCanvasProps {\n  setCanvasContext(canvasContext: CanvasContext | null): void\n}\nexport class GLCanvas extends ReloadableComponent<GLCanvasProps, void> {\n  private canvas: HTMLCanvasElement | null = null\n  private canvasContext: CanvasContext | null = null\n\n  private ref = (canvas?: Element) => {\n    if (canvas instanceof HTMLCanvasElement) {\n      this.canvas = canvas\n      this.canvasContext = new CanvasContext(canvas)\n    } else {\n      this.canvas = null\n      this.canvasContext = null\n    }\n    this.props.setCanvasContext(this.canvasContext)\n  }\n\n  private maybeResize() {\n    if (!this.canvas) return\n    let {width, height} = this.canvas.getBoundingClientRect()\n    width = Math.floor(width) * window.devicePixelRatio\n    height = Math.floor(height) * window.devicePixelRatio\n\n    // Still initializing: don't resize yet\n    if (width < 4 || height < 4) return\n    const oldWidth = this.canvas.width\n    const oldHeight = this.canvas.height\n\n    // Already at the right size\n    if (width === oldWidth && height === oldHeight) return\n\n    this.canvas.width = width\n    this.canvas.height = height\n  }\n\n  onWindowResize = () => {\n    this.maybeResize()\n    window.addEventListener('resize', this.onWindowResize)\n  }\n  componentDidMount() {\n    window.addEventListener('resize', this.onWindowResize)\n    requestAnimationFrame(() => this.maybeResize())\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResize)\n  }\n\n  render() {\n    return <canvas className={css(style.glCanvasView)} ref={this.ref} width={1} height={1} />\n  }\n}\n\nexport class Application extends ReloadableComponent<{}, ApplicationState> {\n  hashParams: HashParams\n\n  constructor() {\n    super()\n    this.hashParams = getHashParams()\n    this.state = {\n      // Start out at a loading state if we know that we'll immediately be fetching a profile to\n      // view.\n      loading: this.hashParams.profileURL != null,\n      dragActive: false,\n      error: false,\n      profile: null,\n      activeProfile: null,\n      flattenRecursion: false,\n\n      chronoFlamechart: null,\n      chronoFlamechartRenderer: null,\n\n      leftHeavyFlamegraph: null,\n      leftHeavyFlamegraphRenderer: null,\n\n      tableSortMethod: {\n        field: SortField.SELF,\n        direction: SortDirection.DESCENDING,\n      },\n\n      viewMode: ViewMode.CHRONO_FLAME_CHART,\n    }\n  }\n\n  serialize() {\n    const result = super.serialize()\n    delete result.state.chronoFlamechartRenderer\n    delete result.state.leftHeavyFlamegraphRenderer\n    return result\n  }\n\n  rehydrate(serialized: SerializedComponent<ApplicationState>) {\n    super.rehydrate(serialized)\n    const {chronoFlamechart, leftHeavyFlamegraph} = serialized.state\n    if (this.canvasContext && this.rowAtlas && chronoFlamechart && leftHeavyFlamegraph) {\n      this.setState({\n        chronoFlamechartRenderer: new FlamechartRenderer(\n          this.canvasContext,\n          this.rowAtlas,\n          chronoFlamechart,\n        ),\n        leftHeavyFlamegraphRenderer: new FlamechartRenderer(\n          this.canvasContext,\n          this.rowAtlas,\n          leftHeavyFlamegraph,\n        ),\n      })\n    }\n  }\n\n  async loadProfile(loader: () => Promise<Profile | null>) {\n    await new Promise(resolve => this.setState({loading: true}, resolve))\n    await new Promise(resolve => setTimeout(resolve, 0))\n\n    if (!this.canvasContext || !this.rowAtlas) return\n\n    console.time('import')\n\n    let profile: Profile | null = null\n    try {\n      profile = await loader()\n    } catch (e) {\n      alert('Failed to load format. See console for details')\n      console.log(e)\n      this.setState({error: true})\n      return\n    }\n\n    if (profile == null) {\n      // TODO(jlfwong): Make this a nicer overlay\n      alert('Unrecognized format! See documentation about supported formats.')\n      return\n    }\n\n    await profile.demangle()\n\n    const title = this.hashParams.title || profile.getName()\n    profile.setName(title)\n\n    await this.setActiveProfile(profile)\n\n    console.timeEnd('import')\n    this.setState({profile})\n  }\n\n  async setActiveProfile(profile: Profile) {\n    if (!this.canvasContext || !this.rowAtlas) return\n\n    document.title = `${profile.getName()} - speedscope`\n\n    const frames: Frame[] = []\n    profile.forEachFrame(f => frames.push(f))\n    function key(f: Frame) {\n      return (f.file || '') + f.name\n    }\n    function compare(a: Frame, b: Frame) {\n      return key(a) > key(b) ? 1 : -1\n    }\n    frames.sort(compare)\n    const frameToColorBucket = new Map<string | number, number>()\n    for (let i = 0; i < frames.length; i++) {\n      frameToColorBucket.set(frames[i].key, Math.floor(255 * i / frames.length))\n    }\n    function getColorBucketForFrame(frame: Frame) {\n      return frameToColorBucket.get(frame.key) || 0\n    }\n\n    const chronoFlamechart = new Flamechart({\n      getTotalWeight: profile.getTotalWeight.bind(profile),\n      forEachCall: profile.forEachCall.bind(profile),\n      formatValue: profile.formatValue.bind(profile),\n      getColorBucketForFrame,\n    })\n    const chronoFlamechartRenderer = new FlamechartRenderer(\n      this.canvasContext,\n      this.rowAtlas,\n      chronoFlamechart,\n    )\n\n    const leftHeavyFlamegraph = new Flamechart({\n      getTotalWeight: profile.getTotalNonIdleWeight.bind(profile),\n      forEachCall: profile.forEachCallGrouped.bind(profile),\n      formatValue: profile.formatValue.bind(profile),\n      getColorBucketForFrame,\n    })\n    const leftHeavyFlamegraphRenderer = new FlamechartRenderer(\n      this.canvasContext,\n      this.rowAtlas,\n      leftHeavyFlamegraph,\n    )\n\n    await new Promise(resolve => {\n      this.setState(\n        {\n          activeProfile: profile,\n\n          chronoFlamechart,\n          chronoFlamechartRenderer,\n\n          leftHeavyFlamegraph,\n          leftHeavyFlamegraphRenderer,\n\n          loading: false,\n        },\n        resolve,\n      )\n    })\n  }\n\n  loadFromFile(file: File) {\n    this.loadProfile(\n      () =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.addEventListener('loadend', () => {\n            const profile = importProfile(file.name, reader.result)\n            if (profile) {\n              if (!profile.getName()) {\n                profile.setName(file.name)\n              }\n              resolve(profile)\n              return\n            }\n\n            if (this.state.profile) {\n              // If a profile is already loaded, it's possible the file being imported is\n              // a symbol map. If that's the case, we want to parse it, and apply the symbol\n              // mapping to the already loaded profile. This can be use to take an opaque\n              // profile and make it readable.\n              const map = importAsmJsSymbolMap(reader.result)\n              if (map) {\n                console.log('Importing as asm.js symbol map')\n                let profile = this.state.profile\n                profile.remapNames(name => map.get(name) || name)\n                resolve(profile)\n                return\n              }\n            }\n\n            reject()\n          })\n          reader.readAsText(file)\n        }),\n    )\n  }\n\n  loadExample = () => {\n    this.loadProfile(async () => {\n      const filename = 'perf-vertx-stacks-01-collapsed-all.txt'\n      return await fetch(exampleProfileURL)\n        .then(resp => resp.text())\n        .then(data => importProfile(filename, data))\n    })\n  }\n\n  onDrop = (ev: DragEvent) => {\n    this.setState({dragActive: false})\n    ev.preventDefault()\n\n    const firstItem = ev.dataTransfer.items[0]\n    if ('webkitGetAsEntry' in firstItem) {\n      const webkitEntry: FileSystemDirectoryEntry = firstItem.webkitGetAsEntry()\n\n      // Instrument.app file format is actually a directory.\n      if (webkitEntry.isDirectory && webkitEntry.name.endsWith('.trace')) {\n        console.log('Importing as Instruments.app .trace file')\n        this.loadProfile(async () => await importFromInstrumentsTrace(webkitEntry))\n        return\n      }\n    }\n\n    let file: File | null = ev.dataTransfer.files.item(0)\n    if (file) {\n      this.loadFromFile(file)\n    }\n  }\n\n  onDragOver = (ev: DragEvent) => {\n    this.setState({dragActive: true})\n    ev.preventDefault()\n  }\n\n  onDragLeave = (ev: DragEvent) => {\n    this.setState({dragActive: false})\n    ev.preventDefault()\n  }\n\n  onWindowKeyPress = async (ev: KeyboardEvent) => {\n    if (ev.key === '1') {\n      this.setState({\n        viewMode: ViewMode.CHRONO_FLAME_CHART,\n      })\n    } else if (ev.key === '2') {\n      this.setState({\n        viewMode: ViewMode.LEFT_HEAVY_FLAME_GRAPH,\n      })\n    } else if (ev.key === '3') {\n      this.setState({\n        viewMode: ViewMode.SANDWICH_VIEW,\n      })\n    } else if (ev.key === 'r') {\n      const {flattenRecursion, profile} = this.state\n      if (!profile) return\n      if (flattenRecursion) {\n        await this.setActiveProfile(profile)\n        this.setState({flattenRecursion: false})\n      } else {\n        await this.setActiveProfile(profile.getProfileWithRecursionFlattened())\n        this.setState({flattenRecursion: true})\n      }\n    }\n  }\n\n  onDocumentPaste = (ev: Event) => {\n    ev.preventDefault()\n    ev.stopPropagation()\n\n    const pasted = (ev as ClipboardEvent).clipboardData.getData('text')\n    this.loadProfile(async () => importProfile('From Clipboard', pasted))\n  }\n\n  componentDidMount() {\n    window.addEventListener('keypress', this.onWindowKeyPress)\n    document.addEventListener('paste', this.onDocumentPaste)\n    this.maybeLoadHashParamProfile()\n  }\n\n  async maybeLoadHashParamProfile() {\n    if (this.hashParams.profileURL) {\n      this.loadProfile(async () => {\n        const response = await fetch(this.hashParams.profileURL!)\n        let filename = new URL(this.hashParams.profileURL!).pathname\n        if (filename.includes('/')) {\n          filename = filename.slice(filename.lastIndexOf('/') + 1)\n        }\n        return await importProfile(filename, await response.text())\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keypress', this.onWindowKeyPress)\n    document.removeEventListener('paste', this.onDocumentPaste)\n  }\n\n  flamechartView: FlamechartView | null = null\n  flamechartRef = (view: FlamechartView | null) => (this.flamechartView = view)\n  subcomponents() {\n    return {\n      flamechart: this.flamechartView,\n    }\n  }\n\n  onFileSelect = (ev: Event) => {\n    const file = (ev.target as HTMLInputElement).files!.item(0)\n    if (file) {\n      this.loadFromFile(file)\n    }\n  }\n\n  renderLanding() {\n    return (\n      <div className={css(style.landingContainer)}>\n        <div className={css(style.landingMessage)}>\n          <p className={css(style.landingP)}>\n            👋 Hi there! Welcome to 🔬speedscope, an interactive{' '}\n            <a\n              className={css(style.link)}\n              href=\"http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html\"\n            >\n              flamegraph\n            </a>{' '}\n            visualizer. Use it to help you make your software faster.\n          </p>\n          <p className={css(style.landingP)}>\n            Drag and drop a profile file onto this window to get started, click the big blue button\n            below to browse for a profile to explore, or{' '}\n            <a className={css(style.link)} onClick={this.loadExample}>\n              click here\n            </a>{' '}\n            to load an example profile.\n          </p>\n\n          <div className={css(style.browseButtonContainer)}>\n            <input\n              type=\"file\"\n              name=\"file\"\n              id=\"file\"\n              onChange={this.onFileSelect}\n              className={css(style.hide)}\n            />\n            <label for=\"file\" className={css(style.browseButton)}>\n              Browse\n            </label>\n          </div>\n\n          <p className={css(style.landingP)}>\n            See the{' '}\n            <a\n              className={css(style.link)}\n              href=\"https://github.com/jlfwong/speedscope#usage\"\n              target=\"_blank\"\n            >\n              documentation\n            </a>{' '}\n            for information about supported file formats, keyboard shortcuts, and how to navigate\n            around the profile.\n          </p>\n\n          <p className={css(style.landingP)}>\n            speedscope is open source. Please{' '}\n            <a\n              className={css(style.link)}\n              target=\"_blank\"\n              href=\"https://github.com/jlfwong/speedscope/issues\"\n            >\n              report any issues on GitHub\n            </a>.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  renderError() {\n    return (\n      <div className={css(style.error)}>\n        <div>😿 Something went wrong.</div>\n        <div>Check the JS console for more details.</div>\n      </div>\n    )\n  }\n\n  renderLoadingBar() {\n    return <div className={css(style.loading)} />\n  }\n\n  setViewMode = (viewMode: ViewMode) => {\n    this.setState({viewMode})\n  }\n\n  setTableSortMethod = (tableSortMethod: SortMethod) => {\n    this.setState({tableSortMethod})\n  }\n\n  private canvasContext: CanvasContext | null = null\n  private rowAtlas: RowAtlas<FlamechartRowAtlasKey> | null = null\n  private setCanvasContext = (canvasContext: CanvasContext | null) => {\n    this.canvasContext = canvasContext\n    if (canvasContext) {\n      this.rowAtlas = new RowAtlas(canvasContext)\n    } else {\n      this.rowAtlas = null\n    }\n  }\n\n  getColorBucketForFrame = (frame: Frame): number => {\n    const {chronoFlamechart} = this.state\n    if (!chronoFlamechart) return 0\n    return chronoFlamechart.getColorBucketForFrame(frame)\n  }\n\n  getCSSColorForFrame = (frame: Frame): string => {\n    const {chronoFlamechart} = this.state\n    if (!chronoFlamechart) return '#FFFFFF'\n\n    const t = chronoFlamechart.getColorBucketForFrame(frame) / 255\n\n    const x = triangle(30.0 * t)\n    const H = 360.0 * (0.9 * t)\n    const C = 0.25 + 0.2 * x\n    const L = 0.8 - 0.15 * x\n    return Color.fromLumaChromaHue(L, C, H).toCSS()\n  }\n\n  renderContent() {\n    const {viewMode} = this.state\n\n    if (this.state.error) {\n      return this.renderError()\n    }\n\n    if (this.state.loading) {\n      return this.renderLoadingBar()\n    }\n\n    if (!this.state.activeProfile) {\n      return this.renderLanding()\n    }\n\n    if (!this.canvasContext) {\n      throw new Error('Missing canvas context')\n    }\n\n    switch (viewMode) {\n      case ViewMode.CHRONO_FLAME_CHART: {\n        const {chronoFlamechart, chronoFlamechartRenderer} = this.state\n        if (!chronoFlamechart || !chronoFlamechartRenderer)\n          throw new Error('Missing dependencies for chrono flame chart')\n        return (\n          <FlamechartView\n            canvasContext={this.canvasContext}\n            flamechartRenderer={chronoFlamechartRenderer}\n            ref={this.flamechartRef}\n            flamechart={chronoFlamechart}\n            getCSSColorForFrame={this.getCSSColorForFrame}\n          />\n        )\n      }\n      case ViewMode.LEFT_HEAVY_FLAME_GRAPH: {\n        const {leftHeavyFlamegraph, leftHeavyFlamegraphRenderer} = this.state\n        if (!leftHeavyFlamegraph || !leftHeavyFlamegraphRenderer)\n          throw new Error('Missing dependencies for left heavy flame graph')\n        return (\n          <FlamechartView\n            canvasContext={this.canvasContext}\n            flamechartRenderer={leftHeavyFlamegraphRenderer}\n            ref={this.flamechartRef}\n            flamechart={leftHeavyFlamegraph}\n            getCSSColorForFrame={this.getCSSColorForFrame}\n          />\n        )\n      }\n      case ViewMode.SANDWICH_VIEW: {\n        if (!this.rowAtlas || !this.state.profile) return null\n        return (\n          <SandwichView\n            profile={this.state.profile}\n            flattenRecursion={this.state.flattenRecursion}\n            getColorBucketForFrame={this.getColorBucketForFrame}\n            getCSSColorForFrame={this.getCSSColorForFrame}\n            sortMethod={this.state.tableSortMethod}\n            setSortMethod={this.setTableSortMethod}\n            canvasContext={this.canvasContext}\n            rowAtlas={this.rowAtlas}\n          />\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div\n        onDrop={this.onDrop}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        className={css(style.root, this.state.dragActive && style.dragTargetRoot)}\n      >\n        <GLCanvas setCanvasContext={this.setCanvasContext} />\n        <Toolbar setViewMode={this.setViewMode} {...this.state} />\n        <div className={css(style.contentContainer)}>{this.renderContent()}</div>\n        {this.state.dragActive && <div className={css(style.dragTarget)} />}\n      </div>\n    )\n  }\n}\n\nconst style = StyleSheet.create({\n  glCanvasView: {\n    position: 'absolute',\n    width: '100vw',\n    height: '100vh',\n    zIndex: -1,\n    pointerEvents: 'none',\n  },\n  error: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  loading: {\n    height: 3,\n    marginBottom: -3,\n    background: Colors.DARK_BLUE,\n    transformOrigin: '0% 50%',\n    animationName: [\n      {\n        from: {\n          transform: `scaleX(0)`,\n        },\n        to: {\n          transform: `scaleX(1)`,\n        },\n      },\n    ],\n    animationTimingFunction: 'cubic-bezier(0, 1, 0, 1)',\n    animationDuration: '30s',\n  },\n  root: {\n    width: '100vw',\n    height: '100vh',\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    fontFamily: FontFamily.MONOSPACE,\n    lineHeight: '20px',\n  },\n  dragTargetRoot: {\n    cursor: 'copy',\n  },\n  dragTarget: {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    border: `5px dashed ${Colors.DARK_BLUE}`,\n    pointerEvents: 'none',\n  },\n  contentContainer: {\n    position: 'relative',\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    flex: 1,\n  },\n  landingContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  landingMessage: {\n    maxWidth: 600,\n  },\n  landingP: {\n    marginBottom: 16,\n  },\n  hide: {\n    display: 'none',\n  },\n  browseButtonContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  browseButton: {\n    marginBottom: 16,\n    height: 72,\n    flex: 1,\n    maxWidth: 256,\n    textAlign: 'center',\n    fontSize: FontSize.BIG_BUTTON,\n    lineHeight: '72px',\n    background: Colors.DARK_BLUE,\n    color: Colors.WHITE,\n    cursor: 'pointer',\n  },\n  link: {\n    color: Colors.BRIGHT_BLUE,\n    cursor: 'pointer',\n    textDecoration: 'none',\n  },\n  toolbar: {\n    height: Sizes.TOOLBAR_HEIGHT,\n    flexShrink: 0,\n    background: Colors.BLACK,\n    color: Colors.WHITE,\n    textAlign: 'center',\n    fontFamily: FontFamily.MONOSPACE,\n    fontSize: FontSize.TITLE,\n    lineHeight: `${Sizes.TOOLBAR_TAB_HEIGHT}px`,\n    userSelect: 'none',\n  },\n  toolbarLeft: {\n    position: 'absolute',\n    height: Sizes.TOOLBAR_HEIGHT,\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    marginRight: 2,\n    textAlign: 'left',\n  },\n  toolbarRight: {\n    height: Sizes.TOOLBAR_HEIGHT,\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    marginRight: 2,\n    textAlign: 'right',\n  },\n  toolbarTab: {\n    background: Colors.DARK_GRAY,\n    marginTop: Sizes.SEPARATOR_HEIGHT,\n    height: Sizes.TOOLBAR_TAB_HEIGHT,\n    lineHeight: `${Sizes.TOOLBAR_TAB_HEIGHT}px`,\n    paddingLeft: 2,\n    paddingRight: 8,\n    display: 'inline-block',\n    marginLeft: 2,\n    ':hover': {\n      background: Colors.DARK_GRAY,\n      cursor: 'pointer',\n    },\n  },\n  toolbarTabActive: {\n    background: Colors.BRIGHT_BLUE,\n    ':hover': {\n      background: Colors.BRIGHT_BLUE,\n    },\n  },\n  noLinkStyle: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  emoji: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    paddingTop: '0px',\n    marginRight: '0.3em',\n  },\n})\n","import {h, render} from 'preact'\nimport {Application} from './application'\n\nlet app: Application | null = null\nconst retained = (window as any)['__retained__'] as any\ndeclare const module: any\nif (module.hot) {\n  module.hot.dispose(() => {\n    if (app) {\n      ;(window as any)['__retained__'] = app.serialize()\n    }\n  })\n  module.hot.accept()\n}\n\nfunction ref(instance: Application | null) {\n  app = instance\n  if (instance && retained) {\n    console.log('rehydrating: ', retained)\n    instance.rehydrate(retained)\n  }\n}\n\nrender(<Application ref={ref} />, document.body, document.body.lastElementChild || undefined)\n"]}